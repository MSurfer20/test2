<?php
/**
 * MissingArgumentErrorAllOf
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Zulip REST API
 *
 * Powerful open source group chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the MissingArgumentErrorAllOf model.
 *
 * ## Missing request parameter(s)  A typical failed JSON response for when a required request parameter is not supplied
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class MissingArgumentErrorAllOf 
{
        /**
     * @var AnyType|null
     * @SerializedName("result")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected $result;

    /**
     * @var AnyType|null
     * @SerializedName("msg")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected $msg;

    /**
     * @var AnyType|null
     * @SerializedName("code")
     * @Assert\Type("AnyType")
     * @Type("AnyType")
     */
    protected $code;

    /**
     * It contains the information about the missing parameter.
     *
     * @var string|null
     * @SerializedName("var_name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $varName;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->result = isset($data['result']) ? $data['result'] : null;
        $this->msg = isset($data['msg']) ? $data['msg'] : null;
        $this->code = isset($data['code']) ? $data['code'] : null;
        $this->varName = isset($data['varName']) ? $data['varName'] : null;
    }

    /**
     * Gets result.
     *
     * @return AnyType|null
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * Sets result.
     *
     * @param AnyType|null $result
     *
     * @return $this
     */
    public function setResult($result = null)
    {
        $this->result = $result;

        return $this;
    }

    /**
     * Gets msg.
     *
     * @return AnyType|null
     */
    public function getMsg()
    {
        return $this->msg;
    }

    /**
     * Sets msg.
     *
     * @param AnyType|null $msg
     *
     * @return $this
     */
    public function setMsg($msg = null)
    {
        $this->msg = $msg;

        return $this;
    }

    /**
     * Gets code.
     *
     * @return AnyType|null
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Sets code.
     *
     * @param AnyType|null $code
     *
     * @return $this
     */
    public function setCode($code = null)
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Gets varName.
     *
     * @return string|null
     */
    public function getVarName()
    {
        return $this->varName;
    }

    /**
     * Sets varName.
     *
     * @param string|null $varName  It contains the information about the missing parameter.
     *
     * @return $this
     */
    public function setVarName($varName = null)
    {
        $this->varName = $varName;

        return $this;
    }
}



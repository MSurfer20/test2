<?php
/**
 * RealmDomain
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Zulip REST API
 *
 * Powerful open source group chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RealmDomain model.
 *
 * Object containing details of the newly added domain.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class RealmDomain 
{
        /**
     * The new allowed domain.
     *
     * @var string|null
     * @SerializedName("domain")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $domain;

    /**
     * Whether subdomains are allowed for this domain.
     *
     * @var bool|null
     * @SerializedName("allow_subdomains")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $allowSubdomains;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->domain = isset($data['domain']) ? $data['domain'] : null;
        $this->allowSubdomains = isset($data['allowSubdomains']) ? $data['allowSubdomains'] : null;
    }

    /**
     * Gets domain.
     *
     * @return string|null
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * Sets domain.
     *
     * @param string|null $domain  The new allowed domain.
     *
     * @return $this
     */
    public function setDomain($domain = null)
    {
        $this->domain = $domain;

        return $this;
    }

    /**
     * Gets allowSubdomains.
     *
     * @return bool|null
     */
    public function isAllowSubdomains()
    {
        return $this->allowSubdomains;
    }

    /**
     * Sets allowSubdomains.
     *
     * @param bool|null $allowSubdomains  Whether subdomains are allowed for this domain.
     *
     * @return $this
     */
    public function setAllowSubdomains($allowSubdomains = null)
    {
        $this->allowSubdomains = $allowSubdomains;

        return $this;
    }
}



<?php
/**
 * EmojiReactionBaseUser
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Zulip REST API
 *
 * Powerful open source group chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the EmojiReactionBaseUser model.
 *
 * Dictionary with data on the user who added the reaction, including the user ID as the &#x60;id&#x60; field.  **Note**: In the [events API](/api/get-events), this &#x60;user&#x60; dictionary confusing had the user ID in a field called &#x60;user_id&#x60; instead.  We recommend ignoring fields other than the user ID.  **Deprecated** and to be removed in a future release once core clients have migrated to use the &#x60;user_id&#x60; field.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class EmojiReactionBaseUser 
{
        /**
     * ID of the user.
     *
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * Email of the user.
     *
     * @var string|null
     * @SerializedName("email")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $email;

    /**
     * Full name of the user.
     *
     * @var string|null
     * @SerializedName("full_name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $fullName;

    /**
     * Whether the user is a mirror dummy.
     *
     * @var bool|null
     * @SerializedName("is_mirror_dummy")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $isMirrorDummy;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->email = isset($data['email']) ? $data['email'] : null;
        $this->fullName = isset($data['fullName']) ? $data['fullName'] : null;
        $this->isMirrorDummy = isset($data['isMirrorDummy']) ? $data['isMirrorDummy'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id  ID of the user.
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets email.
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Sets email.
     *
     * @param string|null $email  Email of the user.
     *
     * @return $this
     */
    public function setEmail($email = null)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Gets fullName.
     *
     * @return string|null
     */
    public function getFullName()
    {
        return $this->fullName;
    }

    /**
     * Sets fullName.
     *
     * @param string|null $fullName  Full name of the user.
     *
     * @return $this
     */
    public function setFullName($fullName = null)
    {
        $this->fullName = $fullName;

        return $this;
    }

    /**
     * Gets isMirrorDummy.
     *
     * @return bool|null
     */
    public function isIsMirrorDummy()
    {
        return $this->isMirrorDummy;
    }

    /**
     * Sets isMirrorDummy.
     *
     * @param bool|null $isMirrorDummy  Whether the user is a mirror dummy.
     *
     * @return $this
     */
    public function setIsMirrorDummy($isMirrorDummy = null)
    {
        $this->isMirrorDummy = $isMirrorDummy;

        return $this;
    }
}



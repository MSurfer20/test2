<?php
/**
 * RealmExport
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Zulip REST API
 *
 * Powerful open source group chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RealmExport model.
 *
 * Object containing details about a realm export.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class RealmExport 
{
        /**
     * The id of the export.
     *
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * The id of the user who did the export.
     *
     * @var int|null
     * @SerializedName("acting_user_id")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $actingUserId;

    /**
     * The UNIX timestamp of when the export was made.
     *
     * @var float|null
     * @SerializedName("export_time")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $exportTime;

    /**
     * The timestamp of when the export was deleted. Null if it wasn&#39;t.
     *
     * @var float|null
     * @SerializedName("deleted_timestamp")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $deletedTimestamp;

    /**
     * The timestamp of when the export failed. Null if it didn&#39;t.
     *
     * @var float|null
     * @SerializedName("failed_timestamp")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $failedTimestamp;

    /**
     * The URL of the export. &#x60;null&#x60; if there&#39;s no URL.
     *
     * @var string|null
     * @SerializedName("export_url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $exportUrl;

    /**
     * Whether the export is pending or not.
     *
     * @var bool|null
     * @SerializedName("pending")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $pending;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->actingUserId = isset($data['actingUserId']) ? $data['actingUserId'] : null;
        $this->exportTime = isset($data['exportTime']) ? $data['exportTime'] : null;
        $this->deletedTimestamp = isset($data['deletedTimestamp']) ? $data['deletedTimestamp'] : null;
        $this->failedTimestamp = isset($data['failedTimestamp']) ? $data['failedTimestamp'] : null;
        $this->exportUrl = isset($data['exportUrl']) ? $data['exportUrl'] : null;
        $this->pending = isset($data['pending']) ? $data['pending'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id  The id of the export.
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets actingUserId.
     *
     * @return int|null
     */
    public function getActingUserId()
    {
        return $this->actingUserId;
    }

    /**
     * Sets actingUserId.
     *
     * @param int|null $actingUserId  The id of the user who did the export.
     *
     * @return $this
     */
    public function setActingUserId($actingUserId = null)
    {
        $this->actingUserId = $actingUserId;

        return $this;
    }

    /**
     * Gets exportTime.
     *
     * @return float|null
     */
    public function getExportTime()
    {
        return $this->exportTime;
    }

    /**
     * Sets exportTime.
     *
     * @param float|null $exportTime  The UNIX timestamp of when the export was made.
     *
     * @return $this
     */
    public function setExportTime($exportTime = null)
    {
        $this->exportTime = $exportTime;

        return $this;
    }

    /**
     * Gets deletedTimestamp.
     *
     * @return float|null
     */
    public function getDeletedTimestamp()
    {
        return $this->deletedTimestamp;
    }

    /**
     * Sets deletedTimestamp.
     *
     * @param float|null $deletedTimestamp  The timestamp of when the export was deleted. Null if it wasn't.
     *
     * @return $this
     */
    public function setDeletedTimestamp($deletedTimestamp = null)
    {
        $this->deletedTimestamp = $deletedTimestamp;

        return $this;
    }

    /**
     * Gets failedTimestamp.
     *
     * @return float|null
     */
    public function getFailedTimestamp()
    {
        return $this->failedTimestamp;
    }

    /**
     * Sets failedTimestamp.
     *
     * @param float|null $failedTimestamp  The timestamp of when the export failed. Null if it didn't.
     *
     * @return $this
     */
    public function setFailedTimestamp($failedTimestamp = null)
    {
        $this->failedTimestamp = $failedTimestamp;

        return $this;
    }

    /**
     * Gets exportUrl.
     *
     * @return string|null
     */
    public function getExportUrl()
    {
        return $this->exportUrl;
    }

    /**
     * Sets exportUrl.
     *
     * @param string|null $exportUrl  The URL of the export. `null` if there's no URL.
     *
     * @return $this
     */
    public function setExportUrl($exportUrl = null)
    {
        $this->exportUrl = $exportUrl;

        return $this;
    }

    /**
     * Gets pending.
     *
     * @return bool|null
     */
    public function isPending()
    {
        return $this->pending;
    }

    /**
     * Sets pending.
     *
     * @param bool|null $pending  Whether the export is pending or not.
     *
     * @return $this
     */
    public function setPending($pending = null)
    {
        $this->pending = $pending;

        return $this;
    }
}



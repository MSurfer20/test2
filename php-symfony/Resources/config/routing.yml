# NOTE: This file is auto generated by the openapi generator program.
# https://github.com/openapitools/openapi-generator
# Do not edit the class manually.

# authentication
open_api_server_authentication_devfetchapikey:
    path:     /dev_fetch_api_key
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.authentication:devFetchApiKeyAction

open_api_server_authentication_fetchapikey:
    path:     /fetch_api_key
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.authentication:fetchApiKeyAction

# messages
open_api_server_messages_addreaction:
    path:     /messages/{message_id}/reactions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:addReactionAction
    requirements:
        messageId: '\d+'

open_api_server_messages_checkmessagesmatchnarrow:
    path:     /messages/matches_narrow
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.messages:checkMessagesMatchNarrowAction

open_api_server_messages_deletemessage:
    path:     /messages/{message_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.messages:deleteMessageAction
    requirements:
        messageId: '\d+'

open_api_server_messages_getfiletemporaryurl:
    path:     /user_uploads/{realm_id_str}/{filename}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.messages:getFileTemporaryUrlAction
    requirements:
        realmIdStr: '\d+'
        filename: '[a-z0-9]+'

open_api_server_messages_getmessagehistory:
    path:     /messages/{message_id}/history
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.messages:getMessageHistoryAction
    requirements:
        messageId: '\d+'

open_api_server_messages_getmessages:
    path:     /messages
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.messages:getMessagesAction

open_api_server_messages_getrawmessage:
    path:     /messages/{message_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.messages:getRawMessageAction
    requirements:
        messageId: '\d+'

open_api_server_messages_markallasread:
    path:     /mark_all_as_read
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:markAllAsReadAction

open_api_server_messages_markstreamasread:
    path:     /mark_stream_as_read
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:markStreamAsReadAction

open_api_server_messages_marktopicasread:
    path:     /mark_topic_as_read
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:markTopicAsReadAction

open_api_server_messages_removereaction:
    path:     /messages/{message_id}/reactions
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.messages:removeReactionAction
    requirements:
        messageId: '\d+'

open_api_server_messages_rendermessage:
    path:     /messages/render
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:renderMessageAction

open_api_server_messages_sendmessage:
    path:     /messages
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:sendMessageAction

open_api_server_messages_updatemessage:
    path:     /messages/{message_id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.messages:updateMessageAction
    requirements:
        messageId: '\d+'

open_api_server_messages_updatemessageflags:
    path:     /messages/flags
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:updateMessageFlagsAction

open_api_server_messages_uploadfile:
    path:     /user_uploads
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.messages:uploadFileAction

# realTimeEvents
open_api_server_realTimeEvents_deletequeue:
    path:     /events
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.realTimeEvents:deleteQueueAction

open_api_server_realTimeEvents_getevents:
    path:     /events
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.realTimeEvents:getEventsAction

open_api_server_realTimeEvents_realtimepost:
    path:     /real-time
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.realTimeEvents:realTimePostAction

open_api_server_realTimeEvents_registerqueue:
    path:     /register
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.realTimeEvents:registerQueueAction

open_api_server_realTimeEvents_resterrorhandling:
    path:     /rest-error-handling
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.realTimeEvents:restErrorHandlingAction

# serverAndOrganizations
open_api_server_serverAndOrganizations_addcodeplayground:
    path:     /realm/playgrounds
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:addCodePlaygroundAction

open_api_server_serverAndOrganizations_addlinkifier:
    path:     /realm/filters
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:addLinkifierAction

open_api_server_serverAndOrganizations_createcustomprofilefield:
    path:     /realm/profile_fields
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:createCustomProfileFieldAction

open_api_server_serverAndOrganizations_getcustomemoji:
    path:     /realm/emoji
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:getCustomEmojiAction

open_api_server_serverAndOrganizations_getcustomprofilefields:
    path:     /realm/profile_fields
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:getCustomProfileFieldsAction

open_api_server_serverAndOrganizations_getlinkifiers:
    path:     /realm/linkifiers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:getLinkifiersAction

open_api_server_serverAndOrganizations_getserversettings:
    path:     /server_settings
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:getServerSettingsAction

open_api_server_serverAndOrganizations_removecodeplayground:
    path:     /realm/playgrounds/{playground_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:removeCodePlaygroundAction
    requirements:
        playgroundId: '\d+'

open_api_server_serverAndOrganizations_removelinkifier:
    path:     /realm/filters/{filter_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:removeLinkifierAction
    requirements:
        filterId: '\d+'

open_api_server_serverAndOrganizations_reordercustomprofilefields:
    path:     /realm/profile_fields
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:reorderCustomProfileFieldsAction

open_api_server_serverAndOrganizations_updatelinkifier:
    path:     /realm/filters/{filter_id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:updateLinkifierAction
    requirements:
        filterId: '\d+'

open_api_server_serverAndOrganizations_uploadcustomemoji:
    path:     /realm/emoji/{emoji_name}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.serverAndOrganizations:uploadCustomEmojiAction
    requirements:
        emojiName: '[a-z0-9]+'

# streams
open_api_server_streams_archivestream:
    path:     /streams/{stream_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.streams:archiveStreamAction
    requirements:
        streamId: '\d+'

open_api_server_streams_createbigbluebuttonvideocall:
    path:     /calls/bigbluebutton/create
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.streams:createBigBlueButtonVideoCallAction

open_api_server_streams_getstreamid:
    path:     /get_stream_id
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.streams:getStreamIdAction

open_api_server_streams_getstreamtopics:
    path:     /users/me/{stream_id}/topics
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.streams:getStreamTopicsAction
    requirements:
        streamId: '\d+'

open_api_server_streams_getstreams:
    path:     /streams
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.streams:getStreamsAction

open_api_server_streams_getsubscriptionstatus:
    path:     /users/{user_id}/subscriptions/{stream_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.streams:getSubscriptionStatusAction
    requirements:
        userId: '\d+'
        streamId: '\d+'

open_api_server_streams_getsubscriptions:
    path:     /users/me/subscriptions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.streams:getSubscriptionsAction

open_api_server_streams_mutetopic:
    path:     /users/me/subscriptions/muted_topics
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.streams:muteTopicAction

open_api_server_streams_subscribe:
    path:     /users/me/subscriptions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.streams:subscribeAction

open_api_server_streams_unsubscribe:
    path:     /users/me/subscriptions
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.streams:unsubscribeAction

open_api_server_streams_updatestream:
    path:     /streams/{stream_id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.streams:updateStreamAction
    requirements:
        streamId: '\d+'

open_api_server_streams_updatesubscriptionsettings:
    path:     /users/me/subscriptions/properties
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.streams:updateSubscriptionSettingsAction

open_api_server_streams_updatesubscriptions:
    path:     /users/me/subscriptions
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.streams:updateSubscriptionsAction

# users
open_api_server_users_createuser:
    path:     /users
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.users:createUserAction

open_api_server_users_createusergroup:
    path:     /user_groups/create
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.users:createUserGroupAction

open_api_server_users_deactivateownuser:
    path:     /users/me
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.users:deactivateOwnUserAction

open_api_server_users_deactivateuser:
    path:     /users/{user_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.users:deactivateUserAction
    requirements:
        userId: '\d+'

open_api_server_users_getattachments:
    path:     /attachments
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.users:getAttachmentsAction

open_api_server_users_getownuser:
    path:     /users/me
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.users:getOwnUserAction

open_api_server_users_getuser:
    path:     /users/{user_id}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.users:getUserAction
    requirements:
        userId: '\d+'

open_api_server_users_getuserbyemail:
    path:     /users/{email}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.users:getUserByEmailAction
    requirements:
        email: '[a-z0-9]+'

open_api_server_users_getusergroups:
    path:     /user_groups
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.users:getUserGroupsAction

open_api_server_users_getuserpresence:
    path:     /users/{user_id_or_email}/presence
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.users:getUserPresenceAction
    requirements:
        userIdOrEmail: '[a-z0-9]+'

open_api_server_users_getusers:
    path:     /users
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.users:getUsersAction

open_api_server_users_muteuser:
    path:     /users/me/muted_users/{muted_user_id}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.users:muteUserAction
    requirements:
        mutedUserId: '\d+'

open_api_server_users_reactivateuser:
    path:     /users/{user_id}/reactivate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.users:reactivateUserAction
    requirements:
        userId: '\d+'

open_api_server_users_removeusergroup:
    path:     /user_groups/{user_group_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.users:removeUserGroupAction
    requirements:
        userGroupId: '\d+'

open_api_server_users_settypingstatus:
    path:     /typing
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.users:setTypingStatusAction

open_api_server_users_unmuteuser:
    path:     /users/me/muted_users/{muted_user_id}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.users:unmuteUserAction
    requirements:
        mutedUserId: '\d+'

open_api_server_users_updatedisplaysettings:
    path:     /settings/display
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.users:updateDisplaySettingsAction

open_api_server_users_updatenotificationsettings:
    path:     /settings/notifications
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.users:updateNotificationSettingsAction

open_api_server_users_updateuser:
    path:     /users/{user_id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.users:updateUserAction
    requirements:
        userId: '\d+'

open_api_server_users_updateusergroup:
    path:     /user_groups/{user_group_id}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.users:updateUserGroupAction
    requirements:
        userGroupId: '\d+'

open_api_server_users_updateusergroupmembers:
    path:     /user_groups/{user_group_id}/members
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.users:updateUserGroupMembersAction
    requirements:
        userGroupId: '\d+'

# webhooks
open_api_server_webhooks_zulipoutgoingwebhooks:
    path:     /zulip-outgoing-webhook
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.webhooks:zulipOutgoingWebhooksAction


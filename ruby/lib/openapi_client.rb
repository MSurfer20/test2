=begin
#Zulip REST API

#Powerful open source group chat 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0

=end

# Common files
require 'openapi_client/api_client'
require 'openapi_client/api_error'
require 'openapi_client/version'
require 'openapi_client/configuration'

# Models
require 'openapi_client/models/add_subscriptions_response'
require 'openapi_client/models/add_subscriptions_response_all_of'
require 'openapi_client/models/api_key_response'
require 'openapi_client/models/api_key_response_all_of'
require 'openapi_client/models/attachments'
require 'openapi_client/models/attachments_messages'
require 'openapi_client/models/bad_event_queue_id_error'
require 'openapi_client/models/bad_event_queue_id_error_all_of'
require 'openapi_client/models/basic_bot'
require 'openapi_client/models/basic_bot_all_of'
require 'openapi_client/models/basic_bot_base'
require 'openapi_client/models/basic_stream'
require 'openapi_client/models/basic_stream_all_of'
require 'openapi_client/models/basic_stream_base'
require 'openapi_client/models/bot'
require 'openapi_client/models/bot_all_of'
require 'openapi_client/models/coded_error'
require 'openapi_client/models/coded_error_all_of'
require 'openapi_client/models/coded_error_base'
require 'openapi_client/models/coded_error_base_all_of'
require 'openapi_client/models/custom_profile_field'
require 'openapi_client/models/default_stream_group'
require 'openapi_client/models/emoji_reaction'
require 'openapi_client/models/emoji_reaction_all_of'
require 'openapi_client/models/emoji_reaction_base'
require 'openapi_client/models/emoji_reaction_base_user'
require 'openapi_client/models/get_messages'
require 'openapi_client/models/get_messages_all_of'
require 'openapi_client/models/hotspot'
require 'openapi_client/models/inline_response200'
require 'openapi_client/models/invalid_api_key_error'
require 'openapi_client/models/invalid_message_error'
require 'openapi_client/models/invalid_message_error_all_of'
require 'openapi_client/models/json_error'
require 'openapi_client/models/json_error_base'
require 'openapi_client/models/json_error_base_all_of'
require 'openapi_client/models/json_response_base'
require 'openapi_client/models/json_success'
require 'openapi_client/models/json_success_all_of'
require 'openapi_client/models/json_success_base'
require 'openapi_client/models/json_success_base_all_of'
require 'openapi_client/models/messages'
require 'openapi_client/models/messages_all_of'
require 'openapi_client/models/messages_base'
require 'openapi_client/models/messages_base_topic_links'
require 'openapi_client/models/missing_argument_error'
require 'openapi_client/models/missing_argument_error_all_of'
require 'openapi_client/models/non_existing_stream_error'
require 'openapi_client/models/non_existing_stream_error_all_of'
require 'openapi_client/models/presence'
require 'openapi_client/models/rate_limited_error'
require 'openapi_client/models/realm_deactivated_error'
require 'openapi_client/models/realm_domain'
require 'openapi_client/models/realm_emoji'
require 'openapi_client/models/realm_export'
require 'openapi_client/models/realm_playground'
require 'openapi_client/models/subscriptions'
require 'openapi_client/models/user'
require 'openapi_client/models/user_all_of'
require 'openapi_client/models/user_base'
require 'openapi_client/models/user_deactivated_error'
require 'openapi_client/models/user_group'
require 'openapi_client/models/user_not_authorized_error'

# APIs
require 'openapi_client/api/authentication_api'
require 'openapi_client/api/messages_api'
require 'openapi_client/api/real_time_events_api'
require 'openapi_client/api/server_and_organizations_api'
require 'openapi_client/api/streams_api'
require 'openapi_client/api/users_api'
require 'openapi_client/api/webhooks_api'

module OpenapiClient
  class << self
    # Customize default settings for the SDK using block.
    #   OpenapiClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end

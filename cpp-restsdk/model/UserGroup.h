/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserGroup.h
 *
 * Object containing the user group&#39;s attributes. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UserGroup_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UserGroup_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Object containing the user group&#39;s attributes. 
/// </summary>
class  UserGroup
    : public ModelBase
{
public:
    UserGroup();
    virtual ~UserGroup();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UserGroup members

    /// <summary>
    /// The name of the user group. 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// The description of the user group. 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// Array containing the id of the users who are members of this user group. 
    /// </summary>
    std::vector<int32_t>& getMembers();
    bool membersIsSet() const;
    void unsetMembers();

    void setMembers(std::vector<int32_t> value);

    /// <summary>
    /// The ID of the user group. 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);


protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    std::vector<int32_t> m_Members;
    bool m_MembersIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UserGroup_H_ */

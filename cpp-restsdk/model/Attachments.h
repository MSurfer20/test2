/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Attachments.h
 *
 * Dictionary containing details of a file uploaded by a user. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Attachments_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Attachments_H_


#include "../ModelBase.h"

#include "Attachments_messages.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Dictionary containing details of a file uploaded by a user. 
/// </summary>
class  Attachments
    : public ModelBase
{
public:
    Attachments();
    virtual ~Attachments();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Attachments members

    /// <summary>
    /// The unique ID for the attachment. 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// Name of the uploaded file. 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// A representation of the path of the file within the repository of user-uploaded files.  If the &#x60;path_id&#x60; of a file is &#x60;{realm_id}/ab/cdef/temp_file.py&#x60;, its URL will be: &#x60;{server_url}/user_uploads/{realm_id}/ab/cdef/temp_file.py&#x60;. 
    /// </summary>
    utility::string_t getPathId() const;
    bool pathIdIsSet() const;
    void unsetPath_id();

    void setPathId(const utility::string_t& value);

    /// <summary>
    /// Size of the file in bytes. 
    /// </summary>
    int32_t getSize() const;
    bool sizeIsSet() const;
    void unsetSize();

    void setSize(int32_t value);

    /// <summary>
    /// Time when the attachment was uploaded as a UNIX timestamp multiplied by 1000 (matching the format of getTime() in JavaScript).  **Changes**: Changed in Zulip 2.2 (feature level 22).  This field was previously a floating point number. 
    /// </summary>
    int32_t getCreateTime() const;
    bool createTimeIsSet() const;
    void unsetCreate_time();

    void setCreateTime(int32_t value);

    /// <summary>
    /// Contains basic details on any Zulip messages that have been sent referencing this [uploaded file](/api/upload-file). This includes messages sent by any user in the Zulip organization who sent a message containing a link to the uploaded file. 
    /// </summary>
    std::vector<std::shared_ptr<Attachments_messages>>& getMessages();
    bool messagesIsSet() const;
    void unsetMessages();

    void setMessages(const std::vector<std::shared_ptr<Attachments_messages>>& value);


protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Path_id;
    bool m_Path_idIsSet;
    int32_t m_Size;
    bool m_SizeIsSet;
    int32_t m_Create_time;
    bool m_Create_timeIsSet;
    std::vector<std::shared_ptr<Attachments_messages>> m_Messages;
    bool m_MessagesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Attachments_H_ */

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RealmDomain.h
 *
 * Object containing details of the newly added domain. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RealmDomain_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RealmDomain_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Object containing details of the newly added domain. 
/// </summary>
class  RealmDomain
    : public ModelBase
{
public:
    RealmDomain();
    virtual ~RealmDomain();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RealmDomain members

    /// <summary>
    /// The new allowed domain. 
    /// </summary>
    utility::string_t getDomain() const;
    bool domainIsSet() const;
    void unsetDomain();

    void setDomain(const utility::string_t& value);

    /// <summary>
    /// Whether subdomains are allowed for this domain. 
    /// </summary>
    bool isAllowSubdomains() const;
    bool allowSubdomainsIsSet() const;
    void unsetAllow_subdomains();

    void setAllowSubdomains(bool value);


protected:
    utility::string_t m_Domain;
    bool m_DomainIsSet;
    bool m_Allow_subdomains;
    bool m_Allow_subdomainsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RealmDomain_H_ */

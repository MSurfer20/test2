/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DefaultStreamGroup.h
 *
 * Dictionary containing details of a default stream group. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultStreamGroup_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultStreamGroup_H_


#include "../ModelBase.h"

#include "BasicStream.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Dictionary containing details of a default stream group. 
/// </summary>
class  DefaultStreamGroup
    : public ModelBase
{
public:
    DefaultStreamGroup();
    virtual ~DefaultStreamGroup();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DefaultStreamGroup members

    /// <summary>
    /// Name of the default stream group. 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// Description of the default stream group. 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);

    /// <summary>
    /// id of the default stream group. 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// Array containing details about the streams in the default stream group. 
    /// </summary>
    std::vector<std::shared_ptr<BasicStream>>& getStreams();
    bool streamsIsSet() const;
    void unsetStreams();

    void setStreams(const std::vector<std::shared_ptr<BasicStream>>& value);


protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    std::vector<std::shared_ptr<BasicStream>> m_Streams;
    bool m_StreamsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_DefaultStreamGroup_H_ */

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * EmojiReactionBase_user.h
 *
 * Dictionary with data on the user who added the reaction, including the user ID as the &#x60;id&#x60; field.  **Note**: In the [events API](/api/get-events), this &#x60;user&#x60; dictionary confusing had the user ID in a field called &#x60;user_id&#x60; instead.  We recommend ignoring fields other than the user ID.  **Deprecated** and to be removed in a future release once core clients have migrated to use the &#x60;user_id&#x60; field. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_EmojiReactionBase_user_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_EmojiReactionBase_user_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Dictionary with data on the user who added the reaction, including the user ID as the &#x60;id&#x60; field.  **Note**: In the [events API](/api/get-events), this &#x60;user&#x60; dictionary confusing had the user ID in a field called &#x60;user_id&#x60; instead.  We recommend ignoring fields other than the user ID.  **Deprecated** and to be removed in a future release once core clients have migrated to use the &#x60;user_id&#x60; field. 
/// </summary>
class  EmojiReactionBase_user
    : public ModelBase
{
public:
    EmojiReactionBase_user();
    virtual ~EmojiReactionBase_user();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// EmojiReactionBase_user members

    /// <summary>
    /// ID of the user. 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// Email of the user. 
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();

    void setEmail(const utility::string_t& value);

    /// <summary>
    /// Full name of the user. 
    /// </summary>
    utility::string_t getFullName() const;
    bool fullNameIsSet() const;
    void unsetFull_name();

    void setFullName(const utility::string_t& value);

    /// <summary>
    /// Whether the user is a mirror dummy. 
    /// </summary>
    bool isIsMirrorDummy() const;
    bool isMirrorDummyIsSet() const;
    void unsetIs_mirror_dummy();

    void setIsMirrorDummy(bool value);


protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    utility::string_t m_Full_name;
    bool m_Full_nameIsSet;
    bool m_Is_mirror_dummy;
    bool m_Is_mirror_dummyIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_EmojiReactionBase_user_H_ */

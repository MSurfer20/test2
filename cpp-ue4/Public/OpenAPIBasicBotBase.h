/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIOneOfobjectobject.h"

namespace OpenAPI 
{

/*
 * OpenAPIBasicBotBase
 *
 * 
 */
class OPENAPI_API OpenAPIBasicBotBase : public Model
{
public:
    virtual ~OpenAPIBasicBotBase() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	/* The user id of the bot.  */
	TOptional<int32> UserId;
	/* The full name of the bot.  */
	TOptional<FString> FullName;
	/* The API key of the bot which it uses to make API requests.  */
	TOptional<FString> ApiKey;
	/* The default sending stream of the bot. Null if the bot doesn't have a default sending stream.  */
	TOptional<FString> DefaultSendingStream;
	/* The default stream for which the bot receives events/register data. Null if the bot doesn't have such a default stream.  */
	TOptional<FString> DefaultEventsRegisterStream;
	/* Whether the bot can send messages to all streams by default.  */
	TOptional<bool> DefaultAllPublicStreams;
	/* The URL of the bot's avatar.  */
	TOptional<FString> AvatarUrl;
	/* The user id of the bot's owner.  Null if the bot has no owner.  */
	TOptional<int32> OwnerId;
	/* The \"Services\" array contains extra configuration fields only relevant for Outgoing webhook bots and Embedded bots.  It is always a single-element array.  We consider this part of the Zulip API to be unstable; it is used only for UI elements for administering bots and is likely to change.  */
	TOptional<TArray<OpenAPIOneOfobjectobject>> Services;
};

}

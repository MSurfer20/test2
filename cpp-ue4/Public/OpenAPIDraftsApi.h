/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI 
{

class OPENAPI_API OpenAPIDraftsApi
{
public:
	OpenAPIDraftsApi();
	~OpenAPIDraftsApi();

	/* Sets the URL Endpoint. 
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();
	
	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used. 
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class CreateDraftsRequest;
	class CreateDraftsResponse;
	class DeleteDraftRequest;
	class DeleteDraftResponse;
	class EditDraftRequest;
	class EditDraftResponse;
	class GetDraftsRequest;
	class GetDraftsResponse;
	
    DECLARE_DELEGATE_OneParam(FCreateDraftsDelegate, const CreateDraftsResponse&);
    DECLARE_DELEGATE_OneParam(FDeleteDraftDelegate, const DeleteDraftResponse&);
    DECLARE_DELEGATE_OneParam(FEditDraftDelegate, const EditDraftResponse&);
    DECLARE_DELEGATE_OneParam(FGetDraftsDelegate, const GetDraftsResponse&);
    
    FHttpRequestPtr CreateDrafts(const CreateDraftsRequest& Request, const FCreateDraftsDelegate& Delegate = FCreateDraftsDelegate()) const;
    FHttpRequestPtr DeleteDraft(const DeleteDraftRequest& Request, const FDeleteDraftDelegate& Delegate = FDeleteDraftDelegate()) const;
    FHttpRequestPtr EditDraft(const EditDraftRequest& Request, const FEditDraftDelegate& Delegate = FEditDraftDelegate()) const;
    FHttpRequestPtr GetDrafts(const GetDraftsRequest& Request, const FGetDraftsDelegate& Delegate = FGetDraftsDelegate()) const;
    
private:
    void OnCreateDraftsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreateDraftsDelegate Delegate) const;
    void OnDeleteDraftResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDeleteDraftDelegate Delegate) const;
    void OnEditDraftResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FEditDraftDelegate Delegate) const;
    void OnGetDraftsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetDraftsDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};
	
}

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI 
{

class OPENAPI_API OpenAPIUsersApi
{
public:
	OpenAPIUsersApi();
	~OpenAPIUsersApi();

	/* Sets the URL Endpoint. 
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();
	
	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used. 
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class CreateUserRequest;
	class CreateUserResponse;
	class CreateUserGroupRequest;
	class CreateUserGroupResponse;
	class DeactivateOwnUserRequest;
	class DeactivateOwnUserResponse;
	class DeactivateUserRequest;
	class DeactivateUserResponse;
	class GetAttachmentsRequest;
	class GetAttachmentsResponse;
	class GetOwnUserRequest;
	class GetOwnUserResponse;
	class GetUserRequest;
	class GetUserResponse;
	class GetUserByEmailRequest;
	class GetUserByEmailResponse;
	class GetUserGroupsRequest;
	class GetUserGroupsResponse;
	class GetUserPresenceRequest;
	class GetUserPresenceResponse;
	class GetUsersRequest;
	class GetUsersResponse;
	class MuteUserRequest;
	class MuteUserResponse;
	class ReactivateUserRequest;
	class ReactivateUserResponse;
	class RemoveUserGroupRequest;
	class RemoveUserGroupResponse;
	class SetTypingStatusRequest;
	class SetTypingStatusResponse;
	class UnmuteUserRequest;
	class UnmuteUserResponse;
	class UpdateDisplaySettingsRequest;
	class UpdateDisplaySettingsResponse;
	class UpdateNotificationSettingsRequest;
	class UpdateNotificationSettingsResponse;
	class UpdateUserRequest;
	class UpdateUserResponse;
	class UpdateUserGroupRequest;
	class UpdateUserGroupResponse;
	class UpdateUserGroupMembersRequest;
	class UpdateUserGroupMembersResponse;
	
    DECLARE_DELEGATE_OneParam(FCreateUserDelegate, const CreateUserResponse&);
    DECLARE_DELEGATE_OneParam(FCreateUserGroupDelegate, const CreateUserGroupResponse&);
    DECLARE_DELEGATE_OneParam(FDeactivateOwnUserDelegate, const DeactivateOwnUserResponse&);
    DECLARE_DELEGATE_OneParam(FDeactivateUserDelegate, const DeactivateUserResponse&);
    DECLARE_DELEGATE_OneParam(FGetAttachmentsDelegate, const GetAttachmentsResponse&);
    DECLARE_DELEGATE_OneParam(FGetOwnUserDelegate, const GetOwnUserResponse&);
    DECLARE_DELEGATE_OneParam(FGetUserDelegate, const GetUserResponse&);
    DECLARE_DELEGATE_OneParam(FGetUserByEmailDelegate, const GetUserByEmailResponse&);
    DECLARE_DELEGATE_OneParam(FGetUserGroupsDelegate, const GetUserGroupsResponse&);
    DECLARE_DELEGATE_OneParam(FGetUserPresenceDelegate, const GetUserPresenceResponse&);
    DECLARE_DELEGATE_OneParam(FGetUsersDelegate, const GetUsersResponse&);
    DECLARE_DELEGATE_OneParam(FMuteUserDelegate, const MuteUserResponse&);
    DECLARE_DELEGATE_OneParam(FReactivateUserDelegate, const ReactivateUserResponse&);
    DECLARE_DELEGATE_OneParam(FRemoveUserGroupDelegate, const RemoveUserGroupResponse&);
    DECLARE_DELEGATE_OneParam(FSetTypingStatusDelegate, const SetTypingStatusResponse&);
    DECLARE_DELEGATE_OneParam(FUnmuteUserDelegate, const UnmuteUserResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateDisplaySettingsDelegate, const UpdateDisplaySettingsResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateNotificationSettingsDelegate, const UpdateNotificationSettingsResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateUserDelegate, const UpdateUserResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateUserGroupDelegate, const UpdateUserGroupResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateUserGroupMembersDelegate, const UpdateUserGroupMembersResponse&);
    
    FHttpRequestPtr CreateUser(const CreateUserRequest& Request, const FCreateUserDelegate& Delegate = FCreateUserDelegate()) const;
    FHttpRequestPtr CreateUserGroup(const CreateUserGroupRequest& Request, const FCreateUserGroupDelegate& Delegate = FCreateUserGroupDelegate()) const;
    FHttpRequestPtr DeactivateOwnUser(const DeactivateOwnUserRequest& Request, const FDeactivateOwnUserDelegate& Delegate = FDeactivateOwnUserDelegate()) const;
    FHttpRequestPtr DeactivateUser(const DeactivateUserRequest& Request, const FDeactivateUserDelegate& Delegate = FDeactivateUserDelegate()) const;
    FHttpRequestPtr GetAttachments(const GetAttachmentsRequest& Request, const FGetAttachmentsDelegate& Delegate = FGetAttachmentsDelegate()) const;
    FHttpRequestPtr GetOwnUser(const GetOwnUserRequest& Request, const FGetOwnUserDelegate& Delegate = FGetOwnUserDelegate()) const;
    FHttpRequestPtr GetUser(const GetUserRequest& Request, const FGetUserDelegate& Delegate = FGetUserDelegate()) const;
    FHttpRequestPtr GetUserByEmail(const GetUserByEmailRequest& Request, const FGetUserByEmailDelegate& Delegate = FGetUserByEmailDelegate()) const;
    FHttpRequestPtr GetUserGroups(const GetUserGroupsRequest& Request, const FGetUserGroupsDelegate& Delegate = FGetUserGroupsDelegate()) const;
    FHttpRequestPtr GetUserPresence(const GetUserPresenceRequest& Request, const FGetUserPresenceDelegate& Delegate = FGetUserPresenceDelegate()) const;
    FHttpRequestPtr GetUsers(const GetUsersRequest& Request, const FGetUsersDelegate& Delegate = FGetUsersDelegate()) const;
    FHttpRequestPtr MuteUser(const MuteUserRequest& Request, const FMuteUserDelegate& Delegate = FMuteUserDelegate()) const;
    FHttpRequestPtr ReactivateUser(const ReactivateUserRequest& Request, const FReactivateUserDelegate& Delegate = FReactivateUserDelegate()) const;
    FHttpRequestPtr RemoveUserGroup(const RemoveUserGroupRequest& Request, const FRemoveUserGroupDelegate& Delegate = FRemoveUserGroupDelegate()) const;
    FHttpRequestPtr SetTypingStatus(const SetTypingStatusRequest& Request, const FSetTypingStatusDelegate& Delegate = FSetTypingStatusDelegate()) const;
    FHttpRequestPtr UnmuteUser(const UnmuteUserRequest& Request, const FUnmuteUserDelegate& Delegate = FUnmuteUserDelegate()) const;
    FHttpRequestPtr UpdateDisplaySettings(const UpdateDisplaySettingsRequest& Request, const FUpdateDisplaySettingsDelegate& Delegate = FUpdateDisplaySettingsDelegate()) const;
    FHttpRequestPtr UpdateNotificationSettings(const UpdateNotificationSettingsRequest& Request, const FUpdateNotificationSettingsDelegate& Delegate = FUpdateNotificationSettingsDelegate()) const;
    FHttpRequestPtr UpdateUser(const UpdateUserRequest& Request, const FUpdateUserDelegate& Delegate = FUpdateUserDelegate()) const;
    FHttpRequestPtr UpdateUserGroup(const UpdateUserGroupRequest& Request, const FUpdateUserGroupDelegate& Delegate = FUpdateUserGroupDelegate()) const;
    FHttpRequestPtr UpdateUserGroupMembers(const UpdateUserGroupMembersRequest& Request, const FUpdateUserGroupMembersDelegate& Delegate = FUpdateUserGroupMembersDelegate()) const;
    
private:
    void OnCreateUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreateUserDelegate Delegate) const;
    void OnCreateUserGroupResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreateUserGroupDelegate Delegate) const;
    void OnDeactivateOwnUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDeactivateOwnUserDelegate Delegate) const;
    void OnDeactivateUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDeactivateUserDelegate Delegate) const;
    void OnGetAttachmentsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetAttachmentsDelegate Delegate) const;
    void OnGetOwnUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetOwnUserDelegate Delegate) const;
    void OnGetUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetUserDelegate Delegate) const;
    void OnGetUserByEmailResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetUserByEmailDelegate Delegate) const;
    void OnGetUserGroupsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetUserGroupsDelegate Delegate) const;
    void OnGetUserPresenceResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetUserPresenceDelegate Delegate) const;
    void OnGetUsersResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetUsersDelegate Delegate) const;
    void OnMuteUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FMuteUserDelegate Delegate) const;
    void OnReactivateUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FReactivateUserDelegate Delegate) const;
    void OnRemoveUserGroupResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FRemoveUserGroupDelegate Delegate) const;
    void OnSetTypingStatusResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSetTypingStatusDelegate Delegate) const;
    void OnUnmuteUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUnmuteUserDelegate Delegate) const;
    void OnUpdateDisplaySettingsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateDisplaySettingsDelegate Delegate) const;
    void OnUpdateNotificationSettingsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateNotificationSettingsDelegate Delegate) const;
    void OnUpdateUserResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateUserDelegate Delegate) const;
    void OnUpdateUserGroupResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateUserGroupDelegate Delegate) const;
    void OnUpdateUserGroupMembersResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateUserGroupMembersDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};
	
}

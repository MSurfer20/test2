/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIApiKeyResponseAllOf.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI 
{

void OpenAPIApiKeyResponseAllOf::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Result.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("result")); WriteJsonValue(Writer, Result.GetValue());	
	}
	if (Msg.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("msg")); WriteJsonValue(Writer, Msg.GetValue());	
	}
	Writer->WriteIdentifierPrefix(TEXT("api_key")); WriteJsonValue(Writer, ApiKey);
	Writer->WriteIdentifierPrefix(TEXT("email")); WriteJsonValue(Writer, Email);
	Writer->WriteObjectEnd();
}

bool OpenAPIApiKeyResponseAllOf::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("result"), Result);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("msg"), Msg);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("api_key"), ApiKey);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("email"), Email);

	return ParseSuccess;
}

}

/**
 * 
 * Zulip REST API
 * 
 * 
 * Powerful open source group chat 
 * 
 * Version: 1.0.0
 * 
 * Generated by OpenAPI Generator: https://openapi-generator.tech
 */

// package openapi3graphql-server

// messages_api

export default {
    Query: {

        // @return AnyType
        CheckMessagesMatchNarrow: ($msgIds, $narrow) => {
            return {
                "msgIds": "",
                "narrow": ""
            };
        },

        // @return JsonSuccessBase
        GetFileTemporaryUrl: ($realmIdStr, $filename) => {
            return {
                "realmIdStr": "1",
                "filename": "4e/m2A3MSqFnWRLUf9SaPzQ0Up_/zulip.txt"
            };
        },

        // @return JsonSuccessBase
        GetMessageHistory: ($messageId) => {
            return {
                "messageId": "42"
            };
        },

        // @return JsonSuccessBase
        GetMessages: ($numBefore, $numAfter, $anchor, $narrow, $clientGravatar, $applyMarkdown, $useFirstUnreadAnchor) => {
            return {
                "numBefore": "4",
                "numAfter": "8",
                "anchor": "42",
                "narrow": "",
                "clientGravatar": "true",
                "applyMarkdown": "false",
                "useFirstUnreadAnchor": "true"
            };
        },

        // @return JsonSuccessBase
        GetRawMessage: ($messageId) => {
            return {
                "messageId": "42"
            };
        },

    },

    Mutation: {

        // @return JsonSuccess
        AddReaction: ($messageId, $emojiName, $emojiCode, $reactionType) => {
            return {
                "messageId": "42",
                "emojiName": "octopus",
                "emojiCode": "1f419",
                "reactionType": "unicode_emoji"
            };
        },

        // @return JsonSuccess
        DeleteMessage: ($messageId) => {
            return {
                "messageId": "42"
            };
        },

        // @return JsonSuccess
        MarkAllAsRead: () => {
            return {
                
            };
        },

        // @return JsonSuccess
        MarkStreamAsRead: ($streamId) => {
            return {
                "streamId": "42"
            };
        },

        // @return JsonSuccess
        MarkTopicAsRead: ($streamId, $topicName) => {
            return {
                "streamId": "42",
                "topicName": "new coffee machine"
            };
        },

        // @return JsonSuccess
        RemoveReaction: ($messageId, $emojiName, $emojiCode, $reactionType) => {
            return {
                "messageId": "42",
                "emojiName": "octopus",
                "emojiCode": "1f419",
                "reactionType": "unicode_emoji"
            };
        },

        // @return JsonSuccessBase
        RenderMessage: ($content) => {
            return {
                "content": "Hello"
            };
        },

        // @return JsonSuccessBase
        SendMessage: ($Type_, $to, $content, $topic, $queueId, $localId) => {
            return {
                "Type_": "private",
                "to": "",
                "content": "Hello",
                "topic": "Castle",
                "queueId": "1593114627:0",
                "localId": "100.01"
            };
        },

        // @return JsonSuccess
        UpdateMessage: ($messageId, $topic, $propagateMode, $sendNotificationToOldThread, $sendNotificationToNewThread, $content, $streamId) => {
            return {
                "messageId": "42",
                "topic": "Castle",
                "propagateMode": "change_all",
                "sendNotificationToOldThread": "true",
                "sendNotificationToNewThread": "true",
                "content": "Hello",
                "streamId": "42"
            };
        },

        // @return JsonSuccessBase
        UpdateMessageFlags: ($messages, $op, $flag) => {
            return {
                "messages": "",
                "op": "add",
                "flag": "read"
            };
        },

        // @return JsonSuccessBase
        UploadFile: ($filename) => {
            return {
                "filename": "BINARY_DATA_HERE"
            };
        },

    }
}
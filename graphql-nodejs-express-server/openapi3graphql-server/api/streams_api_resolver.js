/**
 * 
 * Zulip REST API
 * 
 * 
 * Powerful open source group chat 
 * 
 * Version: 1.0.0
 * 
 * Generated by OpenAPI Generator: https://openapi-generator.tech
 */

// package openapi3graphql-server

// streams_api

export default {
    Query: {

        // @return JsonSuccessBase
        CreateBigBlueButtonVideoCall: () => {
            return {
                
            };
        },

        // @return JsonSuccessBase
        GetStreamId: ($stream) => {
            return {
                "stream": "Denmark"
            };
        },

        // @return JsonSuccessBase
        GetStreamTopics: ($streamId) => {
            return {
                "streamId": "1"
            };
        },

        // @return JsonSuccessBase
        GetStreams: ($includePublic, $includeWebPublic, $includeSubscribed, $includeAllActive, $includeDefault, $includeOwnerSubscribed) => {
            return {
                "includePublic": "false",
                "includeWebPublic": "true",
                "includeSubscribed": "false",
                "includeAllActive": "true",
                "includeDefault": "true",
                "includeOwnerSubscribed": "true"
            };
        },

        // @return JsonSuccessBase
        GetSubscriptionStatus: ($userId, $streamId) => {
            return {
                "userId": "12",
                "streamId": "1"
            };
        },

        // @return JsonSuccessBase
        GetSubscriptions: ($includeSubscribers) => {
            return {
                "includeSubscribers": "true"
            };
        },

    },

    Mutation: {

        // @return JsonSuccess
        ArchiveStream: ($streamId) => {
            return {
                "streamId": "1"
            };
        },

        // @return JsonSuccess
        MuteTopic: ($topic, $op, $stream, $streamId) => {
            return {
                "topic": "dinner",
                "op": "add",
                "stream": "Denmark",
                "streamId": "42"
            };
        },

        // @return OneOfobjectobject
        Subscribe: ($subscriptions, $principals, $authorizationErrorsFatal, $announce, $inviteOnly, $historyPublicToSubscribers, $streamPostPolicy, $messageRetentionDays) => {
            return {
                "subscriptions": "",
                "principals": "",
                "authorizationErrorsFatal": "false",
                "announce": "true",
                "inviteOnly": "true",
                "historyPublicToSubscribers": "false",
                "streamPostPolicy": "2",
                "messageRetentionDays": "20"
            };
        },

        // @return JsonSuccessBase
        Unsubscribe: ($subscriptions, $principals) => {
            return {
                "subscriptions": "",
                "principals": ""
            };
        },

        // @return JsonSuccess
        UpdateStream: ($streamId, $description, $newName, $isPrivate, $isAnnouncementOnly, $streamPostPolicy, $historyPublicToSubscribers, $messageRetentionDays) => {
            return {
                "streamId": "1",
                "description": "Discuss Italian history and travel destinations.",
                "newName": "Italy",
                "isPrivate": "true",
                "isAnnouncementOnly": "true",
                "streamPostPolicy": "2",
                "historyPublicToSubscribers": "false",
                "messageRetentionDays": "20"
            };
        },

        // @return JsonSuccessBase
        UpdateSubscriptionSettings: ($subscriptionData) => {
            return {
                "subscriptionData": ""
            };
        },

        // @return JsonSuccessBase
        UpdateSubscriptions: ($delete, $add) => {
            return {
                "delete": "",
                "add": ""
            };
        },

    }
}
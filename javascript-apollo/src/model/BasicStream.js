/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnyType from './AnyType';
import BasicStreamAllOf from './BasicStreamAllOf';
import BasicStreamBase from './BasicStreamBase';

/**
 * The BasicStream model module.
 * @module model/BasicStream
 * @version 1.0.0
 */
class BasicStream {
    /**
     * @member {AnyType} stream_id
     * @type {AnyType}
     */
    stream_id;
    /**
     * @member {AnyType} name
     * @type {AnyType}
     */
    name;
    /**
     * @member {AnyType} description
     * @type {AnyType}
     */
    description;
    /**
     * @member {AnyType} date_created
     * @type {AnyType}
     */
    date_created;
    /**
     * @member {AnyType} invite_only
     * @type {AnyType}
     */
    invite_only;
    /**
     * @member {AnyType} rendered_description
     * @type {AnyType}
     */
    rendered_description;
    /**
     * @member {AnyType} is_web_public
     * @type {AnyType}
     */
    is_web_public;
    /**
     * @member {AnyType} stream_post_policy
     * @type {AnyType}
     */
    stream_post_policy;
    /**
     * @member {AnyType} message_retention_days
     * @type {AnyType}
     */
    message_retention_days;
    /**
     * @member {AnyType} history_public_to_subscribers
     * @type {AnyType}
     */
    history_public_to_subscribers;
    /**
     * @member {AnyType} first_message_id
     * @type {AnyType}
     */
    first_message_id;
    /**
     * @member {AnyType} is_announcement_only
     * @type {AnyType}
     */
    is_announcement_only;

    /**
     * @member {Number} stream_id
     * @type {Number}
     */
    #stream_id;
    /**
     * @member {String} name
     * @type {String}
     */
    #name;
    /**
     * @member {String} description
     * @type {String}
     */
    #description;
    /**
     * @member {Number} date_created
     * @type {Number}
     */
    #date_created;
    /**
     * @member {Boolean} invite_only
     * @type {Boolean}
     */
    #invite_only;
    /**
     * @member {String} rendered_description
     * @type {String}
     */
    #rendered_description;
    /**
     * @member {Boolean} is_web_public
     * @type {Boolean}
     */
    #is_web_public;
    /**
     * @member {Number} stream_post_policy
     * @type {Number}
     */
    #stream_post_policy;
    /**
     * @member {Number} message_retention_days
     * @type {Number}
     */
    #message_retention_days;
    /**
     * @member {Boolean} history_public_to_subscribers
     * @type {Boolean}
     */
    #history_public_to_subscribers;
    /**
     * @member {Number} first_message_id
     * @type {Number}
     */
    #first_message_id;
    /**
     * @member {Boolean} is_announcement_only
     * @type {Boolean}
     */
    #is_announcement_only;
    /**
     * @member {AnyType} stream_id
     * @type {AnyType}
     */
    #stream_id;
    /**
     * @member {AnyType} name
     * @type {AnyType}
     */
    #name;
    /**
     * @member {AnyType} description
     * @type {AnyType}
     */
    #description;
    /**
     * @member {AnyType} date_created
     * @type {AnyType}
     */
    #date_created;
    /**
     * @member {AnyType} invite_only
     * @type {AnyType}
     */
    #invite_only;
    /**
     * @member {AnyType} rendered_description
     * @type {AnyType}
     */
    #rendered_description;
    /**
     * @member {AnyType} is_web_public
     * @type {AnyType}
     */
    #is_web_public;
    /**
     * @member {AnyType} stream_post_policy
     * @type {AnyType}
     */
    #stream_post_policy;
    /**
     * @member {AnyType} message_retention_days
     * @type {AnyType}
     */
    #message_retention_days;
    /**
     * @member {AnyType} history_public_to_subscribers
     * @type {AnyType}
     */
    #history_public_to_subscribers;
    /**
     * @member {AnyType} first_message_id
     * @type {AnyType}
     */
    #first_message_id;
    /**
     * @member {AnyType} is_announcement_only
     * @type {AnyType}
     */
    #is_announcement_only;
    

    /**
     * Constructs a new <code>BasicStream</code>.
     * @alias module:model/BasicStream
     * @implements module:model/BasicStreamBase
     * @implements module:model/BasicStreamAllOf
     */
    constructor() { 
        BasicStreamBase.initialize(this);BasicStreamAllOf.initialize(this);
        BasicStream.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasicStream</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicStream} obj Optional instance to populate.
     * @return {module:model/BasicStream} The populated <code>BasicStream</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicStream();
            BasicStreamBase.constructFromObject(data, obj);
            BasicStreamAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('stream_id')) {
                obj['stream_id'] = ApiClient.convertToType(data['stream_id'], AnyType);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], AnyType);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], AnyType);
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], AnyType);
            }
            if (data.hasOwnProperty('invite_only')) {
                obj['invite_only'] = ApiClient.convertToType(data['invite_only'], AnyType);
            }
            if (data.hasOwnProperty('rendered_description')) {
                obj['rendered_description'] = ApiClient.convertToType(data['rendered_description'], AnyType);
            }
            if (data.hasOwnProperty('is_web_public')) {
                obj['is_web_public'] = ApiClient.convertToType(data['is_web_public'], AnyType);
            }
            if (data.hasOwnProperty('stream_post_policy')) {
                obj['stream_post_policy'] = ApiClient.convertToType(data['stream_post_policy'], AnyType);
            }
            if (data.hasOwnProperty('message_retention_days')) {
                obj['message_retention_days'] = ApiClient.convertToType(data['message_retention_days'], AnyType);
            }
            if (data.hasOwnProperty('history_public_to_subscribers')) {
                obj['history_public_to_subscribers'] = ApiClient.convertToType(data['history_public_to_subscribers'], AnyType);
            }
            if (data.hasOwnProperty('first_message_id')) {
                obj['first_message_id'] = ApiClient.convertToType(data['first_message_id'], AnyType);
            }
            if (data.hasOwnProperty('is_announcement_only')) {
                obj['is_announcement_only'] = ApiClient.convertToType(data['is_announcement_only'], AnyType);
            }
        }
        return obj;
    }
}



export default BasicStream;


{-
   Zulip REST API
   Powerful open source group chat 

   The version of the OpenAPI document: 1.0.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.ServerAndOrganizations exposing
    ( addCodePlayground
    , addLinkifier
    , createCustomProfileField
    , getCustomEmoji
    , getCustomProfileFields
    , getLinkifiers
    , getServerSettings
    , removeCodePlayground
    , removeLinkifier
    , reorderCustomProfileFields
    , updateLinkifier
    , uploadCustomEmoji
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode



{-| Configure [code playgrounds](/help/code-blocks#code-playgrounds) for the organization.  `POST {{ api_url }}/v1/realm/playgrounds`  **Changes**: New in Zulip 4.0 (feature level 49). A parameter encoding bug was fixed in Zulip 4.0 (feature level 57). 
-}
addCodePlayground : String -> String -> String -> Api.Request Api.Data.JsonSuccessBase
addCodePlayground name_query pygmentsLanguage_query urlPrefix_query =
    Api.request
        "POST"
        "/realm/playgrounds"
        []
        [ ( "name", Just <| identity name_query ), ( "pygments_language", Just <| identity pygmentsLanguage_query ), ( "url_prefix", Just <| identity urlPrefix_query ) ]
        []
        Nothing
        Api.Data.jsonSuccessBaseDecoder



{-| Configure [linkifiers](/help/add-a-custom-linkifier), regular expression patterns that are automatically linkified when they appear in messages and topics.  `POST {{ api_url }}/v1/realm/filters` 
-}
addLinkifier : String -> String -> Api.Request Api.Data.JsonSuccessBase
addLinkifier pattern_query urlFormatString_query =
    Api.request
        "POST"
        "/realm/filters"
        []
        [ ( "pattern", Just <| identity pattern_query ), ( "url_format_string", Just <| identity urlFormatString_query ) ]
        []
        Nothing
        Api.Data.jsonSuccessBaseDecoder



{-| [Create a custom profile field](/help/add-custom-profile-fields) in the user's organization.  `POST {{ api_url }}/v1/realm/profile_fields` 
-}
createCustomProfileField : Int -> Maybe String -> Maybe String -> Maybe Object -> Api.Request Api.Data.JsonSuccessBase
createCustomProfileField fieldType_query name_query hint_query fieldData_query =
    Api.request
        "POST"
        "/realm/profile_fields"
        []
        [ ( "name", Maybe.map identity name_query ), ( "hint", Maybe.map identity hint_query ), ( "field_type", Just <| String.fromInt fieldType_query ), ( "field_data", Maybe.map  fieldData_query ) ]
        []
        Nothing
        Api.Data.jsonSuccessBaseDecoder



{-| Get all the custom emoji in the user's organization.  `GET {{ api_url }}/v1/realm/emoji` 
-}
getCustomEmoji : Api.Request Api.Data.JsonSuccessBase
getCustomEmoji =
    Api.request
        "GET"
        "/realm/emoji"
        []
        []
        []
        Nothing
        Api.Data.jsonSuccessBaseDecoder



{-| Get all the [custom profile fields](/help/add-custom-profile-fields) configured for the user's organization.  `GET {{ api_url }}/v1/realm/profile_fields` 
-}
getCustomProfileFields : Api.Request Api.Data.JsonSuccessBase
getCustomProfileFields =
    Api.request
        "GET"
        "/realm/profile_fields"
        []
        []
        []
        Nothing
        Api.Data.jsonSuccessBaseDecoder



{-| List all of an organization's configured [linkifiers](/help/add-a-custom-linkifier), regular expression patterns that are automatically linkified when they appear in messages and topics.  `GET {{ api_url }}/v1/realm/linkifiers`  **Changes**: New in Zulip 4.0 (feature level 54). On older versions, a similar `GET /realm/filters` endpoint was available with each entry in a `[pattern, url_format, id]` tuple format. 
-}
getLinkifiers : Api.Request Api.Data.JsonSuccessBase
getLinkifiers =
    Api.request
        "GET"
        "/realm/linkifiers"
        []
        []
        []
        Nothing
        Api.Data.jsonSuccessBaseDecoder



{-| Fetch global settings for a Zulip server.  `GET {{ api_url }}/v1/server_settings`  **Note:** this endpoint does not require any authentication at all, and you can use it to check:  * If this is a Zulip server, and if so, what version of Zulip it's running. * What a Zulip client (e.g. a mobile app or [zulip-terminal](https://github.com/zulip/zulip-terminal/)) needs to know in order to display a login prompt for the server (e.g. what authentication methods are available). 
-}
getServerSettings : Api.Request Api.Data.JsonSuccessBase
getServerSettings =
    Api.request
        "GET"
        "/server_settings"
        []
        []
        []
        Nothing
        Api.Data.jsonSuccessBaseDecoder



{-| Remove a [code playground](/help/code-blocks#code-playgrounds) previously configured for an organization.  `DELETE {{ api_url }}/v1/realm/playgrounds/{playground_id}`  **Changes**: New in Zulip 4.0 (feature level 49). 
-}
removeCodePlayground : Int -> Api.Request Api.Data.JsonSuccess
removeCodePlayground playgroundId_path =
    Api.request
        "DELETE"
        "/realm/playgrounds/{playground_id}"
        [ ( "playgroundId", String.fromInt playgroundId_path ) ]
        []
        []
        Nothing
        Api.Data.jsonSuccessDecoder



{-| Remove [linkifiers](/help/add-a-custom-linkifier), regular expression patterns that are automatically linkified when they appear in messages and topics.  `DELETE {{ api_url }}/v1/realm/filters/{filter_id}` 
-}
removeLinkifier : Int -> Api.Request Api.Data.JsonSuccess
removeLinkifier filterId_path =
    Api.request
        "DELETE"
        "/realm/filters/{filter_id}"
        [ ( "filterId", String.fromInt filterId_path ) ]
        []
        []
        Nothing
        Api.Data.jsonSuccessDecoder



{-| Reorder the custom profile fields in the user's organization.  `PATCH {{ api_url }}/v1/realm/profile_fields`  Custom profile fields are displayed in Zulip UI widgets in order; this endpoint allows administrative settings UI to change the field ordering.  This endpoint is used to implement the dragging feature described in the [custom profile fields documentation](/help/add-custom-profile-fields). 
-}
reorderCustomProfileFields : List Int -> Api.Request Api.Data.JsonSuccess
reorderCustomProfileFields order_query =
    Api.request
        "PATCH"
        "/realm/profile_fields"
        []
        [ ( "order", Just <| String.join "," << List.map String.fromInt order_query ) ]
        []
        Nothing
        Api.Data.jsonSuccessDecoder



{-| Update a [linkifier](/help/add-a-custom-linkifier), regular expression patterns that are automatically linkified when they appear in messages and topics.  `PATCH {{ api_url }}/v1/realm/filters/{filter_id}`  **Changes**: New in Zulip 4.0 (feature level 57). 
-}
updateLinkifier : Int -> String -> String -> Api.Request Api.Data.JsonSuccess
updateLinkifier filterId_path pattern_query urlFormatString_query =
    Api.request
        "PATCH"
        "/realm/filters/{filter_id}"
        [ ( "filterId", String.fromInt filterId_path ) ]
        [ ( "pattern", Just <| identity pattern_query ), ( "url_format_string", Just <| identity urlFormatString_query ) ]
        []
        Nothing
        Api.Data.jsonSuccessDecoder



{-| This endpoint is used to upload a custom emoji for use in the user's organization.  Access to this endpoint depends on the [organization's configuration](https://zulip.com/help/only-allow-admins-to-add-emoji).  `POST {{ api_url }}/v1/realm/emoji/{emoji_name}` 
-}
uploadCustomEmoji : String -> Maybe String -> Api.Request Api.Data.JsonSuccess
uploadCustomEmoji emojiName_path filename =
    Api.request
        "POST"
        "/realm/emoji/{emoji_name}"
        [ ( "emojiName", identity emojiName_path ) ]
        []
        []
        Nothing
        Api.Data.jsonSuccessDecoder

# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from openapi_server.models.coded_error_base import CodedErrorBase
from openapi_server.models.non_existing_stream_error_all_of import NonExistingStreamErrorAllOf


class NonExistingStreamError(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NonExistingStreamError - a model defined in OpenAPI

        result: The result of this NonExistingStreamError.
        msg: The msg of this NonExistingStreamError.
        code: The code of this NonExistingStreamError [Optional].
        stream: The stream of this NonExistingStreamError [Optional].
    """

    result: object
    msg: object
    code: Optional[object] = None
    stream: Optional[str] = None

NonExistingStreamError.update_forward_refs()

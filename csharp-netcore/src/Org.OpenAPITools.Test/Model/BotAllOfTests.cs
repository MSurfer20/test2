/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing BotAllOf
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BotAllOfTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BotAllOf
        //private BotAllOf instance;

        public BotAllOfTests()
        {
            // TODO uncomment below to create an instance of BotAllOf
            //instance = new BotAllOf();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BotAllOf
        /// </summary>
        [Fact]
        public void BotAllOfInstanceTest()
        {
            // TODO uncomment below to test "IsType" BotAllOf
            //Assert.IsType<BotAllOf>(instance);
        }


        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'FullName'
        /// </summary>
        [Fact]
        public void FullNameTest()
        {
            // TODO unit test for the property 'FullName'
        }
        /// <summary>
        /// Test the property 'ApiKey'
        /// </summary>
        [Fact]
        public void ApiKeyTest()
        {
            // TODO unit test for the property 'ApiKey'
        }
        /// <summary>
        /// Test the property 'DefaultSendingStream'
        /// </summary>
        [Fact]
        public void DefaultSendingStreamTest()
        {
            // TODO unit test for the property 'DefaultSendingStream'
        }
        /// <summary>
        /// Test the property 'DefaultEventsRegisterStream'
        /// </summary>
        [Fact]
        public void DefaultEventsRegisterStreamTest()
        {
            // TODO unit test for the property 'DefaultEventsRegisterStream'
        }
        /// <summary>
        /// Test the property 'DefaultAllPublicStreams'
        /// </summary>
        [Fact]
        public void DefaultAllPublicStreamsTest()
        {
            // TODO unit test for the property 'DefaultAllPublicStreams'
        }
        /// <summary>
        /// Test the property 'AvatarUrl'
        /// </summary>
        [Fact]
        public void AvatarUrlTest()
        {
            // TODO unit test for the property 'AvatarUrl'
        }
        /// <summary>
        /// Test the property 'OwnerId'
        /// </summary>
        [Fact]
        public void OwnerIdTest()
        {
            // TODO unit test for the property 'OwnerId'
        }
        /// <summary>
        /// Test the property 'Services'
        /// </summary>
        [Fact]
        public void ServicesTest()
        {
            // TODO unit test for the property 'Services'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'BotType'
        /// </summary>
        [Fact]
        public void BotTypeTest()
        {
            // TODO unit test for the property 'BotType'
        }
        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Fact]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }

    }

}

/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing MissingArgumentErrorAllOf
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MissingArgumentErrorAllOfTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MissingArgumentErrorAllOf
        //private MissingArgumentErrorAllOf instance;

        public MissingArgumentErrorAllOfTests()
        {
            // TODO uncomment below to create an instance of MissingArgumentErrorAllOf
            //instance = new MissingArgumentErrorAllOf();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MissingArgumentErrorAllOf
        /// </summary>
        [Fact]
        public void MissingArgumentErrorAllOfInstanceTest()
        {
            // TODO uncomment below to test "IsType" MissingArgumentErrorAllOf
            //Assert.IsType<MissingArgumentErrorAllOf>(instance);
        }


        /// <summary>
        /// Test the property 'Result'
        /// </summary>
        [Fact]
        public void ResultTest()
        {
            // TODO unit test for the property 'Result'
        }
        /// <summary>
        /// Test the property 'Msg'
        /// </summary>
        [Fact]
        public void MsgTest()
        {
            // TODO unit test for the property 'Msg'
        }
        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
        /// <summary>
        /// Test the property 'VarName'
        /// </summary>
        [Fact]
        public void VarNameTest()
        {
            // TODO unit test for the property 'VarName'
        }

    }

}

/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing UserAllOf
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UserAllOfTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UserAllOf
        //private UserAllOf instance;

        public UserAllOfTests()
        {
            // TODO uncomment below to create an instance of UserAllOf
            //instance = new UserAllOf();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserAllOf
        /// </summary>
        [Fact]
        public void UserAllOfInstanceTest()
        {
            // TODO uncomment below to test "IsType" UserAllOf
            //Assert.IsType<UserAllOf>(instance);
        }


        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'IsBot'
        /// </summary>
        [Fact]
        public void IsBotTest()
        {
            // TODO unit test for the property 'IsBot'
        }
        /// <summary>
        /// Test the property 'AvatarUrl'
        /// </summary>
        [Fact]
        public void AvatarUrlTest()
        {
            // TODO unit test for the property 'AvatarUrl'
        }
        /// <summary>
        /// Test the property 'AvatarVersion'
        /// </summary>
        [Fact]
        public void AvatarVersionTest()
        {
            // TODO unit test for the property 'AvatarVersion'
        }
        /// <summary>
        /// Test the property 'FullName'
        /// </summary>
        [Fact]
        public void FullNameTest()
        {
            // TODO unit test for the property 'FullName'
        }
        /// <summary>
        /// Test the property 'IsAdmin'
        /// </summary>
        [Fact]
        public void IsAdminTest()
        {
            // TODO unit test for the property 'IsAdmin'
        }
        /// <summary>
        /// Test the property 'IsOwner'
        /// </summary>
        [Fact]
        public void IsOwnerTest()
        {
            // TODO unit test for the property 'IsOwner'
        }
        /// <summary>
        /// Test the property 'IsBillingAdmin'
        /// </summary>
        [Fact]
        public void IsBillingAdminTest()
        {
            // TODO unit test for the property 'IsBillingAdmin'
        }
        /// <summary>
        /// Test the property 'Role'
        /// </summary>
        [Fact]
        public void RoleTest()
        {
            // TODO unit test for the property 'Role'
        }
        /// <summary>
        /// Test the property 'BotType'
        /// </summary>
        [Fact]
        public void BotTypeTest()
        {
            // TODO unit test for the property 'BotType'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'BotOwnerId'
        /// </summary>
        [Fact]
        public void BotOwnerIdTest()
        {
            // TODO unit test for the property 'BotOwnerId'
        }
        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Fact]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }
        /// <summary>
        /// Test the property 'IsGuest'
        /// </summary>
        [Fact]
        public void IsGuestTest()
        {
            // TODO unit test for the property 'IsGuest'
        }
        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Fact]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }
        /// <summary>
        /// Test the property 'DateJoined'
        /// </summary>
        [Fact]
        public void DateJoinedTest()
        {
            // TODO unit test for the property 'DateJoined'
        }
        /// <summary>
        /// Test the property 'DeliveryEmail'
        /// </summary>
        [Fact]
        public void DeliveryEmailTest()
        {
            // TODO unit test for the property 'DeliveryEmail'
        }
        /// <summary>
        /// Test the property 'ProfileData'
        /// </summary>
        [Fact]
        public void ProfileDataTest()
        {
            // TODO unit test for the property 'ProfileData'
        }

    }

}

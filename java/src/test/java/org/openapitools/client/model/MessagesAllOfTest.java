/*
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for MessagesAllOf
 */
public class MessagesAllOfTest {
    private final MessagesAllOf model = new MessagesAllOf();

    /**
     * Model tests for MessagesAllOf
     */
    @Test
    public void testMessagesAllOf() {
        // TODO: test MessagesAllOf
    }

    /**
     * Test the property 'avatarUrl'
     */
    @Test
    public void avatarUrlTest() {
        // TODO: test avatarUrl
    }

    /**
     * Test the property 'client'
     */
    @Test
    public void clientTest() {
        // TODO: test client
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    public void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'displayRecipient'
     */
    @Test
    public void displayRecipientTest() {
        // TODO: test displayRecipient
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isMeMessage'
     */
    @Test
    public void isMeMessageTest() {
        // TODO: test isMeMessage
    }

    /**
     * Test the property 'reactions'
     */
    @Test
    public void reactionsTest() {
        // TODO: test reactions
    }

    /**
     * Test the property 'recipientId'
     */
    @Test
    public void recipientIdTest() {
        // TODO: test recipientId
    }

    /**
     * Test the property 'senderEmail'
     */
    @Test
    public void senderEmailTest() {
        // TODO: test senderEmail
    }

    /**
     * Test the property 'senderFullName'
     */
    @Test
    public void senderFullNameTest() {
        // TODO: test senderFullName
    }

    /**
     * Test the property 'senderId'
     */
    @Test
    public void senderIdTest() {
        // TODO: test senderId
    }

    /**
     * Test the property 'senderRealmStr'
     */
    @Test
    public void senderRealmStrTest() {
        // TODO: test senderRealmStr
    }

    /**
     * Test the property 'streamId'
     */
    @Test
    public void streamIdTest() {
        // TODO: test streamId
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

    /**
     * Test the property 'topicLinks'
     */
    @Test
    public void topicLinksTest() {
        // TODO: test topicLinks
    }

    /**
     * Test the property 'submessages'
     */
    @Test
    public void submessagesTest() {
        // TODO: test submessages
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}

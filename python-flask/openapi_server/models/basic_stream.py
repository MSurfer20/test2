# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.basic_stream_all_of import BasicStreamAllOf
from openapi_server.models.basic_stream_base import BasicStreamBase
from openapi_server import util

from openapi_server.models.basic_stream_all_of import BasicStreamAllOf  # noqa: E501
from openapi_server.models.basic_stream_base import BasicStreamBase  # noqa: E501

class BasicStream(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_id=None, name=None, description=None, date_created=None, invite_only=None, rendered_description=None, is_web_public=None, stream_post_policy=None, message_retention_days=None, history_public_to_subscribers=None, first_message_id=None, is_announcement_only=None):  # noqa: E501
        """BasicStream - a model defined in OpenAPI

        :param stream_id: The stream_id of this BasicStream.  # noqa: E501
        :type stream_id: object
        :param name: The name of this BasicStream.  # noqa: E501
        :type name: object
        :param description: The description of this BasicStream.  # noqa: E501
        :type description: object
        :param date_created: The date_created of this BasicStream.  # noqa: E501
        :type date_created: object
        :param invite_only: The invite_only of this BasicStream.  # noqa: E501
        :type invite_only: object
        :param rendered_description: The rendered_description of this BasicStream.  # noqa: E501
        :type rendered_description: object
        :param is_web_public: The is_web_public of this BasicStream.  # noqa: E501
        :type is_web_public: object
        :param stream_post_policy: The stream_post_policy of this BasicStream.  # noqa: E501
        :type stream_post_policy: object
        :param message_retention_days: The message_retention_days of this BasicStream.  # noqa: E501
        :type message_retention_days: object
        :param history_public_to_subscribers: The history_public_to_subscribers of this BasicStream.  # noqa: E501
        :type history_public_to_subscribers: object
        :param first_message_id: The first_message_id of this BasicStream.  # noqa: E501
        :type first_message_id: object
        :param is_announcement_only: The is_announcement_only of this BasicStream.  # noqa: E501
        :type is_announcement_only: object
        """
        self.openapi_types = {
            'stream_id': object,
            'name': object,
            'description': object,
            'date_created': object,
            'invite_only': object,
            'rendered_description': object,
            'is_web_public': object,
            'stream_post_policy': object,
            'message_retention_days': object,
            'history_public_to_subscribers': object,
            'first_message_id': object,
            'is_announcement_only': object
        }

        self.attribute_map = {
            'stream_id': 'stream_id',
            'name': 'name',
            'description': 'description',
            'date_created': 'date_created',
            'invite_only': 'invite_only',
            'rendered_description': 'rendered_description',
            'is_web_public': 'is_web_public',
            'stream_post_policy': 'stream_post_policy',
            'message_retention_days': 'message_retention_days',
            'history_public_to_subscribers': 'history_public_to_subscribers',
            'first_message_id': 'first_message_id',
            'is_announcement_only': 'is_announcement_only'
        }

        self._stream_id = stream_id
        self._name = name
        self._description = description
        self._date_created = date_created
        self._invite_only = invite_only
        self._rendered_description = rendered_description
        self._is_web_public = is_web_public
        self._stream_post_policy = stream_post_policy
        self._message_retention_days = message_retention_days
        self._history_public_to_subscribers = history_public_to_subscribers
        self._first_message_id = first_message_id
        self._is_announcement_only = is_announcement_only

    @classmethod
    def from_dict(cls, dikt) -> 'BasicStream':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BasicStream of this BasicStream.  # noqa: E501
        :rtype: BasicStream
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_id(self):
        """Gets the stream_id of this BasicStream.


        :return: The stream_id of this BasicStream.
        :rtype: object
        """
        return self._stream_id

    @stream_id.setter
    def stream_id(self, stream_id):
        """Sets the stream_id of this BasicStream.


        :param stream_id: The stream_id of this BasicStream.
        :type stream_id: object
        """

        self._stream_id = stream_id

    @property
    def name(self):
        """Gets the name of this BasicStream.


        :return: The name of this BasicStream.
        :rtype: object
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BasicStream.


        :param name: The name of this BasicStream.
        :type name: object
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this BasicStream.


        :return: The description of this BasicStream.
        :rtype: object
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BasicStream.


        :param description: The description of this BasicStream.
        :type description: object
        """

        self._description = description

    @property
    def date_created(self):
        """Gets the date_created of this BasicStream.


        :return: The date_created of this BasicStream.
        :rtype: object
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this BasicStream.


        :param date_created: The date_created of this BasicStream.
        :type date_created: object
        """

        self._date_created = date_created

    @property
    def invite_only(self):
        """Gets the invite_only of this BasicStream.


        :return: The invite_only of this BasicStream.
        :rtype: object
        """
        return self._invite_only

    @invite_only.setter
    def invite_only(self, invite_only):
        """Sets the invite_only of this BasicStream.


        :param invite_only: The invite_only of this BasicStream.
        :type invite_only: object
        """

        self._invite_only = invite_only

    @property
    def rendered_description(self):
        """Gets the rendered_description of this BasicStream.


        :return: The rendered_description of this BasicStream.
        :rtype: object
        """
        return self._rendered_description

    @rendered_description.setter
    def rendered_description(self, rendered_description):
        """Sets the rendered_description of this BasicStream.


        :param rendered_description: The rendered_description of this BasicStream.
        :type rendered_description: object
        """

        self._rendered_description = rendered_description

    @property
    def is_web_public(self):
        """Gets the is_web_public of this BasicStream.


        :return: The is_web_public of this BasicStream.
        :rtype: object
        """
        return self._is_web_public

    @is_web_public.setter
    def is_web_public(self, is_web_public):
        """Sets the is_web_public of this BasicStream.


        :param is_web_public: The is_web_public of this BasicStream.
        :type is_web_public: object
        """

        self._is_web_public = is_web_public

    @property
    def stream_post_policy(self):
        """Gets the stream_post_policy of this BasicStream.


        :return: The stream_post_policy of this BasicStream.
        :rtype: object
        """
        return self._stream_post_policy

    @stream_post_policy.setter
    def stream_post_policy(self, stream_post_policy):
        """Sets the stream_post_policy of this BasicStream.


        :param stream_post_policy: The stream_post_policy of this BasicStream.
        :type stream_post_policy: object
        """

        self._stream_post_policy = stream_post_policy

    @property
    def message_retention_days(self):
        """Gets the message_retention_days of this BasicStream.


        :return: The message_retention_days of this BasicStream.
        :rtype: object
        """
        return self._message_retention_days

    @message_retention_days.setter
    def message_retention_days(self, message_retention_days):
        """Sets the message_retention_days of this BasicStream.


        :param message_retention_days: The message_retention_days of this BasicStream.
        :type message_retention_days: object
        """

        self._message_retention_days = message_retention_days

    @property
    def history_public_to_subscribers(self):
        """Gets the history_public_to_subscribers of this BasicStream.


        :return: The history_public_to_subscribers of this BasicStream.
        :rtype: object
        """
        return self._history_public_to_subscribers

    @history_public_to_subscribers.setter
    def history_public_to_subscribers(self, history_public_to_subscribers):
        """Sets the history_public_to_subscribers of this BasicStream.


        :param history_public_to_subscribers: The history_public_to_subscribers of this BasicStream.
        :type history_public_to_subscribers: object
        """

        self._history_public_to_subscribers = history_public_to_subscribers

    @property
    def first_message_id(self):
        """Gets the first_message_id of this BasicStream.


        :return: The first_message_id of this BasicStream.
        :rtype: object
        """
        return self._first_message_id

    @first_message_id.setter
    def first_message_id(self, first_message_id):
        """Sets the first_message_id of this BasicStream.


        :param first_message_id: The first_message_id of this BasicStream.
        :type first_message_id: object
        """

        self._first_message_id = first_message_id

    @property
    def is_announcement_only(self):
        """Gets the is_announcement_only of this BasicStream.


        :return: The is_announcement_only of this BasicStream.
        :rtype: object
        """
        return self._is_announcement_only

    @is_announcement_only.setter
    def is_announcement_only(self, is_announcement_only):
        """Sets the is_announcement_only of this BasicStream.


        :param is_announcement_only: The is_announcement_only of this BasicStream.
        :type is_announcement_only: object
        """

        self._is_announcement_only = is_announcement_only

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserBase.h
 *
 * A dictionary containing basic data on a given Zulip user. 
 */

#ifndef OAIUserBase_H
#define OAIUserBase_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserBase : public OAIObject {
public:
    OAIUserBase();
    OAIUserBase(QString json);
    ~OAIUserBase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isIsBot() const;
    void setIsBot(const bool &is_bot);
    bool is_is_bot_Set() const;
    bool is_is_bot_Valid() const;

    QString getAvatarUrl() const;
    void setAvatarUrl(const QString &avatar_url);
    bool is_avatar_url_Set() const;
    bool is_avatar_url_Valid() const;

    qint32 getAvatarVersion() const;
    void setAvatarVersion(const qint32 &avatar_version);
    bool is_avatar_version_Set() const;
    bool is_avatar_version_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    bool isIsAdmin() const;
    void setIsAdmin(const bool &is_admin);
    bool is_is_admin_Set() const;
    bool is_is_admin_Valid() const;

    bool isIsOwner() const;
    void setIsOwner(const bool &is_owner);
    bool is_is_owner_Set() const;
    bool is_is_owner_Valid() const;

    bool isIsBillingAdmin() const;
    void setIsBillingAdmin(const bool &is_billing_admin);
    bool is_is_billing_admin_Set() const;
    bool is_is_billing_admin_Valid() const;

    qint32 getRole() const;
    void setRole(const qint32 &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    qint32 getBotType() const;
    void setBotType(const qint32 &bot_type);
    bool is_bot_type_Set() const;
    bool is_bot_type_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    qint32 getBotOwnerId() const;
    void setBotOwnerId(const qint32 &bot_owner_id);
    bool is_bot_owner_id_Set() const;
    bool is_bot_owner_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsGuest() const;
    void setIsGuest(const bool &is_guest);
    bool is_is_guest_Set() const;
    bool is_is_guest_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getDateJoined() const;
    void setDateJoined(const QString &date_joined);
    bool is_date_joined_Set() const;
    bool is_date_joined_Valid() const;

    QString getDeliveryEmail() const;
    void setDeliveryEmail(const QString &delivery_email);
    bool is_delivery_email_Set() const;
    bool is_delivery_email_Valid() const;

    QMap<QString, OAIObject> getProfileData() const;
    void setProfileData(const QMap<QString, OAIObject> &profile_data);
    bool is_profile_data_Set() const;
    bool is_profile_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool is_bot;
    bool m_is_bot_isSet;
    bool m_is_bot_isValid;

    QString avatar_url;
    bool m_avatar_url_isSet;
    bool m_avatar_url_isValid;

    qint32 avatar_version;
    bool m_avatar_version_isSet;
    bool m_avatar_version_isValid;

    QString full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    bool is_admin;
    bool m_is_admin_isSet;
    bool m_is_admin_isValid;

    bool is_owner;
    bool m_is_owner_isSet;
    bool m_is_owner_isValid;

    bool is_billing_admin;
    bool m_is_billing_admin_isSet;
    bool m_is_billing_admin_isValid;

    qint32 role;
    bool m_role_isSet;
    bool m_role_isValid;

    qint32 bot_type;
    bool m_bot_type_isSet;
    bool m_bot_type_isValid;

    qint32 user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    qint32 bot_owner_id;
    bool m_bot_owner_id_isSet;
    bool m_bot_owner_id_isValid;

    bool is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool is_guest;
    bool m_is_guest_isSet;
    bool m_is_guest_isValid;

    QString timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString date_joined;
    bool m_date_joined_isSet;
    bool m_date_joined_isValid;

    QString delivery_email;
    bool m_delivery_email_isSet;
    bool m_delivery_email_isValid;

    QMap<QString, OAIObject> profile_data;
    bool m_profile_data_isSet;
    bool m_profile_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserBase)

#endif // OAIUserBase_H

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBasicStreamBase.h
 *
 * Object containing basic details about the stream. 
 */

#ifndef OAIBasicStreamBase_H
#define OAIBasicStreamBase_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBasicStreamBase : public OAIObject {
public:
    OAIBasicStreamBase();
    OAIBasicStreamBase(QString json);
    ~OAIBasicStreamBase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getStreamId() const;
    void setStreamId(const qint32 &stream_id);
    bool is_stream_id_Set() const;
    bool is_stream_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDateCreated() const;
    void setDateCreated(const qint32 &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    bool isInviteOnly() const;
    void setInviteOnly(const bool &invite_only);
    bool is_invite_only_Set() const;
    bool is_invite_only_Valid() const;

    QString getRenderedDescription() const;
    void setRenderedDescription(const QString &rendered_description);
    bool is_rendered_description_Set() const;
    bool is_rendered_description_Valid() const;

    bool isIsWebPublic() const;
    void setIsWebPublic(const bool &is_web_public);
    bool is_is_web_public_Set() const;
    bool is_is_web_public_Valid() const;

    qint32 getStreamPostPolicy() const;
    void setStreamPostPolicy(const qint32 &stream_post_policy);
    bool is_stream_post_policy_Set() const;
    bool is_stream_post_policy_Valid() const;

    qint32 getMessageRetentionDays() const;
    void setMessageRetentionDays(const qint32 &message_retention_days);
    bool is_message_retention_days_Set() const;
    bool is_message_retention_days_Valid() const;

    bool isHistoryPublicToSubscribers() const;
    void setHistoryPublicToSubscribers(const bool &history_public_to_subscribers);
    bool is_history_public_to_subscribers_Set() const;
    bool is_history_public_to_subscribers_Valid() const;

    qint32 getFirstMessageId() const;
    void setFirstMessageId(const qint32 &first_message_id);
    bool is_first_message_id_Set() const;
    bool is_first_message_id_Valid() const;

    Q_DECL_DEPRECATED bool isIsAnnouncementOnly() const;
    Q_DECL_DEPRECATED void setIsAnnouncementOnly(const bool &is_announcement_only);
    Q_DECL_DEPRECATED bool is_is_announcement_only_Set() const;
    Q_DECL_DEPRECATED bool is_is_announcement_only_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 stream_id;
    bool m_stream_id_isSet;
    bool m_stream_id_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    bool invite_only;
    bool m_invite_only_isSet;
    bool m_invite_only_isValid;

    QString rendered_description;
    bool m_rendered_description_isSet;
    bool m_rendered_description_isValid;

    bool is_web_public;
    bool m_is_web_public_isSet;
    bool m_is_web_public_isValid;

    qint32 stream_post_policy;
    bool m_stream_post_policy_isSet;
    bool m_stream_post_policy_isValid;

    qint32 message_retention_days;
    bool m_message_retention_days_isSet;
    bool m_message_retention_days_isValid;

    bool history_public_to_subscribers;
    bool m_history_public_to_subscribers_isSet;
    bool m_history_public_to_subscribers_isValid;

    qint32 first_message_id;
    bool m_first_message_id_isSet;
    bool m_first_message_id_isValid;

    bool is_announcement_only;
    bool m_is_announcement_only_isSet;
    bool m_is_announcement_only_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBasicStreamBase)

#endif // OAIBasicStreamBase_H

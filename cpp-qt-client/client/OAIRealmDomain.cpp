/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRealmDomain.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRealmDomain::OAIRealmDomain(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRealmDomain::OAIRealmDomain() {
    this->initializeModel();
}

OAIRealmDomain::~OAIRealmDomain() {}

void OAIRealmDomain::initializeModel() {

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_allow_subdomains_isSet = false;
    m_allow_subdomains_isValid = false;
}

void OAIRealmDomain::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRealmDomain::fromJsonObject(QJsonObject json) {

    m_domain_isValid = ::OpenAPI::fromJsonValue(domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_allow_subdomains_isValid = ::OpenAPI::fromJsonValue(allow_subdomains, json[QString("allow_subdomains")]);
    m_allow_subdomains_isSet = !json[QString("allow_subdomains")].isNull() && m_allow_subdomains_isValid;
}

QString OAIRealmDomain::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRealmDomain::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(domain));
    }
    if (m_allow_subdomains_isSet) {
        obj.insert(QString("allow_subdomains"), ::OpenAPI::toJsonValue(allow_subdomains));
    }
    return obj;
}

QString OAIRealmDomain::getDomain() const {
    return domain;
}
void OAIRealmDomain::setDomain(const QString &domain) {
    this->domain = domain;
    this->m_domain_isSet = true;
}

bool OAIRealmDomain::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIRealmDomain::is_domain_Valid() const{
    return m_domain_isValid;
}

bool OAIRealmDomain::isAllowSubdomains() const {
    return allow_subdomains;
}
void OAIRealmDomain::setAllowSubdomains(const bool &allow_subdomains) {
    this->allow_subdomains = allow_subdomains;
    this->m_allow_subdomains_isSet = true;
}

bool OAIRealmDomain::is_allow_subdomains_Set() const{
    return m_allow_subdomains_isSet;
}

bool OAIRealmDomain::is_allow_subdomains_Valid() const{
    return m_allow_subdomains_isValid;
}

bool OAIRealmDomain::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_subdomains_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRealmDomain::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRealmPlayground.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRealmPlayground::OAIRealmPlayground(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRealmPlayground::OAIRealmPlayground() {
    this->initializeModel();
}

OAIRealmPlayground::~OAIRealmPlayground() {}

void OAIRealmPlayground::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pygments_language_isSet = false;
    m_pygments_language_isValid = false;

    m_url_prefix_isSet = false;
    m_url_prefix_isValid = false;
}

void OAIRealmPlayground::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRealmPlayground::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pygments_language_isValid = ::OpenAPI::fromJsonValue(pygments_language, json[QString("pygments_language")]);
    m_pygments_language_isSet = !json[QString("pygments_language")].isNull() && m_pygments_language_isValid;

    m_url_prefix_isValid = ::OpenAPI::fromJsonValue(url_prefix, json[QString("url_prefix")]);
    m_url_prefix_isSet = !json[QString("url_prefix")].isNull() && m_url_prefix_isValid;
}

QString OAIRealmPlayground::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRealmPlayground::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_pygments_language_isSet) {
        obj.insert(QString("pygments_language"), ::OpenAPI::toJsonValue(pygments_language));
    }
    if (m_url_prefix_isSet) {
        obj.insert(QString("url_prefix"), ::OpenAPI::toJsonValue(url_prefix));
    }
    return obj;
}

qint32 OAIRealmPlayground::getId() const {
    return id;
}
void OAIRealmPlayground::setId(const qint32 &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIRealmPlayground::is_id_Set() const{
    return m_id_isSet;
}

bool OAIRealmPlayground::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIRealmPlayground::getName() const {
    return name;
}
void OAIRealmPlayground::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAIRealmPlayground::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRealmPlayground::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRealmPlayground::getPygmentsLanguage() const {
    return pygments_language;
}
void OAIRealmPlayground::setPygmentsLanguage(const QString &pygments_language) {
    this->pygments_language = pygments_language;
    this->m_pygments_language_isSet = true;
}

bool OAIRealmPlayground::is_pygments_language_Set() const{
    return m_pygments_language_isSet;
}

bool OAIRealmPlayground::is_pygments_language_Valid() const{
    return m_pygments_language_isValid;
}

QString OAIRealmPlayground::getUrlPrefix() const {
    return url_prefix;
}
void OAIRealmPlayground::setUrlPrefix(const QString &url_prefix) {
    this->url_prefix = url_prefix;
    this->m_url_prefix_isSet = true;
}

bool OAIRealmPlayground::is_url_prefix_Set() const{
    return m_url_prefix_isSet;
}

bool OAIRealmPlayground::is_url_prefix_Valid() const{
    return m_url_prefix_isValid;
}

bool OAIRealmPlayground::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pygments_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRealmPlayground::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI

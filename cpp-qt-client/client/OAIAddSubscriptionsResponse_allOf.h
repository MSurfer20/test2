/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddSubscriptionsResponse_allOf.h
 *
 * 
 */

#ifndef OAIAddSubscriptionsResponse_allOf_H
#define OAIAddSubscriptionsResponse_allOf_H

#include <QJsonObject>

#include "OAIAnyType.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAddSubscriptionsResponse_allOf : public OAIObject {
public:
    OAIAddSubscriptionsResponse_allOf();
    OAIAddSubscriptionsResponse_allOf(QString json);
    ~OAIAddSubscriptionsResponse_allOf() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnyType getResult() const;
    void setResult(const OAIAnyType &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    OAIAnyType getMsg() const;
    void setMsg(const OAIAnyType &msg);
    bool is_msg_Set() const;
    bool is_msg_Valid() const;

    QMap<QString, QList<QString>> getSubscribed() const;
    void setSubscribed(const QMap<QString, QList<QString>> &subscribed);
    bool is_subscribed_Set() const;
    bool is_subscribed_Valid() const;

    QMap<QString, QList<QString>> getAlreadySubscribed() const;
    void setAlreadySubscribed(const QMap<QString, QList<QString>> &already_subscribed);
    bool is_already_subscribed_Set() const;
    bool is_already_subscribed_Valid() const;

    QList<QString> getUnauthorized() const;
    void setUnauthorized(const QList<QString> &unauthorized);
    bool is_unauthorized_Set() const;
    bool is_unauthorized_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnyType result;
    bool m_result_isSet;
    bool m_result_isValid;

    OAIAnyType msg;
    bool m_msg_isSet;
    bool m_msg_isValid;

    QMap<QString, QList<QString>> subscribed;
    bool m_subscribed_isSet;
    bool m_subscribed_isValid;

    QMap<QString, QList<QString>> already_subscribed;
    bool m_already_subscribed_isSet;
    bool m_already_subscribed_isValid;

    QList<QString> unauthorized;
    bool m_unauthorized_isSet;
    bool m_unauthorized_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddSubscriptionsResponse_allOf)

#endif // OAIAddSubscriptionsResponse_allOf_H

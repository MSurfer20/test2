/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomProfileField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomProfileField::OAICustomProfileField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomProfileField::OAICustomProfileField() {
    this->initializeModel();
}

OAICustomProfileField::~OAICustomProfileField() {}

void OAICustomProfileField::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_hint_isSet = false;
    m_hint_isValid = false;

    m_field_data_isSet = false;
    m_field_data_isValid = false;
}

void OAICustomProfileField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomProfileField::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_hint_isValid = ::OpenAPI::fromJsonValue(hint, json[QString("hint")]);
    m_hint_isSet = !json[QString("hint")].isNull() && m_hint_isValid;

    m_field_data_isValid = ::OpenAPI::fromJsonValue(field_data, json[QString("field_data")]);
    m_field_data_isSet = !json[QString("field_data")].isNull() && m_field_data_isValid;
}

QString OAICustomProfileField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomProfileField::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(type));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(order));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_hint_isSet) {
        obj.insert(QString("hint"), ::OpenAPI::toJsonValue(hint));
    }
    if (m_field_data_isSet) {
        obj.insert(QString("field_data"), ::OpenAPI::toJsonValue(field_data));
    }
    return obj;
}

qint32 OAICustomProfileField::getId() const {
    return id;
}
void OAICustomProfileField::setId(const qint32 &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAICustomProfileField::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomProfileField::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAICustomProfileField::getType() const {
    return type;
}
void OAICustomProfileField::setType(const qint32 &type) {
    this->type = type;
    this->m_type_isSet = true;
}

bool OAICustomProfileField::is_type_Set() const{
    return m_type_isSet;
}

bool OAICustomProfileField::is_type_Valid() const{
    return m_type_isValid;
}

qint32 OAICustomProfileField::getOrder() const {
    return order;
}
void OAICustomProfileField::setOrder(const qint32 &order) {
    this->order = order;
    this->m_order_isSet = true;
}

bool OAICustomProfileField::is_order_Set() const{
    return m_order_isSet;
}

bool OAICustomProfileField::is_order_Valid() const{
    return m_order_isValid;
}

QString OAICustomProfileField::getName() const {
    return name;
}
void OAICustomProfileField::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAICustomProfileField::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomProfileField::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICustomProfileField::getHint() const {
    return hint;
}
void OAICustomProfileField::setHint(const QString &hint) {
    this->hint = hint;
    this->m_hint_isSet = true;
}

bool OAICustomProfileField::is_hint_Set() const{
    return m_hint_isSet;
}

bool OAICustomProfileField::is_hint_Valid() const{
    return m_hint_isValid;
}

QString OAICustomProfileField::getFieldData() const {
    return field_data;
}
void OAICustomProfileField::setFieldData(const QString &field_data) {
    this->field_data = field_data;
    this->m_field_data_isSet = true;
}

bool OAICustomProfileField::is_field_data_Set() const{
    return m_field_data_isSet;
}

bool OAICustomProfileField::is_field_data_Valid() const{
    return m_field_data_isValid;
}

bool OAICustomProfileField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_data_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomProfileField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.model
import play.api.libs.json._

case class GetMessagesAllOf (
                  avatarUrl: Option[AnyType],
                  client: Option[AnyType],
                  content: Option[AnyType],
                  `contentType`: Option[AnyType],
                  displayRecipient: Option[AnyType],
                  id: Option[AnyType],
                  isMeMessage: Option[AnyType],
                  reactions: Option[AnyType],
                  recipientId: Option[AnyType],
                  senderEmail: Option[AnyType],
                  senderFullName: Option[AnyType],
                  senderId: Option[AnyType],
                  senderRealmStr: Option[AnyType],
                  streamId: Option[AnyType],
                  subject: Option[AnyType],
                  topicLinks: Option[AnyType],
                  submessages: Option[AnyType],
                  timestamp: Option[AnyType],
                  `type`: Option[AnyType],
            /* The user's [message flags][message-flags] for the message.  [message-flags]: /api/update-message-flags#available-flags  */
                  flags: Option[Seq[String]],
            /* The UNIX timestamp for when the message was last edited, in UTC seconds.  */
                  lastEditTimestamp: Option[Int],
            /* Only present if keyword search was included among the narrow parameters. HTML content of a queried message that matches the narrow, with `<span class=\"highlight\">` elements wrapping the matches for the search keywords.  */
                  matchContent: Option[String],
            /* Only present if keyword search was included among the narrow parameters. HTML-escaped topic of a queried message that matches the narrow, with `<span class=\"highlight\">` elements wrapping the matches for the search keywords.  */
                  matchSubject: Option[String]
)

object GetMessagesAllOf {
implicit val format: Format[GetMessagesAllOf] = Json.format
}


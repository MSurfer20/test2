/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.CodedError
import io.swagger.client.model.Draft
import io.swagger.client.model.JsonError
import io.swagger.client.model.JsonSuccess

trait DraftsApi extends Service {


  final override def descriptor = {
    import Service._
    named("DraftsApi").withCalls(
      restCall(Method.POST, "/drafts?drafts", createDrafts _), 
      restCall(Method.DELETE, "/drafts/:draft_id", deleteDraft _), 
      restCall(Method.PATCH, "/drafts/:draft_id?draft", editDraft _), 
      restCall(Method.GET, "/drafts", getDrafts _)
    ).withAutoAcl(true)
  }

      
  // drafts:Seq[Draft]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  /**
    * Create drafts
    * Create one or more drafts on the server. These drafts will be automatically synchronized to other clients via &#x60;drafts&#x60; events.  &#x60;POST {{ api_url }}/v1/drafts&#x60; 
    *  
    * @param drafts A JSON-encoded list of containing new draft objects.  (optional, default to new ListBuffer[Draft]() )
    * @return JsonSuccess
    */
  def createDrafts(): ServiceCall[NotUsed ,JsonSuccess]
  
  /**
    * Delete a draft
    * Delete a single draft from the server. The deletion will be automatically synchronized to other clients via a &#x60;drafts&#x60; event.  &#x60;DELETE {{ api_url }}/v1/drafts/{draft_id}&#x60; 
    *  
    * @param draftId The ID of the draft you want to delete.  
    * @return JsonSuccess
    */
  def deleteDraft(draftId: Int): ServiceCall[NotUsed ,JsonSuccess]
        
  /**
    * Edit a draft
    * Edit a draft on the server. The edit will be automatically synchronized to other clients via &#x60;drafts&#x60; events.  &#x60;PATCH {{ api_url }}/v1/drafts/{draft_id}&#x60; 
    *  
    * @param draftId The ID of the draft to be edited.   
    * @param draft A JSON-encoded object containing a replacement draft object for this ID.  
    * @return JsonSuccess
    */
  def editDraft(draft:Draft          draftId: Int): ServiceCall[NotUsed ,JsonSuccess]
  
  /**
    * Get drafts
    * Fetch all drafts for the current user.  &#x60;GET {{ api_url }}/v1/drafts&#x60; 
    * 
    * @return JsonSuccess
    */
  def getDrafts(): ServiceCall[NotUsed ,JsonSuccess]
  

  }


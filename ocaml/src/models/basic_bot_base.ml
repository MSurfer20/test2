(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
    (* The user id of the bot.  *)
    user_id: int32 option [@default None];
    (* The full name of the bot.  *)
    full_name: string option [@default None];
    (* The API key of the bot which it uses to make API requests.  *)
    api_key: string option [@default None];
    (* The default sending stream of the bot. Null if the bot doesn't have a default sending stream.  *)
    default_sending_stream: string option [@default None];
    (* The default stream for which the bot receives events/register data. Null if the bot doesn't have such a default stream.  *)
    default_events_register_stream: string option [@default None];
    (* Whether the bot can send messages to all streams by default.  *)
    default_all_public_streams: bool option [@default None];
    (* The URL of the bot's avatar.  *)
    avatar_url: string option [@default None];
    (* The user id of the bot's owner.  Null if the bot has no owner.  *)
    owner_id: int32 option [@default None];
    (* The \''Services\'' array contains extra configuration fields only relevant for Outgoing webhook bots and Embedded bots.  It is always a single-element array.  We consider this part of the Zulip API to be unstable; it is used only for UI elements for administering bots and is likely to change.  *)
    services: One_ofobjectobject.t list;
} [@@deriving yojson { strict = false }, show ];;

let create () : t = {
    user_id = None;
    full_name = None;
    api_key = None;
    default_sending_stream = None;
    default_events_register_stream = None;
    default_all_public_streams = None;
    avatar_url = None;
    owner_id = None;
    services = [];
}


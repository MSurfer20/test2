(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Basic_stream_base.t : Object containing basic details about the stream. 
 *)

type t = {
    (* The unique ID of the stream.  *)
    stream_id: int32 option [@default None];
    (* The name of the stream.  *)
    name: string option [@default None];
    (* The short description of the stream in text/markdown format, intended to be used to prepopulate UI for editing a stream's description.  *)
    description: string option [@default None];
    (* The UNIX timestamp for when the stream was created, in UTC seconds.  **Changes**: New in Zulip 4.0 (feature level 30).  *)
    date_created: int32 option [@default None];
    (* Specifies whether the stream is private or not. Only people who have been invited can access a private stream.  *)
    invite_only: bool option [@default None];
    (* The short description of the stream rendered as HTML, intended to be used when displaying the stream description in a UI.  One should use the standard Zulip rendered_markdown CSS when displaying this content so that emoji, LaTeX, and other syntax work correctly.  And any client-side security logic for user-generated message content should be applied when displaying this HTML as though it were the body of a Zulip message.  *)
    rendered_description: string option [@default None];
    (* Whether the stream has been configured to allow unauthenticated access to its message history from the web.  *)
    is_web_public: bool option [@default None];
    (* Policy for which users can post messages to the stream.  * 1 => Any user can post. * 2 => Only administrators can post. * 3 => Only full members can post. * 4 => Only moderators can post.  **Changes**: New in Zulip 3.0, replacing the previous `is_announcement_only` boolean.  *)
    stream_post_policy: int32 option [@default None];
    (* Number of days that messages sent to this stream will be stored before being automatically deleted by the [message retention policy](/help/message-retention-policy).  There are two special values:  * `null`, the default, means the stream will inherit the organization   level setting. * `-1` encodes retaining messages in this stream forever.  **Changes**: New in Zulip 3.0 (feature level 17).  *)
    message_retention_days: int32 option [@default None];
    (* Whether the history of the stream is public to its subscribers.  Currently always true for public streams (i.e. invite_only=False implies history_public_to_subscribers=True), but clients should not make that assumption, as we may change that behavior in the future.  *)
    history_public_to_subscribers: bool option [@default None];
    (* The id of the first message in the stream.  Intended to help clients determine whether they need to display UI like the \''more topics\'' widget that would suggest the stream has older history that can be accessed.  Null is used for streams with no message history.  *)
    first_message_id: int32 option [@default None];
    (* Whether the given stream is announcement only or not.  **Changes**: Deprecated in Zulip 3.0 (feature level 1), use `stream_post_policy` instead.  *)
    is_announcement_only: bool option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Object containing basic details about the stream.  *)
let create () : t = {
    stream_id = None;
    name = None;
    description = None;
    date_created = None;
    invite_only = None;
    rendered_description = None;
    is_web_public = None;
    stream_post_policy = None;
    message_retention_days = None;
    history_public_to_subscribers = None;
    first_message_id = None;
    is_announcement_only = None;
}


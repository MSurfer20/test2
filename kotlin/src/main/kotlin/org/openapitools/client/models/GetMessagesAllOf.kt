/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.AnyType

import com.squareup.moshi.Json

/**
 * 
 * @param avatarUrl 
 * @param client 
 * @param content 
 * @param contentType 
 * @param displayRecipient 
 * @param id 
 * @param isMeMessage 
 * @param reactions 
 * @param recipientId 
 * @param senderEmail 
 * @param senderFullName 
 * @param senderId 
 * @param senderRealmStr 
 * @param streamId 
 * @param subject 
 * @param topicLinks 
 * @param submessages 
 * @param timestamp 
 * @param type 
 * @param flags The user's [message flags][message-flags] for the message.  [message-flags]: /api/update-message-flags#available-flags 
 * @param lastEditTimestamp The UNIX timestamp for when the message was last edited, in UTC seconds. 
 * @param matchContent Only present if keyword search was included among the narrow parameters. HTML content of a queried message that matches the narrow, with `<span class=\"highlight\">` elements wrapping the matches for the search keywords. 
 * @param matchSubject Only present if keyword search was included among the narrow parameters. HTML-escaped topic of a queried message that matches the narrow, with `<span class=\"highlight\">` elements wrapping the matches for the search keywords. 
 */

data class GetMessagesAllOf (
    @Json(name = "avatar_url")
    val avatarUrl: AnyType? = null,
    @Json(name = "client")
    val client: AnyType? = null,
    @Json(name = "content")
    val content: AnyType? = null,
    @Json(name = "content_type")
    val contentType: AnyType? = null,
    @Json(name = "display_recipient")
    val displayRecipient: AnyType? = null,
    @Json(name = "id")
    val id: AnyType? = null,
    @Json(name = "is_me_message")
    val isMeMessage: AnyType? = null,
    @Json(name = "reactions")
    val reactions: AnyType? = null,
    @Json(name = "recipient_id")
    val recipientId: AnyType? = null,
    @Json(name = "sender_email")
    val senderEmail: AnyType? = null,
    @Json(name = "sender_full_name")
    val senderFullName: AnyType? = null,
    @Json(name = "sender_id")
    val senderId: AnyType? = null,
    @Json(name = "sender_realm_str")
    val senderRealmStr: AnyType? = null,
    @Json(name = "stream_id")
    val streamId: AnyType? = null,
    @Json(name = "subject")
    val subject: AnyType? = null,
    @Json(name = "topic_links")
    val topicLinks: AnyType? = null,
    @Json(name = "submessages")
    val submessages: AnyType? = null,
    @Json(name = "timestamp")
    val timestamp: AnyType? = null,
    @Json(name = "type")
    val type: AnyType? = null,
    /* The user's [message flags][message-flags] for the message.  [message-flags]: /api/update-message-flags#available-flags  */
    @Json(name = "flags")
    val flags: kotlin.collections.List<kotlin.String>? = null,
    /* The UNIX timestamp for when the message was last edited, in UTC seconds.  */
    @Json(name = "last_edit_timestamp")
    val lastEditTimestamp: kotlin.Int? = null,
    /* Only present if keyword search was included among the narrow parameters. HTML content of a queried message that matches the narrow, with `<span class=\"highlight\">` elements wrapping the matches for the search keywords.  */
    @Json(name = "match_content")
    val matchContent: kotlin.String? = null,
    /* Only present if keyword search was included among the narrow parameters. HTML-escaped topic of a queried message that matches the narrow, with `<span class=\"highlight\">` elements wrapping the matches for the search keywords.  */
    @Json(name = "match_subject")
    val matchSubject: kotlin.String? = null
)


/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * &#x60;{emoji_id}&#x60;: Object containing details about the emoji with  the specified ID. It has the following properties: 
 **/
@ApiModel(description = "`{emoji_id}`: Object containing details about the emoji with  the specified ID. It has the following properties: ")
public class RealmEmoji {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("source_url")
  private String sourceUrl = null;
  @SerializedName("deactivated")
  private Boolean deactivated = null;
  @SerializedName("author_id")
  private Integer authorId = null;

  /**
   * The ID for this emoji, same as the object's key. 
   **/
  @ApiModelProperty(value = "The ID for this emoji, same as the object's key. ")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The user-friendly name for this emoji. Users in the organization can use this emoji by writing this name between colons (`:name  :`). 
   **/
  @ApiModelProperty(value = "The user-friendly name for this emoji. Users in the organization can use this emoji by writing this name between colons (`:name  :`). ")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The path relative to the organization's URL where the emoji's image can be found. 
   **/
  @ApiModelProperty(value = "The path relative to the organization's URL where the emoji's image can be found. ")
  public String getSourceUrl() {
    return sourceUrl;
  }
  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }

  /**
   * Whether the emoji has been deactivated or not. 
   **/
  @ApiModelProperty(value = "Whether the emoji has been deactivated or not. ")
  public Boolean getDeactivated() {
    return deactivated;
  }
  public void setDeactivated(Boolean deactivated) {
    this.deactivated = deactivated;
  }

  /**
   * The user ID of the user who uploaded the custom emoji. Will be null if the uploader is unknown.  **Changes**: New in Zulip 3.0 (feature level 7).  Previously was accessible via and `author` object with an `id` field. 
   **/
  @ApiModelProperty(value = "The user ID of the user who uploaded the custom emoji. Will be null if the uploader is unknown.  **Changes**: New in Zulip 3.0 (feature level 7).  Previously was accessible via and `author` object with an `id` field. ")
  public Integer getAuthorId() {
    return authorId;
  }
  public void setAuthorId(Integer authorId) {
    this.authorId = authorId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealmEmoji realmEmoji = (RealmEmoji) o;
    return (this.id == null ? realmEmoji.id == null : this.id.equals(realmEmoji.id)) &&
        (this.name == null ? realmEmoji.name == null : this.name.equals(realmEmoji.name)) &&
        (this.sourceUrl == null ? realmEmoji.sourceUrl == null : this.sourceUrl.equals(realmEmoji.sourceUrl)) &&
        (this.deactivated == null ? realmEmoji.deactivated == null : this.deactivated.equals(realmEmoji.deactivated)) &&
        (this.authorId == null ? realmEmoji.authorId == null : this.authorId.equals(realmEmoji.authorId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.sourceUrl == null ? 0: this.sourceUrl.hashCode());
    result = 31 * result + (this.deactivated == null ? 0: this.deactivated.hashCode());
    result = 31 * result + (this.authorId == null ? 0: this.authorId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealmEmoji {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  sourceUrl: ").append(sourceUrl).append("\n");
    sb.append("  deactivated: ").append(deactivated).append("\n");
    sb.append("  authorId: ").append(authorId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

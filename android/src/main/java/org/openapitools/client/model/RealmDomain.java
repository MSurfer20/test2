/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Object containing details of the newly added domain. 
 **/
@ApiModel(description = "Object containing details of the newly added domain. ")
public class RealmDomain {
  
  @SerializedName("domain")
  private String domain = null;
  @SerializedName("allow_subdomains")
  private Boolean allowSubdomains = null;

  /**
   * The new allowed domain. 
   **/
  @ApiModelProperty(value = "The new allowed domain. ")
  public String getDomain() {
    return domain;
  }
  public void setDomain(String domain) {
    this.domain = domain;
  }

  /**
   * Whether subdomains are allowed for this domain. 
   **/
  @ApiModelProperty(value = "Whether subdomains are allowed for this domain. ")
  public Boolean getAllowSubdomains() {
    return allowSubdomains;
  }
  public void setAllowSubdomains(Boolean allowSubdomains) {
    this.allowSubdomains = allowSubdomains;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealmDomain realmDomain = (RealmDomain) o;
    return (this.domain == null ? realmDomain.domain == null : this.domain.equals(realmDomain.domain)) &&
        (this.allowSubdomains == null ? realmDomain.allowSubdomains == null : this.allowSubdomains.equals(realmDomain.allowSubdomains));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.domain == null ? 0: this.domain.hashCode());
    result = 31 * result + (this.allowSubdomains == null ? 0: this.allowSubdomains.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealmDomain {\n");
    
    sb.append("  domain: ").append(domain).append("\n");
    sb.append("  allowSubdomains: ").append(allowSubdomains).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

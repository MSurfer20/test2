/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.EmojiReactionAllOf;
import org.openapitools.client.model.EmojiReactionBase;
import org.openapitools.client.model.OasAnyTypeNotMapped;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class EmojiReaction {
  
  @SerializedName("emoji_code")
  private OasAnyTypeNotMapped emojiCode = null;
  @SerializedName("emoji_name")
  private OasAnyTypeNotMapped emojiName = null;
  @SerializedName("reaction_type")
  private OasAnyTypeNotMapped reactionType = null;
  @SerializedName("user_id")
  private OasAnyTypeNotMapped userId = null;
  @SerializedName("user")
  private OasAnyTypeNotMapped user = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public OasAnyTypeNotMapped getEmojiCode() {
    return emojiCode;
  }
  public void setEmojiCode(OasAnyTypeNotMapped emojiCode) {
    this.emojiCode = emojiCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OasAnyTypeNotMapped getEmojiName() {
    return emojiName;
  }
  public void setEmojiName(OasAnyTypeNotMapped emojiName) {
    this.emojiName = emojiName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OasAnyTypeNotMapped getReactionType() {
    return reactionType;
  }
  public void setReactionType(OasAnyTypeNotMapped reactionType) {
    this.reactionType = reactionType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OasAnyTypeNotMapped getUserId() {
    return userId;
  }
  public void setUserId(OasAnyTypeNotMapped userId) {
    this.userId = userId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OasAnyTypeNotMapped getUser() {
    return user;
  }
  public void setUser(OasAnyTypeNotMapped user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmojiReaction emojiReaction = (EmojiReaction) o;
    return (this.emojiCode == null ? emojiReaction.emojiCode == null : this.emojiCode.equals(emojiReaction.emojiCode)) &&
        (this.emojiName == null ? emojiReaction.emojiName == null : this.emojiName.equals(emojiReaction.emojiName)) &&
        (this.reactionType == null ? emojiReaction.reactionType == null : this.reactionType.equals(emojiReaction.reactionType)) &&
        (this.userId == null ? emojiReaction.userId == null : this.userId.equals(emojiReaction.userId)) &&
        (this.user == null ? emojiReaction.user == null : this.user.equals(emojiReaction.user));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.emojiCode == null ? 0: this.emojiCode.hashCode());
    result = 31 * result + (this.emojiName == null ? 0: this.emojiName.hashCode());
    result = 31 * result + (this.reactionType == null ? 0: this.reactionType.hashCode());
    result = 31 * result + (this.userId == null ? 0: this.userId.hashCode());
    result = 31 * result + (this.user == null ? 0: this.user.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmojiReaction {\n");
    
    sb.append("  emojiCode: ").append(emojiCode).append("\n");
    sb.append("  emojiName: ").append(emojiName).append("\n");
    sb.append("  reactionType: ").append(reactionType).append("\n");
    sb.append("  userId: ").append(userId).append("\n");
    sb.append("  user: ").append(user).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

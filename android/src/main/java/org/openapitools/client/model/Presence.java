/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * &#x60;{client_name}&#x60;: Object containing the details of the user&#39;s presence on a particular platform with the client&#39;s platform name being the object key. 
 **/
@ApiModel(description = "`{client_name}`: Object containing the details of the user's presence on a particular platform with the client's platform name being the object key. ")
public class Presence {
  
  @SerializedName("client")
  private String client = null;
  public enum StatusEnum {
     idle,  active, 
  };
  @SerializedName("status")
  private StatusEnum status = null;
  @SerializedName("timestamp")
  private Integer timestamp = null;
  @SerializedName("pushable")
  private Boolean pushable = null;

  /**
   * The client's platform name. 
   **/
  @ApiModelProperty(value = "The client's platform name. ")
  public String getClient() {
    return client;
  }
  public void setClient(String client) {
    this.client = client;
  }

  /**
   * The status of the user on this client. It is either `idle` or `active`. 
   **/
  @ApiModelProperty(value = "The status of the user on this client. It is either `idle` or `active`. ")
  public StatusEnum getStatus() {
    return status;
  }
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  /**
   * The UNIX timestamp of when this client sent the user's presence to the server with the precision of a second. 
   **/
  @ApiModelProperty(value = "The UNIX timestamp of when this client sent the user's presence to the server with the precision of a second. ")
  public Integer getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Whether the client is capable of showing mobile/push notifications to the user. 
   **/
  @ApiModelProperty(value = "Whether the client is capable of showing mobile/push notifications to the user. ")
  public Boolean getPushable() {
    return pushable;
  }
  public void setPushable(Boolean pushable) {
    this.pushable = pushable;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Presence presence = (Presence) o;
    return (this.client == null ? presence.client == null : this.client.equals(presence.client)) &&
        (this.status == null ? presence.status == null : this.status.equals(presence.status)) &&
        (this.timestamp == null ? presence.timestamp == null : this.timestamp.equals(presence.timestamp)) &&
        (this.pushable == null ? presence.pushable == null : this.pushable.equals(presence.pushable));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.client == null ? 0: this.client.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.pushable == null ? 0: this.pushable.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Presence {\n");
    
    sb.append("  client: ").append(client).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  pushable: ").append(pushable).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

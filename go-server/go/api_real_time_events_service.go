/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// RealTimeEventsApiService is a service that implents the logic for the RealTimeEventsApiServicer
// This service should implement the business logic for every endpoint for the RealTimeEventsApi API. 
// Include any external packages or services that will be required by this service.
type RealTimeEventsApiService struct {
}

// NewRealTimeEventsApiService creates a default api service
func NewRealTimeEventsApiService() RealTimeEventsApiServicer {
	return &RealTimeEventsApiService{}
}

// DeleteQueue - Delete an event queue
func (s *RealTimeEventsApiService) DeleteQueue(ctx context.Context, queueId string) (ImplResponse, error) {
	// TODO - update DeleteQueue with the required logic for this service method.
	// Add api_real_time_events_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccess{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccess{}), nil

	//TODO: Uncomment the next line to return response Response(400, BadEventQueueIdError{}) or use other options such as http.Ok ...
	//return Response(400, BadEventQueueIdError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteQueue method not implemented")
}

// GetEvents - Get events from an event queue
func (s *RealTimeEventsApiService) GetEvents(ctx context.Context, queueId string, lastEventId int32, dontBlock bool) (ImplResponse, error) {
	// TODO - update GetEvents with the required logic for this service method.
	// Add api_real_time_events_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	//TODO: Uncomment the next line to return response Response(400, BadEventQueueIdError{}) or use other options such as http.Ok ...
	//return Response(400, BadEventQueueIdError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEvents method not implemented")
}

// RealTimePost - 
func (s *RealTimeEventsApiService) RealTimePost(ctx context.Context, eventTypes []string, narrow [][]string, allPublicStreams bool) (ImplResponse, error) {
	// TODO - update RealTimePost with the required logic for this service method.
	// Add api_real_time_events_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RealTimePost method not implemented")
}

// RegisterQueue - Register an event queue
func (s *RealTimeEventsApiService) RegisterQueue(ctx context.Context, applyMarkdown bool, clientGravatar bool, slimPresence bool, eventTypes []string, allPublicStreams bool, includeSubscribers bool, clientCapabilities map[string]interface{}, fetchEventTypes []string, narrow [][]string) (ImplResponse, error) {
	// TODO - update RegisterQueue with the required logic for this service method.
	// Add api_real_time_events_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RegisterQueue method not implemented")
}

// RestErrorHandling - Error handling
func (s *RealTimeEventsApiService) RestErrorHandling(ctx context.Context) (ImplResponse, error) {
	// TODO - update RestErrorHandling with the required logic for this service method.
	// Add api_real_time_events_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, OneOfInvalidApiKeyErrorMissingArgumentErrorUserNotAuthorizedError{}) or use other options such as http.Ok ...
	//return Response(400, OneOfInvalidApiKeyErrorMissingArgumentErrorUserNotAuthorizedError{}), nil

	//TODO: Uncomment the next line to return response Response(401, OneOfUserDeactivatedErrorRealmDeactivatedError{}) or use other options such as http.Ok ...
	//return Response(401, OneOfUserDeactivatedErrorRealmDeactivatedError{}), nil

	//TODO: Uncomment the next line to return response Response(429, OneOfRateLimitedError{}) or use other options such as http.Ok ...
	//return Response(429, OneOfRateLimitedError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RestErrorHandling method not implemented")
}


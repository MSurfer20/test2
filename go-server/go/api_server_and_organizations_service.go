/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"os"
)

// ServerAndOrganizationsApiService is a service that implents the logic for the ServerAndOrganizationsApiServicer
// This service should implement the business logic for every endpoint for the ServerAndOrganizationsApi API. 
// Include any external packages or services that will be required by this service.
type ServerAndOrganizationsApiService struct {
}

// NewServerAndOrganizationsApiService creates a default api service
func NewServerAndOrganizationsApiService() ServerAndOrganizationsApiServicer {
	return &ServerAndOrganizationsApiService{}
}

// AddCodePlayground - Add a code playground
func (s *ServerAndOrganizationsApiService) AddCodePlayground(ctx context.Context, name string, pygmentsLanguage string, urlPrefix string) (ImplResponse, error) {
	// TODO - update AddCodePlayground with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddCodePlayground method not implemented")
}

// AddLinkifier - Add a linkifier
func (s *ServerAndOrganizationsApiService) AddLinkifier(ctx context.Context, pattern string, urlFormatString string) (ImplResponse, error) {
	// TODO - update AddLinkifier with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddLinkifier method not implemented")
}

// CreateCustomProfileField - Create a custom profile field
func (s *ServerAndOrganizationsApiService) CreateCustomProfileField(ctx context.Context, fieldType int32, name string, hint string, fieldData map[string]interface{}) (ImplResponse, error) {
	// TODO - update CreateCustomProfileField with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateCustomProfileField method not implemented")
}

// GetCustomEmoji - Get all custom emoji
func (s *ServerAndOrganizationsApiService) GetCustomEmoji(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetCustomEmoji with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCustomEmoji method not implemented")
}

// GetCustomProfileFields - Get all custom profile fields
func (s *ServerAndOrganizationsApiService) GetCustomProfileFields(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetCustomProfileFields with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCustomProfileFields method not implemented")
}

// GetLinkifiers - Get linkifiers
func (s *ServerAndOrganizationsApiService) GetLinkifiers(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetLinkifiers with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetLinkifiers method not implemented")
}

// GetServerSettings - Get server settings
func (s *ServerAndOrganizationsApiService) GetServerSettings(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetServerSettings with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccessBase{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccessBase{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetServerSettings method not implemented")
}

// RemoveCodePlayground - Remove a code playground
func (s *ServerAndOrganizationsApiService) RemoveCodePlayground(ctx context.Context, playgroundId int32) (ImplResponse, error) {
	// TODO - update RemoveCodePlayground with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccess{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccess{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveCodePlayground method not implemented")
}

// RemoveLinkifier - Remove a linkifier
func (s *ServerAndOrganizationsApiService) RemoveLinkifier(ctx context.Context, filterId int32) (ImplResponse, error) {
	// TODO - update RemoveLinkifier with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccess{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccess{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RemoveLinkifier method not implemented")
}

// ReorderCustomProfileFields - Reorder custom profile fields
func (s *ServerAndOrganizationsApiService) ReorderCustomProfileFields(ctx context.Context, order []int32) (ImplResponse, error) {
	// TODO - update ReorderCustomProfileFields with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccess{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccess{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ReorderCustomProfileFields method not implemented")
}

// UpdateLinkifier - Update a linkifier
func (s *ServerAndOrganizationsApiService) UpdateLinkifier(ctx context.Context, filterId int32, pattern string, urlFormatString string) (ImplResponse, error) {
	// TODO - update UpdateLinkifier with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccess{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccess{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateLinkifier method not implemented")
}

// UploadCustomEmoji - Upload custom emoji
func (s *ServerAndOrganizationsApiService) UploadCustomEmoji(ctx context.Context, emojiName string, filename *os.File) (ImplResponse, error) {
	// TODO - update UploadCustomEmoji with the required logic for this service method.
	// Add api_server_and_organizations_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, JsonSuccess{}) or use other options such as http.Ok ...
	//return Response(200, JsonSuccess{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UploadCustomEmoji method not implemented")
}


/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A WebhooksApiController binds http requests to an api service and writes the service results to the http response
type WebhooksApiController struct {
	service WebhooksApiServicer
}

// NewWebhooksApiController creates a default api controller
func NewWebhooksApiController(s WebhooksApiServicer) Router {
	return &WebhooksApiController{service: s}
}

// Routes returns all of the api route for the WebhooksApiController
func (c *WebhooksApiController) Routes() Routes {
	return Routes{ 
		{
			"ZulipOutgoingWebhooks",
			strings.ToUpper("Post"),
			"/api/v1/zulip-outgoing-webhook",
			c.ZulipOutgoingWebhooks,
		},
	}
}

// ZulipOutgoingWebhooks - Outgoing webhooks
func (c *WebhooksApiController) ZulipOutgoingWebhooks(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.ZulipOutgoingWebhooks(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

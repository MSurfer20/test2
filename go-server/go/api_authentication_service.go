/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// AuthenticationApiService is a service that implents the logic for the AuthenticationApiServicer
// This service should implement the business logic for every endpoint for the AuthenticationApi API. 
// Include any external packages or services that will be required by this service.
type AuthenticationApiService struct {
}

// NewAuthenticationApiService creates a default api service
func NewAuthenticationApiService() AuthenticationApiServicer {
	return &AuthenticationApiService{}
}

// DevFetchApiKey - Fetch an API key (development only)
func (s *AuthenticationApiService) DevFetchApiKey(ctx context.Context, username string) (ImplResponse, error) {
	// TODO - update DevFetchApiKey with the required logic for this service method.
	// Add api_authentication_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ApiKeyResponse{}) or use other options such as http.Ok ...
	//return Response(200, ApiKeyResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DevFetchApiKey method not implemented")
}

// FetchApiKey - Fetch an API key (production)
func (s *AuthenticationApiService) FetchApiKey(ctx context.Context, username string, password string) (ImplResponse, error) {
	// TODO - update FetchApiKey with the required logic for this service method.
	// Add api_authentication_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ApiKeyResponse{}) or use other options such as http.Ok ...
	//return Response(200, ApiKeyResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FetchApiKey method not implemented")
}


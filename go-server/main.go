/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	openapi "github.com/GIT_USER_ID/GIT_REPO_ID/go"
)

func main() {
	log.Printf("Server started")

	AuthenticationApiService := openapi.NewAuthenticationApiService()
	AuthenticationApiController := openapi.NewAuthenticationApiController(AuthenticationApiService)

	MessagesApiService := openapi.NewMessagesApiService()
	MessagesApiController := openapi.NewMessagesApiController(MessagesApiService)

	RealTimeEventsApiService := openapi.NewRealTimeEventsApiService()
	RealTimeEventsApiController := openapi.NewRealTimeEventsApiController(RealTimeEventsApiService)

	ServerAndOrganizationsApiService := openapi.NewServerAndOrganizationsApiService()
	ServerAndOrganizationsApiController := openapi.NewServerAndOrganizationsApiController(ServerAndOrganizationsApiService)

	StreamsApiService := openapi.NewStreamsApiService()
	StreamsApiController := openapi.NewStreamsApiController(StreamsApiService)

	UsersApiService := openapi.NewUsersApiService()
	UsersApiController := openapi.NewUsersApiController(UsersApiService)

	WebhooksApiService := openapi.NewWebhooksApiService()
	WebhooksApiController := openapi.NewWebhooksApiController(WebhooksApiService)

	router := openapi.NewRouter(AuthenticationApiController, MessagesApiController, RealTimeEventsApiController, ServerAndOrganizationsApiController, StreamsApiController, UsersApiController, WebhooksApiController)

	log.Fatal(http.ListenAndServe(":8080", router))
}

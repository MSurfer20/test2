=begin
Zulip REST API

Powerful open source group chat 

The version of the OpenAPI document: 1.0.0
Generated by: https://github.com/openapitools/openapi-generator.git

=end

class InitTables < ActiveRecord::Migration
  def change
    create_table "add_subscriptions_response".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :subscribed
      t.string :already_subscribed
      t.string :unauthorized

      t.timestamps
    end

    create_table "add_subscriptions_response_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :subscribed
      t.string :already_subscribed
      t.string :unauthorized

      t.timestamps
    end

    create_table "api_key_response".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :api_key
      t.string :email

      t.timestamps
    end

    create_table "api_key_response_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :api_key
      t.string :email

      t.timestamps
    end

    create_table "attachments".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.string :name
      t.string :path_id
      t.integer :size
      t.integer :create_time
      t.string :messages

      t.timestamps
    end

    create_table "attachments_messages".pluralize.to_sym, id: false do |t|
      t.integer :date_sent
      t.integer :id

      t.timestamps
    end

    create_table "bad_event_queue_id_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code
      t.string :queue_id

      t.timestamps
    end

    create_table "bad_event_queue_id_error_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code
      t.string :queue_id

      t.timestamps
    end

    create_table "basic_bot".pluralize.to_sym, id: false do |t|
      t.string :user_id
      t.string :full_name
      t.string :api_key
      t.string :default_sending_stream
      t.string :default_events_register_stream
      t.string :default_all_public_streams
      t.string :avatar_url
      t.string :owner_id
      t.string :services

      t.timestamps
    end

    create_table "basic_bot_all_of".pluralize.to_sym, id: false do |t|
      t.string :user_id
      t.string :full_name
      t.string :api_key
      t.string :default_sending_stream
      t.string :default_events_register_stream
      t.string :default_all_public_streams
      t.string :avatar_url
      t.string :owner_id
      t.string :services

      t.timestamps
    end

    create_table "basic_bot_base".pluralize.to_sym, id: false do |t|
      t.integer :user_id
      t.string :full_name
      t.string :api_key
      t.string :default_sending_stream
      t.string :default_events_register_stream
      t.boolean :default_all_public_streams
      t.string :avatar_url
      t.integer :owner_id
      t.string :services

      t.timestamps
    end

    create_table "basic_stream".pluralize.to_sym, id: false do |t|
      t.string :stream_id
      t.string :name
      t.string :description
      t.string :date_created
      t.string :invite_only
      t.string :rendered_description
      t.string :is_web_public
      t.string :stream_post_policy
      t.string :message_retention_days
      t.string :history_public_to_subscribers
      t.string :first_message_id
      t.string :is_announcement_only

      t.timestamps
    end

    create_table "basic_stream_all_of".pluralize.to_sym, id: false do |t|
      t.string :stream_id
      t.string :name
      t.string :description
      t.string :date_created
      t.string :invite_only
      t.string :rendered_description
      t.string :is_web_public
      t.string :stream_post_policy
      t.string :message_retention_days
      t.string :history_public_to_subscribers
      t.string :first_message_id
      t.string :is_announcement_only

      t.timestamps
    end

    create_table "basic_stream_base".pluralize.to_sym, id: false do |t|
      t.integer :stream_id
      t.string :name
      t.string :description
      t.integer :date_created
      t.boolean :invite_only
      t.string :rendered_description
      t.boolean :is_web_public
      t.integer :stream_post_policy
      t.integer :message_retention_days
      t.boolean :history_public_to_subscribers
      t.integer :first_message_id
      t.boolean :is_announcement_only

      t.timestamps
    end

    create_table "bot".pluralize.to_sym, id: false do |t|
      t.string :user_id
      t.string :full_name
      t.string :api_key
      t.string :default_sending_stream
      t.string :default_events_register_stream
      t.string :default_all_public_streams
      t.string :avatar_url
      t.string :owner_id
      t.string :services
      t.string :email
      t.integer :bot_type
      t.boolean :is_active

      t.timestamps
    end

    create_table "bot_all_of".pluralize.to_sym, id: false do |t|
      t.string :user_id
      t.string :full_name
      t.string :api_key
      t.string :default_sending_stream
      t.string :default_events_register_stream
      t.string :default_all_public_streams
      t.string :avatar_url
      t.string :owner_id
      t.string :services
      t.string :email
      t.integer :bot_type
      t.boolean :is_active

      t.timestamps
    end

    create_table "coded_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

    create_table "coded_error_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

    create_table "coded_error_base".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

    create_table "coded_error_base_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

    create_table "custom_profile_field".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.integer :type
      t.integer :order
      t.string :name
      t.string :hint
      t.string :field_data

      t.timestamps
    end

    create_table "default_stream_group".pluralize.to_sym, id: false do |t|
      t.string :name
      t.string :description
      t.integer :id
      t.string :streams

      t.timestamps
    end

    create_table "draft".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.string :type
      t.string :to
      t.string :topic
      t.string :content
      t.Float :timestamp

      t.timestamps
    end

    create_table "emoji_base".pluralize.to_sym, id: false do |t|
      t.string :emoji_code
      t.string :emoji_name
      t.string :reaction_type

      t.timestamps
    end

    create_table "emoji_reaction".pluralize.to_sym, id: false do |t|
      t.string :emoji_code
      t.string :emoji_name
      t.string :reaction_type
      t.string :user_id
      t.string :user

      t.timestamps
    end

    create_table "emoji_reaction_all_of".pluralize.to_sym, id: false do |t|
      t.string :emoji_code
      t.string :emoji_name
      t.string :reaction_type
      t.string :user_id
      t.string :user

      t.timestamps
    end

    create_table "emoji_reaction_base".pluralize.to_sym, id: false do |t|
      t.string :emoji_code
      t.string :emoji_name
      t.string :reaction_type
      t.integer :user_id
      t.string :user

      t.timestamps
    end

    create_table "emoji_reaction_base_all_of".pluralize.to_sym, id: false do |t|
      t.integer :user_id
      t.string :user

      t.timestamps
    end

    create_table "emoji_reaction_base_all_of_user".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.string :email
      t.string :full_name
      t.boolean :is_mirror_dummy

      t.timestamps
    end

    create_table "get_messages".pluralize.to_sym, id: false do |t|
      t.string :avatar_url
      t.string :client
      t.string :content
      t.string :content_type
      t.string :display_recipient
      t.string :id
      t.string :is_me_message
      t.string :reactions
      t.string :recipient_id
      t.string :sender_email
      t.string :sender_full_name
      t.string :sender_id
      t.string :sender_realm_str
      t.string :stream_id
      t.string :subject
      t.string :topic_links
      t.string :submessages
      t.string :timestamp
      t.string :type
      t.string :flags
      t.integer :last_edit_timestamp
      t.string :match_content
      t.string :match_subject

      t.timestamps
    end

    create_table "get_messages_all_of".pluralize.to_sym, id: false do |t|
      t.string :avatar_url
      t.string :client
      t.string :content
      t.string :content_type
      t.string :display_recipient
      t.string :id
      t.string :is_me_message
      t.string :reactions
      t.string :recipient_id
      t.string :sender_email
      t.string :sender_full_name
      t.string :sender_id
      t.string :sender_realm_str
      t.string :stream_id
      t.string :subject
      t.string :topic_links
      t.string :submessages
      t.string :timestamp
      t.string :type
      t.string :flags
      t.integer :last_edit_timestamp
      t.string :match_content
      t.string :match_subject

      t.timestamps
    end

    create_table "hotspot".pluralize.to_sym, id: false do |t|
      t.Float :delay
      t.string :name
      t.string :title
      t.string :description

      t.timestamps
    end

    create_table "inline_response_200".pluralize.to_sym, id: false do |t|
      t.string :bot_email
      t.string :bot_full_name
      t.string :data
      t.string :trigger
      t.string :token
      t.string :message

      t.timestamps
    end

    create_table "invalid_api_key_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "invalid_message_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :raw_content

      t.timestamps
    end

    create_table "invalid_message_error_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :raw_content

      t.timestamps
    end

    create_table "json_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "json_error_base".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "json_error_base_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "json_response_base".pluralize.to_sym, id: false do |t|
      t.string :result

      t.timestamps
    end

    create_table "json_success".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "json_success_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "json_success_base".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "json_success_base_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg

      t.timestamps
    end

    create_table "messages".pluralize.to_sym, id: false do |t|
      t.string :avatar_url
      t.string :client
      t.string :content
      t.string :content_type
      t.string :display_recipient
      t.string :id
      t.string :is_me_message
      t.string :reactions
      t.string :recipient_id
      t.string :sender_email
      t.string :sender_full_name
      t.string :sender_id
      t.string :sender_realm_str
      t.string :stream_id
      t.string :subject
      t.string :topic_links
      t.string :submessages
      t.string :timestamp
      t.string :type

      t.timestamps
    end

    create_table "messages_all_of".pluralize.to_sym, id: false do |t|
      t.string :avatar_url
      t.string :client
      t.string :content
      t.string :content_type
      t.string :display_recipient
      t.string :id
      t.string :is_me_message
      t.string :reactions
      t.string :recipient_id
      t.string :sender_email
      t.string :sender_full_name
      t.string :sender_id
      t.string :sender_realm_str
      t.string :stream_id
      t.string :subject
      t.string :topic_links
      t.string :submessages
      t.string :timestamp
      t.string :type

      t.timestamps
    end

    create_table "messages_base".pluralize.to_sym, id: false do |t|
      t.string :avatar_url
      t.string :client
      t.string :content
      t.string :content_type
      t.string :display_recipient
      t.integer :id
      t.boolean :is_me_message
      t.string :reactions
      t.integer :recipient_id
      t.string :sender_email
      t.string :sender_full_name
      t.integer :sender_id
      t.string :sender_realm_str
      t.integer :stream_id
      t.string :subject
      t.string :topic_links
      t.string :submessages
      t.integer :timestamp
      t.string :type

      t.timestamps
    end

    create_table "messages_base_topic_links".pluralize.to_sym, id: false do |t|
      t.string :text
      t.string :url

      t.timestamps
    end

    create_table "missing_argument_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code
      t.string :var_name

      t.timestamps
    end

    create_table "missing_argument_error_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code
      t.string :var_name

      t.timestamps
    end

    create_table "non_existing_stream_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code
      t.string :stream

      t.timestamps
    end

    create_table "non_existing_stream_error_all_of".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code
      t.string :stream

      t.timestamps
    end

    create_table "presence".pluralize.to_sym, id: false do |t|
      t.string :client
      t.string :status
      t.integer :timestamp
      t.boolean :pushable

      t.timestamps
    end

    create_table "rate_limited_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

    create_table "realm_deactivated_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

    create_table "realm_domain".pluralize.to_sym, id: false do |t|
      t.string :domain
      t.boolean :allow_subdomains

      t.timestamps
    end

    create_table "realm_emoji".pluralize.to_sym, id: false do |t|
      t.string :id
      t.string :name
      t.string :source_url
      t.boolean :deactivated
      t.integer :author_id

      t.timestamps
    end

    create_table "realm_export".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.integer :acting_user_id
      t.Float :export_time
      t.Float :deleted_timestamp
      t.Float :failed_timestamp
      t.string :export_url
      t.boolean :pending

      t.timestamps
    end

    create_table "realm_playground".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.string :name
      t.string :pygments_language
      t.string :url_prefix

      t.timestamps
    end

    create_table "subscriptions".pluralize.to_sym, id: false do |t|
      t.integer :stream_id
      t.string :name
      t.string :description
      t.string :rendered_description
      t.integer :date_created
      t.boolean :invite_only
      t.string :subscribers
      t.boolean :desktop_notifications
      t.boolean :email_notifications
      t.boolean :wildcard_mentions_notify
      t.boolean :push_notifications
      t.boolean :audible_notifications
      t.boolean :pin_to_top
      t.string :email_address
      t.boolean :is_muted
      t.boolean :in_home_view
      t.boolean :is_announcement_only
      t.boolean :is_web_public
      t.integer :role
      t.string :color
      t.integer :stream_post_policy
      t.integer :message_retention_days
      t.boolean :history_public_to_subscribers
      t.integer :first_message_id
      t.integer :stream_weekly_traffic

      t.timestamps
    end

    create_table "user".pluralize.to_sym, id: false do |t|
      t.string :email
      t.string :is_bot
      t.string :avatar_url
      t.string :avatar_version
      t.string :full_name
      t.string :is_admin
      t.string :is_owner
      t.string :is_billing_admin
      t.string :role
      t.string :bot_type
      t.string :user_id
      t.string :bot_owner_id
      t.string :is_active
      t.string :is_guest
      t.string :timezone
      t.string :date_joined
      t.string :delivery_email
      t.string :profile_data

      t.timestamps
    end

    create_table "user_all_of".pluralize.to_sym, id: false do |t|
      t.string :email
      t.string :is_bot
      t.string :avatar_url
      t.string :avatar_version
      t.string :full_name
      t.string :is_admin
      t.string :is_owner
      t.string :is_billing_admin
      t.string :role
      t.string :bot_type
      t.string :user_id
      t.string :bot_owner_id
      t.string :is_active
      t.string :is_guest
      t.string :timezone
      t.string :date_joined
      t.string :delivery_email
      t.string :profile_data

      t.timestamps
    end

    create_table "user_base".pluralize.to_sym, id: false do |t|
      t.string :email
      t.boolean :is_bot
      t.string :avatar_url
      t.integer :avatar_version
      t.string :full_name
      t.boolean :is_admin
      t.boolean :is_owner
      t.boolean :is_billing_admin
      t.integer :role
      t.integer :bot_type
      t.integer :user_id
      t.integer :bot_owner_id
      t.boolean :is_active
      t.boolean :is_guest
      t.string :timezone
      t.string :date_joined
      t.string :delivery_email
      t.string :profile_data

      t.timestamps
    end

    create_table "user_deactivated_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

    create_table "user_group".pluralize.to_sym, id: false do |t|
      t.string :name
      t.string :description
      t.string :members
      t.integer :id

      t.timestamps
    end

    create_table "user_not_authorized_error".pluralize.to_sym, id: false do |t|
      t.string :result
      t.string :msg
      t.string :code

      t.timestamps
    end

  end
end

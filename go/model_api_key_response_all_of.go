/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiKeyResponseAllOf struct for ApiKeyResponseAllOf
type ApiKeyResponseAllOf struct {
	Result interface{} `json:"result,omitempty"`
	Msg interface{} `json:"msg,omitempty"`
	// The API key that can be used to authenticate as the requested user. 
	ApiKey string `json:"api_key"`
	// The email address of the user who owns the API key 
	Email string `json:"email"`
}

// NewApiKeyResponseAllOf instantiates a new ApiKeyResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyResponseAllOf(apiKey string, email string) *ApiKeyResponseAllOf {
	this := ApiKeyResponseAllOf{}
	this.ApiKey = apiKey
	this.Email = email
	return &this
}

// NewApiKeyResponseAllOfWithDefaults instantiates a new ApiKeyResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyResponseAllOfWithDefaults() *ApiKeyResponseAllOf {
	this := ApiKeyResponseAllOf{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyResponseAllOf) GetResult() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyResponseAllOf) GetResultOk() (*interface{}, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return &o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ApiKeyResponseAllOf) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given interface{} and assigns it to the Result field.
func (o *ApiKeyResponseAllOf) SetResult(v interface{}) {
	o.Result = v
}

// GetMsg returns the Msg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyResponseAllOf) GetMsg() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyResponseAllOf) GetMsgOk() (*interface{}, bool) {
	if o == nil || o.Msg == nil {
		return nil, false
	}
	return &o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *ApiKeyResponseAllOf) HasMsg() bool {
	if o != nil && o.Msg != nil {
		return true
	}

	return false
}

// SetMsg gets a reference to the given interface{} and assigns it to the Msg field.
func (o *ApiKeyResponseAllOf) SetMsg(v interface{}) {
	o.Msg = v
}

// GetApiKey returns the ApiKey field value
func (o *ApiKeyResponseAllOf) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *ApiKeyResponseAllOf) GetApiKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *ApiKeyResponseAllOf) SetApiKey(v string) {
	o.ApiKey = v
}

// GetEmail returns the Email field value
func (o *ApiKeyResponseAllOf) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ApiKeyResponseAllOf) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ApiKeyResponseAllOf) SetEmail(v string) {
	o.Email = v
}

func (o ApiKeyResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.Msg != nil {
		toSerialize["msg"] = o.Msg
	}
	if true {
		toSerialize["api_key"] = o.ApiKey
	}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableApiKeyResponseAllOf struct {
	value *ApiKeyResponseAllOf
	isSet bool
}

func (v NullableApiKeyResponseAllOf) Get() *ApiKeyResponseAllOf {
	return v.value
}

func (v *NullableApiKeyResponseAllOf) Set(val *ApiKeyResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyResponseAllOf(val *ApiKeyResponseAllOf) *NullableApiKeyResponseAllOf {
	return &NullableApiKeyResponseAllOf{value: val, isSet: true}
}

func (v NullableApiKeyResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



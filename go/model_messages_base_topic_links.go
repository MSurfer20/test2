/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MessagesBaseTopicLinks struct for MessagesBaseTopicLinks
type MessagesBaseTopicLinks struct {
	// The original link text present in the topic. 
	Text *string `json:"text,omitempty"`
	// The expanded target url which the link points to. 
	Url *string `json:"url,omitempty"`
}

// NewMessagesBaseTopicLinks instantiates a new MessagesBaseTopicLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagesBaseTopicLinks() *MessagesBaseTopicLinks {
	this := MessagesBaseTopicLinks{}
	return &this
}

// NewMessagesBaseTopicLinksWithDefaults instantiates a new MessagesBaseTopicLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagesBaseTopicLinksWithDefaults() *MessagesBaseTopicLinks {
	this := MessagesBaseTopicLinks{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *MessagesBaseTopicLinks) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesBaseTopicLinks) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MessagesBaseTopicLinks) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MessagesBaseTopicLinks) SetText(v string) {
	o.Text = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MessagesBaseTopicLinks) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesBaseTopicLinks) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MessagesBaseTopicLinks) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MessagesBaseTopicLinks) SetUrl(v string) {
	o.Url = &v
}

func (o MessagesBaseTopicLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableMessagesBaseTopicLinks struct {
	value *MessagesBaseTopicLinks
	isSet bool
}

func (v NullableMessagesBaseTopicLinks) Get() *MessagesBaseTopicLinks {
	return v.value
}

func (v *NullableMessagesBaseTopicLinks) Set(val *MessagesBaseTopicLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagesBaseTopicLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagesBaseTopicLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagesBaseTopicLinks(val *MessagesBaseTopicLinks) *NullableMessagesBaseTopicLinks {
	return &NullableMessagesBaseTopicLinks{value: val, isSet: true}
}

func (v NullableMessagesBaseTopicLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagesBaseTopicLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



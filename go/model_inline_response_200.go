/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200 This is an example of the JSON payload that the Zulip server will `POST` to your server 
type InlineResponse200 struct {
	// Email of the bot user. 
	BotEmail *string `json:"bot_email,omitempty"`
	// The full name of the bot user. 
	BotFullName *string `json:"bot_full_name,omitempty"`
	// The message content, in raw Markdown format (not rendered to HTML). 
	Data *string `json:"data,omitempty"`
	// What aspect of the message triggered the outgoing webhook notification. Possible values include `private_message` and `mention`. 
	Trigger *string `json:"trigger,omitempty"`
	// A string of alphanumeric characters that can be used to authenticate the webhook request (each bot user uses a fixed token). You can get the token used by a given outgoing webhook bot in the `zuliprc` file downloaded when creating the bot. 
	Token *string `json:"token,omitempty"`
	// A dict containing details on the message that triggered the outgoing webhook, in the format used by [`GET /messages`](/api/get-messages). 
	Message *MessagesBase `json:"message,omitempty"`
}

// NewInlineResponse200 instantiates a new InlineResponse200 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// NewInlineResponse200WithDefaults instantiates a new InlineResponse200 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200WithDefaults() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// GetBotEmail returns the BotEmail field value if set, zero value otherwise.
func (o *InlineResponse200) GetBotEmail() string {
	if o == nil || o.BotEmail == nil {
		var ret string
		return ret
	}
	return *o.BotEmail
}

// GetBotEmailOk returns a tuple with the BotEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetBotEmailOk() (*string, bool) {
	if o == nil || o.BotEmail == nil {
		return nil, false
	}
	return o.BotEmail, true
}

// HasBotEmail returns a boolean if a field has been set.
func (o *InlineResponse200) HasBotEmail() bool {
	if o != nil && o.BotEmail != nil {
		return true
	}

	return false
}

// SetBotEmail gets a reference to the given string and assigns it to the BotEmail field.
func (o *InlineResponse200) SetBotEmail(v string) {
	o.BotEmail = &v
}

// GetBotFullName returns the BotFullName field value if set, zero value otherwise.
func (o *InlineResponse200) GetBotFullName() string {
	if o == nil || o.BotFullName == nil {
		var ret string
		return ret
	}
	return *o.BotFullName
}

// GetBotFullNameOk returns a tuple with the BotFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetBotFullNameOk() (*string, bool) {
	if o == nil || o.BotFullName == nil {
		return nil, false
	}
	return o.BotFullName, true
}

// HasBotFullName returns a boolean if a field has been set.
func (o *InlineResponse200) HasBotFullName() bool {
	if o != nil && o.BotFullName != nil {
		return true
	}

	return false
}

// SetBotFullName gets a reference to the given string and assigns it to the BotFullName field.
func (o *InlineResponse200) SetBotFullName(v string) {
	o.BotFullName = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *InlineResponse200) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *InlineResponse200) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *InlineResponse200) SetData(v string) {
	o.Data = &v
}

// GetTrigger returns the Trigger field value if set, zero value otherwise.
func (o *InlineResponse200) GetTrigger() string {
	if o == nil || o.Trigger == nil {
		var ret string
		return ret
	}
	return *o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetTriggerOk() (*string, bool) {
	if o == nil || o.Trigger == nil {
		return nil, false
	}
	return o.Trigger, true
}

// HasTrigger returns a boolean if a field has been set.
func (o *InlineResponse200) HasTrigger() bool {
	if o != nil && o.Trigger != nil {
		return true
	}

	return false
}

// SetTrigger gets a reference to the given string and assigns it to the Trigger field.
func (o *InlineResponse200) SetTrigger(v string) {
	o.Trigger = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *InlineResponse200) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *InlineResponse200) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *InlineResponse200) SetToken(v string) {
	o.Token = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *InlineResponse200) GetMessage() MessagesBase {
	if o == nil || o.Message == nil {
		var ret MessagesBase
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetMessageOk() (*MessagesBase, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *InlineResponse200) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given MessagesBase and assigns it to the Message field.
func (o *InlineResponse200) SetMessage(v MessagesBase) {
	o.Message = &v
}

func (o InlineResponse200) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BotEmail != nil {
		toSerialize["bot_email"] = o.BotEmail
	}
	if o.BotFullName != nil {
		toSerialize["bot_full_name"] = o.BotFullName
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Trigger != nil {
		toSerialize["trigger"] = o.Trigger
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200 struct {
	value *InlineResponse200
	isSet bool
}

func (v NullableInlineResponse200) Get() *InlineResponse200 {
	return v.value
}

func (v *NullableInlineResponse200) Set(val *InlineResponse200) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200(val *InlineResponse200) *NullableInlineResponse200 {
	return &NullableInlineResponse200{value: val, isSet: true}
}

func (v NullableInlineResponse200) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



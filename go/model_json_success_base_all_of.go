/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// JsonSuccessBaseAllOf struct for JsonSuccessBaseAllOf
type JsonSuccessBaseAllOf struct {
	Result string `json:"result"`
	Msg string `json:"msg"`
}

// NewJsonSuccessBaseAllOf instantiates a new JsonSuccessBaseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJsonSuccessBaseAllOf(result string, msg string) *JsonSuccessBaseAllOf {
	this := JsonSuccessBaseAllOf{}
	this.Result = result
	this.Msg = msg
	return &this
}

// NewJsonSuccessBaseAllOfWithDefaults instantiates a new JsonSuccessBaseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJsonSuccessBaseAllOfWithDefaults() *JsonSuccessBaseAllOf {
	this := JsonSuccessBaseAllOf{}
	return &this
}

// GetResult returns the Result field value
func (o *JsonSuccessBaseAllOf) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *JsonSuccessBaseAllOf) GetResultOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *JsonSuccessBaseAllOf) SetResult(v string) {
	o.Result = v
}

// GetMsg returns the Msg field value
func (o *JsonSuccessBaseAllOf) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *JsonSuccessBaseAllOf) GetMsgOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *JsonSuccessBaseAllOf) SetMsg(v string) {
	o.Msg = v
}

func (o JsonSuccessBaseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["result"] = o.Result
	}
	if true {
		toSerialize["msg"] = o.Msg
	}
	return json.Marshal(toSerialize)
}

type NullableJsonSuccessBaseAllOf struct {
	value *JsonSuccessBaseAllOf
	isSet bool
}

func (v NullableJsonSuccessBaseAllOf) Get() *JsonSuccessBaseAllOf {
	return v.value
}

func (v *NullableJsonSuccessBaseAllOf) Set(val *JsonSuccessBaseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableJsonSuccessBaseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableJsonSuccessBaseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJsonSuccessBaseAllOf(val *JsonSuccessBaseAllOf) *NullableJsonSuccessBaseAllOf {
	return &NullableJsonSuccessBaseAllOf{value: val, isSet: true}
}

func (v NullableJsonSuccessBaseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJsonSuccessBaseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CustomProfileField Dictionary containing the details of a custom profile field configured for this organization. 
type CustomProfileField struct {
	// The ID of the custom profile field.  This will be referenced in custom the profile fields section of user objects. 
	Id *int32 `json:"id,omitempty"`
	// An integer indicating the type of the custom profile field, which determines how it is configured and displayed to users.  See the [Add custom profile fields](/help/add-custom-profile-fields) article for details on what each type means.  * **1**: Short text * **2**: Long text * **3**: List of options * **4**: Date picker * **5**: Link * **6**: Person picker * **7**: External account 
	Type *int32 `json:"type,omitempty"`
	// Custom profile fields are displayed in both settings UI and UI showing users' profiles in increasing `order`. 
	Order *int32 `json:"order,omitempty"`
	// The name of the custom profile field. 
	Name *string `json:"name,omitempty"`
	// The help text to be displayed for the custom profile field in user-facing settings UI for configuring custom profile fields. 
	Hint *string `json:"hint,omitempty"`
	// Field types 3 (List of options) and 7 (External account) support storing additional configuration for the field type in the `field_data` attribute.  For field type 3 (List of options), this attribute is a JSON dictionary defining the choices and the order they will be displayed in the dropdown UI for individual users to select an option.  The interface for field type 7 is not yet stabilized. 
	FieldData *string `json:"field_data,omitempty"`
}

// NewCustomProfileField instantiates a new CustomProfileField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomProfileField() *CustomProfileField {
	this := CustomProfileField{}
	return &this
}

// NewCustomProfileFieldWithDefaults instantiates a new CustomProfileField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomProfileFieldWithDefaults() *CustomProfileField {
	this := CustomProfileField{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomProfileField) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProfileField) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomProfileField) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CustomProfileField) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CustomProfileField) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProfileField) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CustomProfileField) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *CustomProfileField) SetType(v int32) {
	o.Type = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *CustomProfileField) GetOrder() int32 {
	if o == nil || o.Order == nil {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProfileField) GetOrderOk() (*int32, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *CustomProfileField) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *CustomProfileField) SetOrder(v int32) {
	o.Order = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomProfileField) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProfileField) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomProfileField) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomProfileField) SetName(v string) {
	o.Name = &v
}

// GetHint returns the Hint field value if set, zero value otherwise.
func (o *CustomProfileField) GetHint() string {
	if o == nil || o.Hint == nil {
		var ret string
		return ret
	}
	return *o.Hint
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProfileField) GetHintOk() (*string, bool) {
	if o == nil || o.Hint == nil {
		return nil, false
	}
	return o.Hint, true
}

// HasHint returns a boolean if a field has been set.
func (o *CustomProfileField) HasHint() bool {
	if o != nil && o.Hint != nil {
		return true
	}

	return false
}

// SetHint gets a reference to the given string and assigns it to the Hint field.
func (o *CustomProfileField) SetHint(v string) {
	o.Hint = &v
}

// GetFieldData returns the FieldData field value if set, zero value otherwise.
func (o *CustomProfileField) GetFieldData() string {
	if o == nil || o.FieldData == nil {
		var ret string
		return ret
	}
	return *o.FieldData
}

// GetFieldDataOk returns a tuple with the FieldData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProfileField) GetFieldDataOk() (*string, bool) {
	if o == nil || o.FieldData == nil {
		return nil, false
	}
	return o.FieldData, true
}

// HasFieldData returns a boolean if a field has been set.
func (o *CustomProfileField) HasFieldData() bool {
	if o != nil && o.FieldData != nil {
		return true
	}

	return false
}

// SetFieldData gets a reference to the given string and assigns it to the FieldData field.
func (o *CustomProfileField) SetFieldData(v string) {
	o.FieldData = &v
}

func (o CustomProfileField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Hint != nil {
		toSerialize["hint"] = o.Hint
	}
	if o.FieldData != nil {
		toSerialize["field_data"] = o.FieldData
	}
	return json.Marshal(toSerialize)
}

type NullableCustomProfileField struct {
	value *CustomProfileField
	isSet bool
}

func (v NullableCustomProfileField) Get() *CustomProfileField {
	return v.value
}

func (v *NullableCustomProfileField) Set(val *CustomProfileField) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomProfileField) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomProfileField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomProfileField(val *CustomProfileField) *NullableCustomProfileField {
	return &NullableCustomProfileField{value: val, isSet: true}
}

func (v NullableCustomProfileField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomProfileField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BasicStream struct for BasicStream
type BasicStream struct {
	StreamId interface{} `json:"stream_id,omitempty"`
	Name interface{} `json:"name,omitempty"`
	Description interface{} `json:"description,omitempty"`
	DateCreated interface{} `json:"date_created,omitempty"`
	InviteOnly interface{} `json:"invite_only,omitempty"`
	RenderedDescription interface{} `json:"rendered_description,omitempty"`
	IsWebPublic interface{} `json:"is_web_public,omitempty"`
	StreamPostPolicy interface{} `json:"stream_post_policy,omitempty"`
	MessageRetentionDays interface{} `json:"message_retention_days,omitempty"`
	HistoryPublicToSubscribers interface{} `json:"history_public_to_subscribers,omitempty"`
	FirstMessageId interface{} `json:"first_message_id,omitempty"`
	IsAnnouncementOnly interface{} `json:"is_announcement_only,omitempty"`
}

// NewBasicStream instantiates a new BasicStream object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBasicStream() *BasicStream {
	this := BasicStream{}
	return &this
}

// NewBasicStreamWithDefaults instantiates a new BasicStream object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBasicStreamWithDefaults() *BasicStream {
	this := BasicStream{}
	return &this
}

// GetStreamId returns the StreamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetStreamId() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetStreamIdOk() (*interface{}, bool) {
	if o == nil || o.StreamId == nil {
		return nil, false
	}
	return &o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *BasicStream) HasStreamId() bool {
	if o != nil && o.StreamId != nil {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given interface{} and assigns it to the StreamId field.
func (o *BasicStream) SetStreamId(v interface{}) {
	o.StreamId = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetName() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetNameOk() (*interface{}, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BasicStream) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *BasicStream) SetName(v interface{}) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetDescription() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetDescriptionOk() (*interface{}, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return &o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BasicStream) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given interface{} and assigns it to the Description field.
func (o *BasicStream) SetDescription(v interface{}) {
	o.Description = v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetDateCreated() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetDateCreatedOk() (*interface{}, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return &o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *BasicStream) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given interface{} and assigns it to the DateCreated field.
func (o *BasicStream) SetDateCreated(v interface{}) {
	o.DateCreated = v
}

// GetInviteOnly returns the InviteOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetInviteOnly() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.InviteOnly
}

// GetInviteOnlyOk returns a tuple with the InviteOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetInviteOnlyOk() (*interface{}, bool) {
	if o == nil || o.InviteOnly == nil {
		return nil, false
	}
	return &o.InviteOnly, true
}

// HasInviteOnly returns a boolean if a field has been set.
func (o *BasicStream) HasInviteOnly() bool {
	if o != nil && o.InviteOnly != nil {
		return true
	}

	return false
}

// SetInviteOnly gets a reference to the given interface{} and assigns it to the InviteOnly field.
func (o *BasicStream) SetInviteOnly(v interface{}) {
	o.InviteOnly = v
}

// GetRenderedDescription returns the RenderedDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetRenderedDescription() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.RenderedDescription
}

// GetRenderedDescriptionOk returns a tuple with the RenderedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetRenderedDescriptionOk() (*interface{}, bool) {
	if o == nil || o.RenderedDescription == nil {
		return nil, false
	}
	return &o.RenderedDescription, true
}

// HasRenderedDescription returns a boolean if a field has been set.
func (o *BasicStream) HasRenderedDescription() bool {
	if o != nil && o.RenderedDescription != nil {
		return true
	}

	return false
}

// SetRenderedDescription gets a reference to the given interface{} and assigns it to the RenderedDescription field.
func (o *BasicStream) SetRenderedDescription(v interface{}) {
	o.RenderedDescription = v
}

// GetIsWebPublic returns the IsWebPublic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetIsWebPublic() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.IsWebPublic
}

// GetIsWebPublicOk returns a tuple with the IsWebPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetIsWebPublicOk() (*interface{}, bool) {
	if o == nil || o.IsWebPublic == nil {
		return nil, false
	}
	return &o.IsWebPublic, true
}

// HasIsWebPublic returns a boolean if a field has been set.
func (o *BasicStream) HasIsWebPublic() bool {
	if o != nil && o.IsWebPublic != nil {
		return true
	}

	return false
}

// SetIsWebPublic gets a reference to the given interface{} and assigns it to the IsWebPublic field.
func (o *BasicStream) SetIsWebPublic(v interface{}) {
	o.IsWebPublic = v
}

// GetStreamPostPolicy returns the StreamPostPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetStreamPostPolicy() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.StreamPostPolicy
}

// GetStreamPostPolicyOk returns a tuple with the StreamPostPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetStreamPostPolicyOk() (*interface{}, bool) {
	if o == nil || o.StreamPostPolicy == nil {
		return nil, false
	}
	return &o.StreamPostPolicy, true
}

// HasStreamPostPolicy returns a boolean if a field has been set.
func (o *BasicStream) HasStreamPostPolicy() bool {
	if o != nil && o.StreamPostPolicy != nil {
		return true
	}

	return false
}

// SetStreamPostPolicy gets a reference to the given interface{} and assigns it to the StreamPostPolicy field.
func (o *BasicStream) SetStreamPostPolicy(v interface{}) {
	o.StreamPostPolicy = v
}

// GetMessageRetentionDays returns the MessageRetentionDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetMessageRetentionDays() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.MessageRetentionDays
}

// GetMessageRetentionDaysOk returns a tuple with the MessageRetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetMessageRetentionDaysOk() (*interface{}, bool) {
	if o == nil || o.MessageRetentionDays == nil {
		return nil, false
	}
	return &o.MessageRetentionDays, true
}

// HasMessageRetentionDays returns a boolean if a field has been set.
func (o *BasicStream) HasMessageRetentionDays() bool {
	if o != nil && o.MessageRetentionDays != nil {
		return true
	}

	return false
}

// SetMessageRetentionDays gets a reference to the given interface{} and assigns it to the MessageRetentionDays field.
func (o *BasicStream) SetMessageRetentionDays(v interface{}) {
	o.MessageRetentionDays = v
}

// GetHistoryPublicToSubscribers returns the HistoryPublicToSubscribers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetHistoryPublicToSubscribers() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.HistoryPublicToSubscribers
}

// GetHistoryPublicToSubscribersOk returns a tuple with the HistoryPublicToSubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetHistoryPublicToSubscribersOk() (*interface{}, bool) {
	if o == nil || o.HistoryPublicToSubscribers == nil {
		return nil, false
	}
	return &o.HistoryPublicToSubscribers, true
}

// HasHistoryPublicToSubscribers returns a boolean if a field has been set.
func (o *BasicStream) HasHistoryPublicToSubscribers() bool {
	if o != nil && o.HistoryPublicToSubscribers != nil {
		return true
	}

	return false
}

// SetHistoryPublicToSubscribers gets a reference to the given interface{} and assigns it to the HistoryPublicToSubscribers field.
func (o *BasicStream) SetHistoryPublicToSubscribers(v interface{}) {
	o.HistoryPublicToSubscribers = v
}

// GetFirstMessageId returns the FirstMessageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetFirstMessageId() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.FirstMessageId
}

// GetFirstMessageIdOk returns a tuple with the FirstMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetFirstMessageIdOk() (*interface{}, bool) {
	if o == nil || o.FirstMessageId == nil {
		return nil, false
	}
	return &o.FirstMessageId, true
}

// HasFirstMessageId returns a boolean if a field has been set.
func (o *BasicStream) HasFirstMessageId() bool {
	if o != nil && o.FirstMessageId != nil {
		return true
	}

	return false
}

// SetFirstMessageId gets a reference to the given interface{} and assigns it to the FirstMessageId field.
func (o *BasicStream) SetFirstMessageId(v interface{}) {
	o.FirstMessageId = v
}

// GetIsAnnouncementOnly returns the IsAnnouncementOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BasicStream) GetIsAnnouncementOnly() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.IsAnnouncementOnly
}

// GetIsAnnouncementOnlyOk returns a tuple with the IsAnnouncementOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BasicStream) GetIsAnnouncementOnlyOk() (*interface{}, bool) {
	if o == nil || o.IsAnnouncementOnly == nil {
		return nil, false
	}
	return &o.IsAnnouncementOnly, true
}

// HasIsAnnouncementOnly returns a boolean if a field has been set.
func (o *BasicStream) HasIsAnnouncementOnly() bool {
	if o != nil && o.IsAnnouncementOnly != nil {
		return true
	}

	return false
}

// SetIsAnnouncementOnly gets a reference to the given interface{} and assigns it to the IsAnnouncementOnly field.
func (o *BasicStream) SetIsAnnouncementOnly(v interface{}) {
	o.IsAnnouncementOnly = v
}

func (o BasicStream) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StreamId != nil {
		toSerialize["stream_id"] = o.StreamId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DateCreated != nil {
		toSerialize["date_created"] = o.DateCreated
	}
	if o.InviteOnly != nil {
		toSerialize["invite_only"] = o.InviteOnly
	}
	if o.RenderedDescription != nil {
		toSerialize["rendered_description"] = o.RenderedDescription
	}
	if o.IsWebPublic != nil {
		toSerialize["is_web_public"] = o.IsWebPublic
	}
	if o.StreamPostPolicy != nil {
		toSerialize["stream_post_policy"] = o.StreamPostPolicy
	}
	if o.MessageRetentionDays != nil {
		toSerialize["message_retention_days"] = o.MessageRetentionDays
	}
	if o.HistoryPublicToSubscribers != nil {
		toSerialize["history_public_to_subscribers"] = o.HistoryPublicToSubscribers
	}
	if o.FirstMessageId != nil {
		toSerialize["first_message_id"] = o.FirstMessageId
	}
	if o.IsAnnouncementOnly != nil {
		toSerialize["is_announcement_only"] = o.IsAnnouncementOnly
	}
	return json.Marshal(toSerialize)
}

type NullableBasicStream struct {
	value *BasicStream
	isSet bool
}

func (v NullableBasicStream) Get() *BasicStream {
	return v.value
}

func (v *NullableBasicStream) Set(val *BasicStream) {
	v.value = val
	v.isSet = true
}

func (v NullableBasicStream) IsSet() bool {
	return v.isSet
}

func (v *NullableBasicStream) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasicStream(val *BasicStream) *NullableBasicStream {
	return &NullableBasicStream{value: val, isSet: true}
}

func (v NullableBasicStream) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasicStream) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



// tslint:disable
/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A dictionary containing basic data on a given Zulip user. 
 * @export
 * @interface UserBase
 */
export interface UserBase {
    /**
     * The Zulip API email address of the user or bot.  If you do not have permission to view the email address of the target user, this will be a fake email address that is usable for the Zulip API but nothing else. 
     * @type {string}
     * @memberof UserBase
     */
    email?: string;
    /**
     * A boolean specifying whether the user is a bot or full account. 
     * @type {boolean}
     * @memberof UserBase
     */
    is_bot?: boolean;
    /**
     * URL for the user\'s avatar.  Will be `null` if the `client_gravatar` query parameter was set to `True` and the user\'s avatar is hosted by the Gravatar provider (i.e. the user has never uploaded an avatar).  **Changes**: In Zulip 3.0 (feature level 18), if the client has the `user_avatar_url_field_optional` capability, this will be missing at the server\'s sole discretion. 
     * @type {string}
     * @memberof UserBase
     */
    avatar_url?: string | null;
    /**
     * Version for the user\'s avatar.  Used for cache-busting requests for the user\'s avatar.  Clients generally shouldn\'t need to use this; most avatar URLs sent by Zulip will already end with `?v={avatar_version}`. 
     * @type {number}
     * @memberof UserBase
     */
    avatar_version?: number;
    /**
     * Full name of the user or bot, used for all display purposes. 
     * @type {string}
     * @memberof UserBase
     */
    full_name?: string;
    /**
     * A boolean specifying whether the user is an organization administrator. 
     * @type {boolean}
     * @memberof UserBase
     */
    is_admin?: boolean;
    /**
     * A boolean specifying whether the user is an organization owner. If true, is_admin will also be true.  **Changes**: New in Zulip 3.0 (feature level 8). 
     * @type {boolean}
     * @memberof UserBase
     */
    is_owner?: boolean;
    /**
     * A boolean specifying whether the user is a billing administrator.  **Changes**: New in Zulip 5.0 (feature level 73). 
     * @type {boolean}
     * @memberof UserBase
     */
    is_billing_admin?: boolean;
    /**
     * [Organization-level role](/help/roles-and-permissions)) of the user. Poosible values are:  * Organization owner => 100 * Organization administrator => 200 * Organization moderator => 300 * Member => 400 * Guest => 600  **Changes**: New in Zulip 4.0 (feature level 59). 
     * @type {number}
     * @memberof UserBase
     */
    role?: UserBaseRoleEnum;
    /**
     * An integer describing the type of bot: * `null` if the user isn\'t a bot. * `1` for a `Generic` bot. * `2` for an `Incoming webhook` bot. * `3` for an `Outgoing webhook` bot. * `4` for an `Embedded` bot. 
     * @type {number}
     * @memberof UserBase
     */
    bot_type?: number | null;
    /**
     * The unique ID of the user. 
     * @type {number}
     * @memberof UserBase
     */
    user_id?: number;
    /**
     * If the user is a bot (i.e. `is_bot` is `True`), `bot_owner` is the user ID of the bot\'s owner (usually, whoever created the bot).  Will be null for legacy bots that do not have an owner.  **Changes**: New in Zulip 3.0 (feature level 1).  In previous versions, there was a `bot_owner` field containing the email address of the bot\'s owner. 
     * @type {number}
     * @memberof UserBase
     */
    bot_owner_id?: number | null;
    /**
     * A boolean specifying whether the user account has been deactivated. 
     * @type {boolean}
     * @memberof UserBase
     */
    is_active?: boolean;
    /**
     * A boolean specifying whether the user is a guest user. 
     * @type {boolean}
     * @memberof UserBase
     */
    is_guest?: boolean;
    /**
     * The time zone of the user. 
     * @type {string}
     * @memberof UserBase
     */
    timezone?: string;
    /**
     * The time the user account was created. 
     * @type {string}
     * @memberof UserBase
     */
    date_joined?: string;
    /**
     * The user\'s real email address.  This field is present only if [email address visibility](/help/restrict-visibility-of-email-addresses) is limited and you are an administrator with access to real email addresses under the configured policy. 
     * @type {string}
     * @memberof UserBase
     */
    delivery_email?: string;
    /**
     * A dictionary containing custom profile field data for the user. Each entry maps the integer ID of a custom profile field in the organization to a dictionary containing the user\'s data for that field.  Generally the data includes just a single `value` key; for those custom profile fields supporting Markdown, a `rendered_value` key will also be present. 
     * @type {{ [key: string]: object; }}
     * @memberof UserBase
     */
    profile_data?: { [key: string]: object; };
}

/**
 * @export
 * @enum {string}
 */
export enum UserBaseRoleEnum {
    NUMBER_100 = 100,
    NUMBER_200 = 200,
    NUMBER_300 = 300,
    NUMBER_400 = 400,
    NUMBER_600 = 600
}


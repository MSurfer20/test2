//
// Hotspot.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Dictionary containing details of a single hotspot.  */
public struct Hotspot: Codable, Hashable {

    /** The delay after which the user should be shown the hotspot.  */
    public var delay: Double?
    /** The name of the hotspot.  */
    public var name: String?
    /** The title of the hotspot, as will be displayed to the user.  */
    public var title: String?
    /** The description of the hotspot, as will be displayed to the user.  */
    public var description: String?

    public init(delay: Double? = nil, name: String? = nil, title: String? = nil, description: String? = nil) {
        self.delay = delay
        self.name = name
        self.title = title
        self.description = description
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case delay
        case name
        case title
        case description
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(delay, forKey: .delay)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(description, forKey: .description)
    }
}


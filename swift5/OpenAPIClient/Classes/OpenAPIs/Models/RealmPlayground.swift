//
// RealmPlayground.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Object containing details about a realm playground.  */
public struct RealmPlayground: Codable, Hashable {

    /** The unique ID for the realm playground.  */
    public var id: Int?
    /** The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49).  */
    public var name: String?
    /** The name of the Pygments language lexer for that programming language.  */
    public var pygmentsLanguage: String?
    /** The url prefix for the playground.  */
    public var urlPrefix: String?

    public init(id: Int? = nil, name: String? = nil, pygmentsLanguage: String? = nil, urlPrefix: String? = nil) {
        self.id = id
        self.name = name
        self.pygmentsLanguage = pygmentsLanguage
        self.urlPrefix = urlPrefix
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case pygmentsLanguage = "pygments_language"
        case urlPrefix = "url_prefix"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(pygmentsLanguage, forKey: .pygmentsLanguage)
        try container.encodeIfPresent(urlPrefix, forKey: .urlPrefix)
    }
}


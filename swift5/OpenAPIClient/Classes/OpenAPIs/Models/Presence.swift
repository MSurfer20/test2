//
// Presence.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** &#x60;{client_name}&#x60;: Object containing the details of the user&#39;s presence on a particular platform with the client&#39;s platform name being the object key.  */
public struct Presence: Codable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case idle = "idle"
        case active = "active"
    }
    /** The client's platform name.  */
    public var client: String?
    /** The status of the user on this client. It is either `idle` or `active`.  */
    public var status: Status?
    /** The UNIX timestamp of when this client sent the user's presence to the server with the precision of a second.  */
    public var timestamp: Int?
    /** Whether the client is capable of showing mobile/push notifications to the user.  */
    public var pushable: Bool?

    public init(client: String? = nil, status: Status? = nil, timestamp: Int? = nil, pushable: Bool? = nil) {
        self.client = client
        self.status = status
        self.timestamp = timestamp
        self.pushable = pushable
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case client
        case status
        case timestamp
        case pushable
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(client, forKey: .client)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(pushable, forKey: .pushable)
    }
}


# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class RealmPlayground(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, pygments_language: str=None, url_prefix: str=None):
        """RealmPlayground - a model defined in OpenAPI

        :param id: The id of this RealmPlayground.
        :param name: The name of this RealmPlayground.
        :param pygments_language: The pygments_language of this RealmPlayground.
        :param url_prefix: The url_prefix of this RealmPlayground.
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'pygments_language': str,
            'url_prefix': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'pygments_language': 'pygments_language',
            'url_prefix': 'url_prefix'
        }

        self._id = id
        self._name = name
        self._pygments_language = pygments_language
        self._url_prefix = url_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RealmPlayground':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RealmPlayground of this RealmPlayground.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this RealmPlayground.

        The unique ID for the realm playground. 

        :return: The id of this RealmPlayground.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RealmPlayground.

        The unique ID for the realm playground. 

        :param id: The id of this RealmPlayground.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this RealmPlayground.

        The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49). 

        :return: The name of this RealmPlayground.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RealmPlayground.

        The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49). 

        :param name: The name of this RealmPlayground.
        :type name: str
        """

        self._name = name

    @property
    def pygments_language(self):
        """Gets the pygments_language of this RealmPlayground.

        The name of the Pygments language lexer for that programming language. 

        :return: The pygments_language of this RealmPlayground.
        :rtype: str
        """
        return self._pygments_language

    @pygments_language.setter
    def pygments_language(self, pygments_language):
        """Sets the pygments_language of this RealmPlayground.

        The name of the Pygments language lexer for that programming language. 

        :param pygments_language: The pygments_language of this RealmPlayground.
        :type pygments_language: str
        """

        self._pygments_language = pygments_language

    @property
    def url_prefix(self):
        """Gets the url_prefix of this RealmPlayground.

        The url prefix for the playground. 

        :return: The url_prefix of this RealmPlayground.
        :rtype: str
        """
        return self._url_prefix

    @url_prefix.setter
    def url_prefix(self, url_prefix):
        """Sets the url_prefix of this RealmPlayground.

        The url prefix for the playground. 

        :param url_prefix: The url_prefix of this RealmPlayground.
        :type url_prefix: str
        """

        self._url_prefix = url_prefix

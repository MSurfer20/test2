/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.ApiKeyResponse

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class AuthenticationApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "AuthenticationApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val devFetchApiKeyOperation = (apiOperation[ApiKeyResponse]("devFetchApiKey")
    summary "Fetch an API key (development only)"
    parameters(queryParam[String]("username").description(""))
  )

  post("/dev_fetch_api_key", operation(devFetchApiKeyOperation)) {
            val username = params.getAs[String]("username")

    //println("username: " + username)
  }

  

  val fetchApiKeyOperation = (apiOperation[ApiKeyResponse]("fetchApiKey")
    summary "Fetch an API key (production)"
    parameters(queryParam[String]("username").description(""), queryParam[String]("password").description(""))
  )

  post("/fetch_api_key", operation(fetchApiKeyOperation)) {
            val username = params.getAs[String]("username")

    //println("username: " + username)
            val password = params.getAs[String]("password")

    //println("password: " + password)
  }

}

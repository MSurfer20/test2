/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "MessagesBase_topic_links.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

MessagesBase_topic_links::MessagesBase_topic_links()
{
    m_Text = "";
    m_TextIsSet = false;
    m_Url = "";
    m_UrlIsSet = false;
    
}

void MessagesBase_topic_links::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool MessagesBase_topic_links::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool MessagesBase_topic_links::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "MessagesBase_topic_links" : pathPrefix;

            
    return success;
}

bool MessagesBase_topic_links::operator==(const MessagesBase_topic_links& rhs) const
{
    return
    
    
    
    ((!textIsSet() && !rhs.textIsSet()) || (textIsSet() && rhs.textIsSet() && getText() == rhs.getText())) &&
    
    
    ((!urlIsSet() && !rhs.urlIsSet()) || (urlIsSet() && rhs.urlIsSet() && getUrl() == rhs.getUrl()))
    
    ;
}

bool MessagesBase_topic_links::operator!=(const MessagesBase_topic_links& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const MessagesBase_topic_links& o)
{
    j = nlohmann::json();
    if(o.textIsSet())
        j["text"] = o.m_Text;
    if(o.urlIsSet())
        j["url"] = o.m_Url;
    
}

void from_json(const nlohmann::json& j, MessagesBase_topic_links& o)
{
    if(j.find("text") != j.end())
    {
        j.at("text").get_to(o.m_Text);
        o.m_TextIsSet = true;
    } 
    if(j.find("url") != j.end())
    {
        j.at("url").get_to(o.m_Url);
        o.m_UrlIsSet = true;
    } 
    
}

std::string MessagesBase_topic_links::getText() const
{
    return m_Text;
}
void MessagesBase_topic_links::setText(std::string const& value)
{
    m_Text = value;
    m_TextIsSet = true;
}
bool MessagesBase_topic_links::textIsSet() const
{
    return m_TextIsSet;
}
void MessagesBase_topic_links::unsetText()
{
    m_TextIsSet = false;
}
std::string MessagesBase_topic_links::getUrl() const
{
    return m_Url;
}
void MessagesBase_topic_links::setUrl(std::string const& value)
{
    m_Url = value;
    m_UrlIsSet = true;
}
bool MessagesBase_topic_links::urlIsSet() const
{
    return m_UrlIsSet;
}
void MessagesBase_topic_links::unsetUrl()
{
    m_UrlIsSet = false;
}


} // namespace org::openapitools::server::model


/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * EmojiReactionBase_allOf.h
 *
 * 
 */

#ifndef EmojiReactionBase_allOf_H_
#define EmojiReactionBase_allOf_H_


#include "EmojiReactionBase_allOf_user.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  EmojiReactionBase_allOf
{
public:
    EmojiReactionBase_allOf();
    virtual ~EmojiReactionBase_allOf() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const EmojiReactionBase_allOf& rhs) const;
    bool operator!=(const EmojiReactionBase_allOf& rhs) const;

    /////////////////////////////////////////////
    /// EmojiReactionBase_allOf members

    /// <summary>
    /// The ID of the user who added the reaction.  **Changes**: New in Zulip 3.0 (feature level 2). The &#x60;user&#x60; object is deprecated and will be removed in the future. 
    /// </summary>
    int32_t getUserId() const;
    void setUserId(int32_t const value);
    bool userIdIsSet() const;
    void unsetUser_id();
    /// <summary>
    /// 
    /// </summary>
    EmojiReactionBase_allOf_user getUser() const;
    void setUser(EmojiReactionBase_allOf_user const& value);
    bool userIsSet() const;
    void unsetUser();

    friend void to_json(nlohmann::json& j, const EmojiReactionBase_allOf& o);
    friend void from_json(const nlohmann::json& j, EmojiReactionBase_allOf& o);
protected:
    int32_t m_User_id;
    bool m_User_idIsSet;
    EmojiReactionBase_allOf_user m_User;
    bool m_UserIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* EmojiReactionBase_allOf_H_ */

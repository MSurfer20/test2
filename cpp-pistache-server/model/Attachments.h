/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Attachments.h
 *
 * Dictionary containing details of a file uploaded by a user. 
 */

#ifndef Attachments_H_
#define Attachments_H_


#include "Attachments_messages.h"
#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Dictionary containing details of a file uploaded by a user. 
/// </summary>
class  Attachments
{
public:
    Attachments();
    virtual ~Attachments() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Attachments& rhs) const;
    bool operator!=(const Attachments& rhs) const;

    /////////////////////////////////////////////
    /// Attachments members

    /// <summary>
    /// The unique ID for the attachment. 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t const value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Name of the uploaded file. 
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// A representation of the path of the file within the repository of user-uploaded files.  If the &#x60;path_id&#x60; of a file is &#x60;{realm_id}/ab/cdef/temp_file.py&#x60;, its URL will be: &#x60;{server_url}/user_uploads/{realm_id}/ab/cdef/temp_file.py&#x60;. 
    /// </summary>
    std::string getPathId() const;
    void setPathId(std::string const& value);
    bool pathIdIsSet() const;
    void unsetPath_id();
    /// <summary>
    /// Size of the file in bytes. 
    /// </summary>
    int32_t getSize() const;
    void setSize(int32_t const value);
    bool sizeIsSet() const;
    void unsetSize();
    /// <summary>
    /// Time when the attachment was uploaded as a UNIX timestamp multiplied by 1000 (matching the format of getTime() in JavaScript).  **Changes**: Changed in Zulip 2.2 (feature level 22).  This field was previously a floating point number. 
    /// </summary>
    int32_t getCreateTime() const;
    void setCreateTime(int32_t const value);
    bool createTimeIsSet() const;
    void unsetCreate_time();
    /// <summary>
    /// Contains basic details on any Zulip messages that have been sent referencing this [uploaded file](/api/upload-file). This includes messages sent by any user in the Zulip organization who sent a message containing a link to the uploaded file. 
    /// </summary>
    std::vector<Attachments_messages> getMessages() const;
    void setMessages(std::vector<Attachments_messages> const& value);
    bool messagesIsSet() const;
    void unsetMessages();

    friend void to_json(nlohmann::json& j, const Attachments& o);
    friend void from_json(const nlohmann::json& j, Attachments& o);
protected:
    int32_t m_Id;
    bool m_IdIsSet;
    std::string m_Name;
    bool m_NameIsSet;
    std::string m_Path_id;
    bool m_Path_idIsSet;
    int32_t m_Size;
    bool m_SizeIsSet;
    int32_t m_Create_time;
    bool m_Create_timeIsSet;
    std::vector<Attachments_messages> m_Messages;
    bool m_MessagesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* Attachments_H_ */

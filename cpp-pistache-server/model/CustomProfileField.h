/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CustomProfileField.h
 *
 * Dictionary containing the details of a custom profile field configured for this organization. 
 */

#ifndef CustomProfileField_H_
#define CustomProfileField_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Dictionary containing the details of a custom profile field configured for this organization. 
/// </summary>
class  CustomProfileField
{
public:
    CustomProfileField();
    virtual ~CustomProfileField() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CustomProfileField& rhs) const;
    bool operator!=(const CustomProfileField& rhs) const;

    /////////////////////////////////////////////
    /// CustomProfileField members

    /// <summary>
    /// The ID of the custom profile field.  This will be referenced in custom the profile fields section of user objects. 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t const value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// An integer indicating the type of the custom profile field, which determines how it is configured and displayed to users.  See the [Add custom profile fields](/help/add-custom-profile-fields) article for details on what each type means.  * **1**: Short text * **2**: Long text * **3**: List of options * **4**: Date picker * **5**: Link * **6**: Person picker * **7**: External account 
    /// </summary>
    int32_t getType() const;
    void setType(int32_t const value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// Custom profile fields are displayed in both settings UI and UI showing users&#39; profiles in increasing &#x60;order&#x60;. 
    /// </summary>
    int32_t getOrder() const;
    void setOrder(int32_t const value);
    bool orderIsSet() const;
    void unsetOrder();
    /// <summary>
    /// The name of the custom profile field. 
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// The help text to be displayed for the custom profile field in user-facing settings UI for configuring custom profile fields. 
    /// </summary>
    std::string getHint() const;
    void setHint(std::string const& value);
    bool hintIsSet() const;
    void unsetHint();
    /// <summary>
    /// Field types 3 (List of options) and 7 (External account) support storing additional configuration for the field type in the &#x60;field_data&#x60; attribute.  For field type 3 (List of options), this attribute is a JSON dictionary defining the choices and the order they will be displayed in the dropdown UI for individual users to select an option.  The interface for field type 7 is not yet stabilized. 
    /// </summary>
    std::string getFieldData() const;
    void setFieldData(std::string const& value);
    bool fieldDataIsSet() const;
    void unsetField_data();

    friend void to_json(nlohmann::json& j, const CustomProfileField& o);
    friend void from_json(const nlohmann::json& j, CustomProfileField& o);
protected:
    int32_t m_Id;
    bool m_IdIsSet;
    int32_t m_Type;
    bool m_TypeIsSet;
    int32_t m_Order;
    bool m_OrderIsSet;
    std::string m_Name;
    bool m_NameIsSet;
    std::string m_Hint;
    bool m_HintIsSet;
    std::string m_Field_data;
    bool m_Field_dataIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CustomProfileField_H_ */

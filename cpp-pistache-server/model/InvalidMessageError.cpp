/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "InvalidMessageError.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

InvalidMessageError::InvalidMessageError()
{
    m_Raw_content = "";
    m_Raw_contentIsSet = false;
    
}

void InvalidMessageError::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool InvalidMessageError::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool InvalidMessageError::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "InvalidMessageError" : pathPrefix;

                
    return success;
}

bool InvalidMessageError::operator==(const InvalidMessageError& rhs) const
{
    return
    
    
    (getResult() == rhs.getResult())
     &&
    
    (getMsg() == rhs.getMsg())
     &&
    
    
    ((!rawContentIsSet() && !rhs.rawContentIsSet()) || (rawContentIsSet() && rhs.rawContentIsSet() && getRawContent() == rhs.getRawContent()))
    
    ;
}

bool InvalidMessageError::operator!=(const InvalidMessageError& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const InvalidMessageError& o)
{
    j = nlohmann::json();
    j["result"] = o.m_Result;
    j["msg"] = o.m_Msg;
    if(o.rawContentIsSet())
        j["raw_content"] = o.m_Raw_content;
    
}

void from_json(const nlohmann::json& j, InvalidMessageError& o)
{
    j.at("result").get_to(o.m_Result);
    j.at("msg").get_to(o.m_Msg);
    if(j.find("raw_content") != j.end())
    {
        j.at("raw_content").get_to(o.m_Raw_content);
        o.m_Raw_contentIsSet = true;
    } 
    
}

AnyType InvalidMessageError::getResult() const
{
    return m_Result;
}
void InvalidMessageError::setResult(AnyType const& value)
{
    m_Result = value;
}
AnyType InvalidMessageError::getMsg() const
{
    return m_Msg;
}
void InvalidMessageError::setMsg(AnyType const& value)
{
    m_Msg = value;
}
std::string InvalidMessageError::getRawContent() const
{
    return m_Raw_content;
}
void InvalidMessageError::setRawContent(std::string const& value)
{
    m_Raw_content = value;
    m_Raw_contentIsSet = true;
}
bool InvalidMessageError::rawContentIsSet() const
{
    return m_Raw_contentIsSet;
}
void InvalidMessageError::unsetRaw_content()
{
    m_Raw_contentIsSet = false;
}


} // namespace org::openapitools::server::model


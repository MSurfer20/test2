/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CustomProfileField.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CustomProfileField::CustomProfileField()
{
    m_Id = 0;
    m_IdIsSet = false;
    m_Type = 0;
    m_TypeIsSet = false;
    m_Order = 0;
    m_OrderIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    m_Hint = "";
    m_HintIsSet = false;
    m_Field_data = "";
    m_Field_dataIsSet = false;
    
}

void CustomProfileField::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CustomProfileField::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CustomProfileField::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CustomProfileField" : pathPrefix;

                            
    return success;
}

bool CustomProfileField::operator==(const CustomProfileField& rhs) const
{
    return
    
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType())) &&
    
    
    ((!orderIsSet() && !rhs.orderIsSet()) || (orderIsSet() && rhs.orderIsSet() && getOrder() == rhs.getOrder())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!hintIsSet() && !rhs.hintIsSet()) || (hintIsSet() && rhs.hintIsSet() && getHint() == rhs.getHint())) &&
    
    
    ((!fieldDataIsSet() && !rhs.fieldDataIsSet()) || (fieldDataIsSet() && rhs.fieldDataIsSet() && getFieldData() == rhs.getFieldData()))
    
    ;
}

bool CustomProfileField::operator!=(const CustomProfileField& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CustomProfileField& o)
{
    j = nlohmann::json();
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    if(o.orderIsSet())
        j["order"] = o.m_Order;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.hintIsSet())
        j["hint"] = o.m_Hint;
    if(o.fieldDataIsSet())
        j["field_data"] = o.m_Field_data;
    
}

void from_json(const nlohmann::json& j, CustomProfileField& o)
{
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    if(j.find("order") != j.end())
    {
        j.at("order").get_to(o.m_Order);
        o.m_OrderIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("hint") != j.end())
    {
        j.at("hint").get_to(o.m_Hint);
        o.m_HintIsSet = true;
    } 
    if(j.find("field_data") != j.end())
    {
        j.at("field_data").get_to(o.m_Field_data);
        o.m_Field_dataIsSet = true;
    } 
    
}

int32_t CustomProfileField::getId() const
{
    return m_Id;
}
void CustomProfileField::setId(int32_t const value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool CustomProfileField::idIsSet() const
{
    return m_IdIsSet;
}
void CustomProfileField::unsetId()
{
    m_IdIsSet = false;
}
int32_t CustomProfileField::getType() const
{
    return m_Type;
}
void CustomProfileField::setType(int32_t const value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool CustomProfileField::typeIsSet() const
{
    return m_TypeIsSet;
}
void CustomProfileField::unsetType()
{
    m_TypeIsSet = false;
}
int32_t CustomProfileField::getOrder() const
{
    return m_Order;
}
void CustomProfileField::setOrder(int32_t const value)
{
    m_Order = value;
    m_OrderIsSet = true;
}
bool CustomProfileField::orderIsSet() const
{
    return m_OrderIsSet;
}
void CustomProfileField::unsetOrder()
{
    m_OrderIsSet = false;
}
std::string CustomProfileField::getName() const
{
    return m_Name;
}
void CustomProfileField::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool CustomProfileField::nameIsSet() const
{
    return m_NameIsSet;
}
void CustomProfileField::unsetName()
{
    m_NameIsSet = false;
}
std::string CustomProfileField::getHint() const
{
    return m_Hint;
}
void CustomProfileField::setHint(std::string const& value)
{
    m_Hint = value;
    m_HintIsSet = true;
}
bool CustomProfileField::hintIsSet() const
{
    return m_HintIsSet;
}
void CustomProfileField::unsetHint()
{
    m_HintIsSet = false;
}
std::string CustomProfileField::getFieldData() const
{
    return m_Field_data;
}
void CustomProfileField::setFieldData(std::string const& value)
{
    m_Field_data = value;
    m_Field_dataIsSet = true;
}
bool CustomProfileField::fieldDataIsSet() const
{
    return m_Field_dataIsSet;
}
void CustomProfileField::unsetField_data()
{
    m_Field_dataIsSet = false;
}


} // namespace org::openapitools::server::model


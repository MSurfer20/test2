/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * InvalidMessageError_allOf.h
 *
 * 
 */

#ifndef InvalidMessageError_allOf_H_
#define InvalidMessageError_allOf_H_


#include <string>
#include "AnyType.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  InvalidMessageError_allOf
{
public:
    InvalidMessageError_allOf();
    virtual ~InvalidMessageError_allOf() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const InvalidMessageError_allOf& rhs) const;
    bool operator!=(const InvalidMessageError_allOf& rhs) const;

    /////////////////////////////////////////////
    /// InvalidMessageError_allOf members

    /// <summary>
    /// 
    /// </summary>
    AnyType getResult() const;
    void setResult(AnyType const& value);
    bool resultIsSet() const;
    void unsetResult();
    /// <summary>
    /// 
    /// </summary>
    AnyType getMsg() const;
    void setMsg(AnyType const& value);
    bool msgIsSet() const;
    void unsetMsg();
    /// <summary>
    /// The raw content of the message. 
    /// </summary>
    std::string getRawContent() const;
    void setRawContent(std::string const& value);
    bool rawContentIsSet() const;
    void unsetRaw_content();

    friend void to_json(nlohmann::json& j, const InvalidMessageError_allOf& o);
    friend void from_json(const nlohmann::json& j, InvalidMessageError_allOf& o);
protected:
    AnyType m_Result;
    bool m_ResultIsSet;
    AnyType m_Msg;
    bool m_MsgIsSet;
    std::string m_Raw_content;
    bool m_Raw_contentIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* InvalidMessageError_allOf_H_ */

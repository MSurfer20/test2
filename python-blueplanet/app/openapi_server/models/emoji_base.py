# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model_ import Model
from openapi_server import util


class EmojiBase(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, emoji_code: str=None, emoji_name: str=None, reaction_type: str=None):  # noqa: E501
        """EmojiBase - a model defined in Swagger

        :param emoji_code: The emoji_code of this EmojiBase.  # noqa: E501
        :type emoji_code: str
        :param emoji_name: The emoji_name of this EmojiBase.  # noqa: E501
        :type emoji_name: str
        :param reaction_type: The reaction_type of this EmojiBase.  # noqa: E501
        :type reaction_type: str
        """
        self.swagger_types = {
            'emoji_code': str,
            'emoji_name': str,
            'reaction_type': str
        }

        self.attribute_map = {
            'emoji_code': 'emoji_code',
            'emoji_name': 'emoji_name',
            'reaction_type': 'reaction_type'
        }

        self._emoji_code = emoji_code
        self._emoji_name = emoji_name
        self._reaction_type = reaction_type

    @classmethod
    def from_dict(cls, dikt) -> 'EmojiBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmojiBase of this EmojiBase.  # noqa: E501
        :rtype: EmojiBase
        """
        return util.deserialize_model(dikt, cls)

    @property
    def emoji_code(self) -> str:
        """Gets the emoji_code of this EmojiBase.

        A unique identifier, defining the specific emoji codepoint requested, within the namespace of the `reaction_type`.  For example, for `unicode_emoji`, this will be an encoding of the Unicode codepoint; for `realm_emoji`, it'll be the ID of the realm emoji.   # noqa: E501

        :return: The emoji_code of this EmojiBase.
        :rtype: str
        """
        return self._emoji_code

    @emoji_code.setter
    def emoji_code(self, emoji_code: str):
        """Sets the emoji_code of this EmojiBase.

        A unique identifier, defining the specific emoji codepoint requested, within the namespace of the `reaction_type`.  For example, for `unicode_emoji`, this will be an encoding of the Unicode codepoint; for `realm_emoji`, it'll be the ID of the realm emoji.   # noqa: E501

        :param emoji_code: The emoji_code of this EmojiBase.
        :type emoji_code: str
        """

        self._emoji_code = emoji_code

    @property
    def emoji_name(self) -> str:
        """Gets the emoji_name of this EmojiBase.

        Name of the emoji.   # noqa: E501

        :return: The emoji_name of this EmojiBase.
        :rtype: str
        """
        return self._emoji_name

    @emoji_name.setter
    def emoji_name(self, emoji_name: str):
        """Sets the emoji_name of this EmojiBase.

        Name of the emoji.   # noqa: E501

        :param emoji_name: The emoji_name of this EmojiBase.
        :type emoji_name: str
        """

        self._emoji_name = emoji_name

    @property
    def reaction_type(self) -> str:
        """Gets the reaction_type of this EmojiBase.

        One of the following values:  * `unicode_emoji`: Unicode emoji (`emoji_code` will be its Unicode   codepoint). * `realm_emoji`: [Custom emoji](/help/add-custom-emoji).   (`emoji_code` will be its ID). * `zulip_extra_emoji`: Special emoji included with Zulip.  Exists to   namespace the `zulip` emoji.   # noqa: E501

        :return: The reaction_type of this EmojiBase.
        :rtype: str
        """
        return self._reaction_type

    @reaction_type.setter
    def reaction_type(self, reaction_type: str):
        """Sets the reaction_type of this EmojiBase.

        One of the following values:  * `unicode_emoji`: Unicode emoji (`emoji_code` will be its Unicode   codepoint). * `realm_emoji`: [Custom emoji](/help/add-custom-emoji).   (`emoji_code` will be its ID). * `zulip_extra_emoji`: Special emoji included with Zulip.  Exists to   namespace the `zulip` emoji.   # noqa: E501

        :param reaction_type: The reaction_type of this EmojiBase.
        :type reaction_type: str
        """

        self._reaction_type = reaction_type

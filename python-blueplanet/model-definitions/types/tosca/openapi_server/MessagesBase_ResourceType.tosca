"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "openapi_server MessagesBase"
package     = openapi_server
version     = "1.0"
description = "Defines a MessagesBase"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
  EmojiReaction = openapi_server.resourceTypes.EmojiReaction
  MessagesBaseTopicLinks = openapi_server.resourceTypes.MessagesBaseTopicLinks
  OneOfstringarray = openapi_server.resourceTypes.OneOfstringarray
}
resourceTypes {

  MessagesBase {
    title = MessagesBase
    description = MessagesBase
    derivedFrom = Root
    properties {
        avatar_url {
          type =  string
          description = "The URL of the user&#39;s avatar.  Can be null only if client_gravatar was passed, which means that the user has not uploaded an avatar in Zulip, and the client should compute the gravatar URL by hashing the user&#39;s email address itself for this user. "
          optional = false
        }
        client {
          type =  string
          description = "A Zulip \&quot;client\&quot; string, describing what Zulip client sent the message. "
          optional = false
        }
        content {
          type =  string
          description = "The content/body of the message. "
          optional = false
        }
        content_type {
          type =  string
          description = "The HTTP &#x60;content_type&#x60; for the message content.  This will be &#x60;text/html&#x60; or &#x60;text/x-markdown&#x60;, depending on whether &#x60;apply_markdown&#x60; was set. "
          optional = false
        }
        display_recipient {
          type = OneOfstringarray
          description = "Data on the recipient of the message; either the name of a stream or a dictionary containing basic data on the users who received the message. "
          optional = false
        }
        id {
          type =  integer
          description = "The unique message ID.  Messages should always be displayed sorted by ID. "
          optional = false
        }
        is_me_message {
          type =  boolean
          description = "Whether the message is a [/me status message][status-messages]  [status-messages]: /help/format-your-message-using-markdown#status-messages "
          optional = false
        }
        reactions {
          type = array
          items.type = EmojiReaction
          description = "Data on any reactions to the message. "
          optional = false
        }
        recipient_id {
          type =  integer
          description = "A unique ID for the set of users receiving the message (either a stream or group of users).  Useful primarily for hashing. "
          optional = false
        }
        sender_email {
          type =  string
          description = "The Zulip display email address of the message&#39;s sender. "
          optional = false
        }
        sender_full_name {
          type =  string
          description = "The full name of the message&#39;s sender. "
          optional = false
        }
        sender_id {
          type =  integer
          description = "The user ID of the message&#39;s sender. "
          optional = false
        }
        sender_realm_str {
          type =  string
          description = "A string identifier for the realm the sender is in.  Unique only within the context of a given Zulip server.  E.g. on &#x60;example.zulip.com&#x60;, this will be &#x60;example&#x60;. "
          optional = false
        }
        stream_id {
          type =  integer
          description = "Only present for stream messages; the ID of the stream. "
          optional = false
        }
        subject {
          type =  string
          description = "The &#x60;topic&#x60; of the message.  Currently always &#x60;\&quot;\&quot;&#x60; for private messages, though this could change if Zulip adds support for topics in private message conversations.  The field name is a legacy holdover from when topics were called \&quot;subjects\&quot; and will eventually change. "
          optional = false
        }
        topic_links {
          type = array
          items.type = MessagesBaseTopicLinks
          description = "Data on any links to be included in the &#x60;topic&#x60; line (these are generated by [custom linkification filters](/help/add-a-custom-linkifier) that match content in the message&#39;s topic.)  **Changes**: This field contained a list of urls before   Zulip 4.0 (feature level 46).  New in Zulip 3.0 (feature level 1): Previously, this field was called &#x60;subject_links&#x60;; clients are recommended to rename &#x60;subject_links&#x60; to &#x60;topic_links&#x60; if present for compatibility with older Zulip servers. "
          optional = false
        }
        submessages {
          type = array
          items.type =  string
          description = "Data used for certain experimental Zulip integrations. "
          optional = false
        }
        timestamp {
          type =  integer
          description = "The UNIX timestamp for when the message was sent, in UTC seconds. "
          optional = false
        }
        type {
          type =  string
          description = "The type of the message: &#x60;stream&#x60; or &#x60;private&#x60;. "
          optional = false
        }
    }
  }
}

serviceTemplates {

  MessagesBase {
    title = MessagesBase
    description = MessagesBase
    implements = openapi_server.resourceTypes.MessagesBase

  }
}

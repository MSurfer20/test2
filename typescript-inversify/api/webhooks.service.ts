/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from 'rxjs/Observable';

import { map } from 'rxjs/operators';
import IHttpClient from '../IHttpClient';
import { inject, injectable } from 'inversify';
import { IAPIConfiguration } from '../IAPIConfiguration';
import { Headers } from '../Headers';
import HttpResponse from '../HttpResponse';

import { InlineResponse200 } from '../model/inlineResponse200';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class WebhooksService {
    private basePath: string = 'https://example.zulipchat.com/api/v1';

    constructor(@inject('IApiHttpClient') private httpClient: IHttpClient,
        @inject('IAPIConfiguration') private APIConfiguration: IAPIConfiguration ) {
        if(this.APIConfiguration.basePath)
            this.basePath = this.APIConfiguration.basePath;
    }

    /**
     * Outgoing webhooks
     * Outgoing webhooks allows to build or set up Zulip integrations which are notified when certain types of messages are sent in Zulip. 
     
     */
    public zulipOutgoingWebhooks(observe?: 'body', headers?: Headers): Observable<InlineResponse200>;
    public zulipOutgoingWebhooks(observe?: 'response', headers?: Headers): Observable<HttpResponse<InlineResponse200>>;
    public zulipOutgoingWebhooks(observe: any = 'body', headers: Headers = {}): Observable<any> {
        headers['Accept'] = 'application/json';

        const response: Observable<HttpResponse<InlineResponse200>> = this.httpClient.post(`${this.basePath}/zulip-outgoing-webhook`, headers);
        if (observe === 'body') {
               return response.pipe(
                   map((httpResponse: HttpResponse) => <InlineResponse200>(httpResponse.response))
               );
        }
        return response;
    }

}

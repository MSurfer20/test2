#import <Foundation/Foundation.h>
#import "OAICodedError.h"
#import "OAIDraft.h"
#import "OAIJsonError.h"
#import "OAIJsonSuccess.h"
#import "OAIApi.h"

/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIDraftsApi: NSObject <OAIApi>

extern NSString* kOAIDraftsApiErrorDomain;
extern NSInteger kOAIDraftsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create drafts
/// Create one or more drafts on the server. These drafts will be automatically synchronized to other clients via `drafts` events.  `POST {{ api_url }}/v1/drafts` 
///
/// @param drafts A JSON-encoded list of containing new draft objects.  (optional)
/// 
///  code:200 message:"Success.",
///  code:400 message:"Bad request."
///
/// @return OAIJsonSuccess*
-(NSURLSessionTask*) createDraftsWithDrafts: (NSArray<OAIDraft>*) drafts
    completionHandler: (void (^)(OAIJsonSuccess* output, NSError* error)) handler;


/// Delete a draft
/// Delete a single draft from the server. The deletion will be automatically synchronized to other clients via a `drafts` event.  `DELETE {{ api_url }}/v1/drafts/{draft_id}` 
///
/// @param draftId The ID of the draft you want to delete. 
/// 
///  code:200 message:"Success.",
///  code:404 message:"Not Found."
///
/// @return OAIJsonSuccess*
-(NSURLSessionTask*) deleteDraftWithDraftId: (NSNumber*) draftId
    completionHandler: (void (^)(OAIJsonSuccess* output, NSError* error)) handler;


/// Edit a draft
/// Edit a draft on the server. The edit will be automatically synchronized to other clients via `drafts` events.  `PATCH {{ api_url }}/v1/drafts/{draft_id}` 
///
/// @param draftId The ID of the draft to be edited. 
/// @param draft A JSON-encoded object containing a replacement draft object for this ID. 
/// 
///  code:200 message:"Success.",
///  code:404 message:"Not Found."
///
/// @return OAIJsonSuccess*
-(NSURLSessionTask*) editDraftWithDraftId: (NSNumber*) draftId
    draft: (OAIDraft*) draft
    completionHandler: (void (^)(OAIJsonSuccess* output, NSError* error)) handler;


/// Get drafts
/// Fetch all drafts for the current user.  `GET {{ api_url }}/v1/drafts` 
///
/// 
///  code:200 message:"Success."
///
/// @return OAIJsonSuccess*
-(NSURLSessionTask*) getDraftsWithCompletionHandler: 
    (void (^)(OAIJsonSuccess* output, NSError* error)) handler;



@end

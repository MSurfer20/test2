/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.JsonSuccessBase;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-08-08T20:46:01.944060Z[Etc/UTC]")
@Validated
@Api(value = "settings", description = "the settings API")
public interface SettingsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * PATCH /settings/display : Update display settings
     * This endpoint is used to edit the current user&#39;s user interface settings.  &#x60;PATCH {{ api_url }}/v1/settings/display&#x60; 
     *
     * @param twentyFourHourTime Whether time should be [displayed in 24-hour notation](/help/change-the-time-format).  (optional)
     * @param denseMode This setting has no effect at present.  It is reserved for use in controlling the default font size in Zulip.  (optional)
     * @param starredMessageCounts Whether clients should display the [number of starred messages](/help/star-a-message#display-the-number-of-starred-messages).  (optional)
     * @param fluidLayoutWidth Whether to use the [maximum available screen width](/help/enable-full-width-display) for the web app&#39;s center panel (message feed, recent topics) on wide screens.  (optional)
     * @param highContrastMode This setting is reserved for use to control variations in Zulip&#39;s design to help visually impaired users.  (optional)
     * @param colorScheme Controls which [color theme](/help/night-mode) to use.  * 1 - Automatic * 2 - Night mode * 3 - Day mode  Automatic detection is implementing using the standard &#x60;prefers-color-scheme&#x60; media query.  (optional)
     * @param translateEmoticons Whether to [translate emoticons to emoji](/help/enable-emoticon-translations) in messages the user sends.  (optional)
     * @param defaultLanguage What [default language](/help/change-your-language) to use for the account.  This controls both the Zulip UI as well as email notifications sent to the user.  The value needs to be a standard language code that the Zulip server has translation data for; for example, &#x60;\&quot;en\&quot;&#x60; for English or &#x60;\&quot;de\&quot;&#x60; for German.  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 63).  (optional)
     * @param defaultView The [default view](/help/change-default-view) used when opening a new Zulip web app window or hitting the &#x60;Esc&#x60; keyboard shortcut repeatedly.  * \&quot;recent_topics\&quot; - Recent topics view * \&quot;all_messages\&quot; - All messages view  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 64).  (optional)
     * @param leftSideUserlist Whether the users list on left sidebar in narrow windows.  This feature is not heavily used and is likely to be reworked.  (optional)
     * @param emojiset The user&#39;s configured [emoji set](/help/emoji-and-emoticons#use-emoticons), used to display emoji to the user everything they appear in the UI.  * \&quot;google\&quot; - Google modern * \&quot;google-blob\&quot; - Google classic * \&quot;twitter\&quot; - Twitter * \&quot;text\&quot; - Plain text  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 64).  (optional)
     * @param demoteInactiveStreams Whether to [demote inactive streams](/help/manage-inactive-streams) in the left sidebar.  * 1 - Automatic * 2 - Always * 3 - Never  (optional)
     * @param timezone The user&#39;s [configured timezone](/help/change-your-timezone).  Timezone values supported by the server are served at [/static/generated/timezones.json](/static/generated/timezones.json).  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 64).  (optional)
     * @return Success (status code 200)
     */
    @ApiOperation(value = "Update display settings", nickname = "updateDisplaySettings", notes = "This endpoint is used to edit the current user's user interface settings.  `PATCH {{ api_url }}/v1/settings/display` ", response = JsonSuccessBase.class, tags={ "users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = JsonSuccessBase.class) })
    @PatchMapping(
        value = "/settings/display",
        produces = { "application/json" }
    )
    default ResponseEntity<JsonSuccessBase> updateDisplaySettings(@ApiParam(value = "Whether time should be [displayed in 24-hour notation](/help/change-the-time-format). ") @Valid @RequestParam(value = "twenty_four_hour_time", required = false) Boolean twentyFourHourTime,@ApiParam(value = "This setting has no effect at present.  It is reserved for use in controlling the default font size in Zulip. ") @Valid @RequestParam(value = "dense_mode", required = false) Boolean denseMode,@ApiParam(value = "Whether clients should display the [number of starred messages](/help/star-a-message#display-the-number-of-starred-messages). ") @Valid @RequestParam(value = "starred_message_counts", required = false) Boolean starredMessageCounts,@ApiParam(value = "Whether to use the [maximum available screen width](/help/enable-full-width-display) for the web app's center panel (message feed, recent topics) on wide screens. ") @Valid @RequestParam(value = "fluid_layout_width", required = false) Boolean fluidLayoutWidth,@ApiParam(value = "This setting is reserved for use to control variations in Zulip's design to help visually impaired users. ") @Valid @RequestParam(value = "high_contrast_mode", required = false) Boolean highContrastMode,@ApiParam(value = "Controls which [color theme](/help/night-mode) to use.  * 1 - Automatic * 2 - Night mode * 3 - Day mode  Automatic detection is implementing using the standard `prefers-color-scheme` media query. ", allowableValues = "1, 2, 3") @Valid @RequestParam(value = "color_scheme", required = false) Integer colorScheme,@ApiParam(value = "Whether to [translate emoticons to emoji](/help/enable-emoticon-translations) in messages the user sends. ") @Valid @RequestParam(value = "translate_emoticons", required = false) Boolean translateEmoticons,@ApiParam(value = "What [default language](/help/change-your-language) to use for the account.  This controls both the Zulip UI as well as email notifications sent to the user.  The value needs to be a standard language code that the Zulip server has translation data for; for example, `\"en\"` for English or `\"de\"` for German.  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 63). ") @Valid @RequestParam(value = "default_language", required = false) String defaultLanguage,@ApiParam(value = "The [default view](/help/change-default-view) used when opening a new Zulip web app window or hitting the `Esc` keyboard shortcut repeatedly.  * \"recent_topics\" - Recent topics view * \"all_messages\" - All messages view  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 64). ") @Valid @RequestParam(value = "default_view", required = false) String defaultView,@ApiParam(value = "Whether the users list on left sidebar in narrow windows.  This feature is not heavily used and is likely to be reworked. ") @Valid @RequestParam(value = "left_side_userlist", required = false) Boolean leftSideUserlist,@ApiParam(value = "The user's configured [emoji set](/help/emoji-and-emoticons#use-emoticons), used to display emoji to the user everything they appear in the UI.  * \"google\" - Google modern * \"google-blob\" - Google classic * \"twitter\" - Twitter * \"text\" - Plain text  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 64). ") @Valid @RequestParam(value = "emojiset", required = false) String emojiset,@ApiParam(value = "Whether to [demote inactive streams](/help/manage-inactive-streams) in the left sidebar.  * 1 - Automatic * 2 - Always * 3 - Never ", allowableValues = "1, 2, 3") @Valid @RequestParam(value = "demote_inactive_streams", required = false) Integer demoteInactiveStreams,@ApiParam(value = "The user's [configured timezone](/help/change-your-timezone).  Timezone values supported by the server are served at [/static/generated/timezones.json](/static/generated/timezones.json).  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 64). ") @Valid @RequestParam(value = "timezone", required = false) String timezone) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /settings/notifications : Update notification settings
     * This endpoint is used to edit the user&#39;s global notification settings. See [this endpoint](/api/update-subscription-settings) for per-stream notification settings.  &#x60;PATCH {{ api_url }}/v1/settings/notifications&#x60; 
     *
     * @param enableStreamDesktopNotifications Enable visual desktop notifications for stream messages.  (optional)
     * @param enableStreamEmailNotifications Enable email notifications for stream messages.  (optional)
     * @param enableStreamPushNotifications Enable mobile notifications for stream messages.  (optional)
     * @param enableStreamAudibleNotifications Enable audible desktop notifications for stream messages.  (optional)
     * @param notificationSound Notification sound name.  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 63).  (optional)
     * @param enableDesktopNotifications Enable visual desktop notifications for private messages and @-mentions.  (optional)
     * @param enableSounds Enable audible desktop notifications for private messages and @-mentions.  (optional)
     * @param enableOfflineEmailNotifications Enable email notifications for private messages and @-mentions received when the user is offline.  (optional)
     * @param enableOfflinePushNotifications Enable mobile notification for private messages and @-mentions received when the user is offline.  (optional)
     * @param enableOnlinePushNotifications Enable mobile notification for private messages and @-mentions received when the user is online.  (optional)
     * @param enableDigestEmails Enable digest emails when the user is away.  (optional)
     * @param enableMarketingEmails Enable marketing emails. Has no function outside Zulip Cloud.  (optional)
     * @param enableLoginEmails Enable email notifications for new logins to account.  (optional)
     * @param messageContentInEmailNotifications Include the message&#39;s content in email notifications for new messages.  (optional)
     * @param pmContentInDesktopNotifications Include content of private messages in desktop notifications.  (optional)
     * @param wildcardMentionsNotify Whether wildcard mentions (E.g. @**all**) should send notifications like a personal mention.  (optional)
     * @param desktopIconCountDisplay Unread count summary (appears in desktop sidebar and browser tab)  * 1 - All unreads * 2 - Private messages and mentions * 3 - None  (optional)
     * @param realmNameInNotifications Include organization name in subject of message notification emails.  (optional)
     * @param presenceEnabled Display the presence status to other users when online.  (optional)
     * @return Success. (status code 200)
     */
    @ApiOperation(value = "Update notification settings", nickname = "updateNotificationSettings", notes = "This endpoint is used to edit the user's global notification settings. See [this endpoint](/api/update-subscription-settings) for per-stream notification settings.  `PATCH {{ api_url }}/v1/settings/notifications` ", response = JsonSuccessBase.class, tags={ "users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success.", response = JsonSuccessBase.class) })
    @PatchMapping(
        value = "/settings/notifications",
        produces = { "application/json" }
    )
    default ResponseEntity<JsonSuccessBase> updateNotificationSettings(@ApiParam(value = "Enable visual desktop notifications for stream messages. ") @Valid @RequestParam(value = "enable_stream_desktop_notifications", required = false) Boolean enableStreamDesktopNotifications,@ApiParam(value = "Enable email notifications for stream messages. ") @Valid @RequestParam(value = "enable_stream_email_notifications", required = false) Boolean enableStreamEmailNotifications,@ApiParam(value = "Enable mobile notifications for stream messages. ") @Valid @RequestParam(value = "enable_stream_push_notifications", required = false) Boolean enableStreamPushNotifications,@ApiParam(value = "Enable audible desktop notifications for stream messages. ") @Valid @RequestParam(value = "enable_stream_audible_notifications", required = false) Boolean enableStreamAudibleNotifications,@ApiParam(value = "Notification sound name.  **Changes**: Removed unnecessary JSON-encoding of parameter in Zulip 4.0 (feature level 63). ") @Valid @RequestParam(value = "notification_sound", required = false) String notificationSound,@ApiParam(value = "Enable visual desktop notifications for private messages and @-mentions. ") @Valid @RequestParam(value = "enable_desktop_notifications", required = false) Boolean enableDesktopNotifications,@ApiParam(value = "Enable audible desktop notifications for private messages and @-mentions. ") @Valid @RequestParam(value = "enable_sounds", required = false) Boolean enableSounds,@ApiParam(value = "Enable email notifications for private messages and @-mentions received when the user is offline. ") @Valid @RequestParam(value = "enable_offline_email_notifications", required = false) Boolean enableOfflineEmailNotifications,@ApiParam(value = "Enable mobile notification for private messages and @-mentions received when the user is offline. ") @Valid @RequestParam(value = "enable_offline_push_notifications", required = false) Boolean enableOfflinePushNotifications,@ApiParam(value = "Enable mobile notification for private messages and @-mentions received when the user is online. ") @Valid @RequestParam(value = "enable_online_push_notifications", required = false) Boolean enableOnlinePushNotifications,@ApiParam(value = "Enable digest emails when the user is away. ") @Valid @RequestParam(value = "enable_digest_emails", required = false) Boolean enableDigestEmails,@ApiParam(value = "Enable marketing emails. Has no function outside Zulip Cloud. ") @Valid @RequestParam(value = "enable_marketing_emails", required = false) Boolean enableMarketingEmails,@ApiParam(value = "Enable email notifications for new logins to account. ") @Valid @RequestParam(value = "enable_login_emails", required = false) Boolean enableLoginEmails,@ApiParam(value = "Include the message's content in email notifications for new messages. ") @Valid @RequestParam(value = "message_content_in_email_notifications", required = false) Boolean messageContentInEmailNotifications,@ApiParam(value = "Include content of private messages in desktop notifications. ") @Valid @RequestParam(value = "pm_content_in_desktop_notifications", required = false) Boolean pmContentInDesktopNotifications,@ApiParam(value = "Whether wildcard mentions (E.g. @**all**) should send notifications like a personal mention. ") @Valid @RequestParam(value = "wildcard_mentions_notify", required = false) Boolean wildcardMentionsNotify,@ApiParam(value = "Unread count summary (appears in desktop sidebar and browser tab)  * 1 - All unreads * 2 - Private messages and mentions * 3 - None ", allowableValues = "1, 2, 3") @Valid @RequestParam(value = "desktop_icon_count_display", required = false) Integer desktopIconCountDisplay,@ApiParam(value = "Include organization name in subject of message notification emails. ") @Valid @RequestParam(value = "realm_name_in_notifications", required = false) Boolean realmNameInNotifications,@ApiParam(value = "Display the presence status to other users when online. ") @Valid @RequestParam(value = "presence_enabled", required = false) Boolean presenceEnabled) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}

/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ZulipRestApi);
  }
}(this, function(expect, ZulipRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ZulipRestApi.ServerAndOrganizationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServerAndOrganizationsApi', function() {
    describe('addCodePlayground', function() {
      it('should call addCodePlayground successfully', function(done) {
        //uncomment below and update the code to test addCodePlayground
        //instance.addCodePlayground(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLinkifier', function() {
      it('should call addLinkifier successfully', function(done) {
        //uncomment below and update the code to test addLinkifier
        //instance.addLinkifier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCustomProfileField', function() {
      it('should call createCustomProfileField successfully', function(done) {
        //uncomment below and update the code to test createCustomProfileField
        //instance.createCustomProfileField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomEmoji', function() {
      it('should call getCustomEmoji successfully', function(done) {
        //uncomment below and update the code to test getCustomEmoji
        //instance.getCustomEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomProfileFields', function() {
      it('should call getCustomProfileFields successfully', function(done) {
        //uncomment below and update the code to test getCustomProfileFields
        //instance.getCustomProfileFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLinkifiers', function() {
      it('should call getLinkifiers successfully', function(done) {
        //uncomment below and update the code to test getLinkifiers
        //instance.getLinkifiers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServerSettings', function() {
      it('should call getServerSettings successfully', function(done) {
        //uncomment below and update the code to test getServerSettings
        //instance.getServerSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeCodePlayground', function() {
      it('should call removeCodePlayground successfully', function(done) {
        //uncomment below and update the code to test removeCodePlayground
        //instance.removeCodePlayground(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeLinkifier', function() {
      it('should call removeLinkifier successfully', function(done) {
        //uncomment below and update the code to test removeLinkifier
        //instance.removeLinkifier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reorderCustomProfileFields', function() {
      it('should call reorderCustomProfileFields successfully', function(done) {
        //uncomment below and update the code to test reorderCustomProfileFields
        //instance.reorderCustomProfileFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLinkifier', function() {
      it('should call updateLinkifier successfully', function(done) {
        //uncomment below and update the code to test updateLinkifier
        //instance.updateLinkifier(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadCustomEmoji', function() {
      it('should call uploadCustomEmoji successfully', function(done) {
        //uncomment below and update the code to test uploadCustomEmoji
        //instance.uploadCustomEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

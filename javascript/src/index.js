/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddSubscriptionsResponse from './model/AddSubscriptionsResponse';
import AddSubscriptionsResponseAllOf from './model/AddSubscriptionsResponseAllOf';
import ApiKeyResponse from './model/ApiKeyResponse';
import ApiKeyResponseAllOf from './model/ApiKeyResponseAllOf';
import Attachments from './model/Attachments';
import AttachmentsMessages from './model/AttachmentsMessages';
import BadEventQueueIdError from './model/BadEventQueueIdError';
import BadEventQueueIdErrorAllOf from './model/BadEventQueueIdErrorAllOf';
import BasicBot from './model/BasicBot';
import BasicBotAllOf from './model/BasicBotAllOf';
import BasicBotBase from './model/BasicBotBase';
import BasicStream from './model/BasicStream';
import BasicStreamAllOf from './model/BasicStreamAllOf';
import BasicStreamBase from './model/BasicStreamBase';
import Bot from './model/Bot';
import BotAllOf from './model/BotAllOf';
import CodedError from './model/CodedError';
import CodedErrorAllOf from './model/CodedErrorAllOf';
import CodedErrorBase from './model/CodedErrorBase';
import CodedErrorBaseAllOf from './model/CodedErrorBaseAllOf';
import CustomProfileField from './model/CustomProfileField';
import DefaultStreamGroup from './model/DefaultStreamGroup';
import Draft from './model/Draft';
import EmojiBase from './model/EmojiBase';
import EmojiReaction from './model/EmojiReaction';
import EmojiReactionAllOf from './model/EmojiReactionAllOf';
import EmojiReactionBase from './model/EmojiReactionBase';
import EmojiReactionBaseAllOf from './model/EmojiReactionBaseAllOf';
import EmojiReactionBaseAllOfUser from './model/EmojiReactionBaseAllOfUser';
import GetMessages from './model/GetMessages';
import GetMessagesAllOf from './model/GetMessagesAllOf';
import Hotspot from './model/Hotspot';
import InlineResponse200 from './model/InlineResponse200';
import InvalidApiKeyError from './model/InvalidApiKeyError';
import InvalidMessageError from './model/InvalidMessageError';
import InvalidMessageErrorAllOf from './model/InvalidMessageErrorAllOf';
import JsonError from './model/JsonError';
import JsonErrorBase from './model/JsonErrorBase';
import JsonErrorBaseAllOf from './model/JsonErrorBaseAllOf';
import JsonResponseBase from './model/JsonResponseBase';
import JsonSuccess from './model/JsonSuccess';
import JsonSuccessAllOf from './model/JsonSuccessAllOf';
import JsonSuccessBase from './model/JsonSuccessBase';
import JsonSuccessBaseAllOf from './model/JsonSuccessBaseAllOf';
import Messages from './model/Messages';
import MessagesAllOf from './model/MessagesAllOf';
import MessagesBase from './model/MessagesBase';
import MessagesBaseTopicLinks from './model/MessagesBaseTopicLinks';
import MissingArgumentError from './model/MissingArgumentError';
import MissingArgumentErrorAllOf from './model/MissingArgumentErrorAllOf';
import NonExistingStreamError from './model/NonExistingStreamError';
import NonExistingStreamErrorAllOf from './model/NonExistingStreamErrorAllOf';
import Presence from './model/Presence';
import RateLimitedError from './model/RateLimitedError';
import RealmDeactivatedError from './model/RealmDeactivatedError';
import RealmDomain from './model/RealmDomain';
import RealmEmoji from './model/RealmEmoji';
import RealmExport from './model/RealmExport';
import RealmPlayground from './model/RealmPlayground';
import Subscriptions from './model/Subscriptions';
import User from './model/User';
import UserAllOf from './model/UserAllOf';
import UserBase from './model/UserBase';
import UserDeactivatedError from './model/UserDeactivatedError';
import UserGroup from './model/UserGroup';
import UserNotAuthorizedError from './model/UserNotAuthorizedError';
import AuthenticationApi from './api/AuthenticationApi';
import DraftsApi from './api/DraftsApi';
import MessagesApi from './api/MessagesApi';
import RealTimeEventsApi from './api/RealTimeEventsApi';
import ServerAndOrganizationsApi from './api/ServerAndOrganizationsApi';
import StreamsApi from './api/StreamsApi';
import UsersApi from './api/UsersApi';
import WebhooksApi from './api/WebhooksApi';


/**
* Powerful_open_source_group_chat.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ZulipRestApi = require('index'); // See note below*.
* var xxxSvc = new ZulipRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ZulipRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ZulipRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ZulipRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddSubscriptionsResponse model constructor.
     * @property {module:model/AddSubscriptionsResponse}
     */
    AddSubscriptionsResponse,

    /**
     * The AddSubscriptionsResponseAllOf model constructor.
     * @property {module:model/AddSubscriptionsResponseAllOf}
     */
    AddSubscriptionsResponseAllOf,

    /**
     * The ApiKeyResponse model constructor.
     * @property {module:model/ApiKeyResponse}
     */
    ApiKeyResponse,

    /**
     * The ApiKeyResponseAllOf model constructor.
     * @property {module:model/ApiKeyResponseAllOf}
     */
    ApiKeyResponseAllOf,

    /**
     * The Attachments model constructor.
     * @property {module:model/Attachments}
     */
    Attachments,

    /**
     * The AttachmentsMessages model constructor.
     * @property {module:model/AttachmentsMessages}
     */
    AttachmentsMessages,

    /**
     * The BadEventQueueIdError model constructor.
     * @property {module:model/BadEventQueueIdError}
     */
    BadEventQueueIdError,

    /**
     * The BadEventQueueIdErrorAllOf model constructor.
     * @property {module:model/BadEventQueueIdErrorAllOf}
     */
    BadEventQueueIdErrorAllOf,

    /**
     * The BasicBot model constructor.
     * @property {module:model/BasicBot}
     */
    BasicBot,

    /**
     * The BasicBotAllOf model constructor.
     * @property {module:model/BasicBotAllOf}
     */
    BasicBotAllOf,

    /**
     * The BasicBotBase model constructor.
     * @property {module:model/BasicBotBase}
     */
    BasicBotBase,

    /**
     * The BasicStream model constructor.
     * @property {module:model/BasicStream}
     */
    BasicStream,

    /**
     * The BasicStreamAllOf model constructor.
     * @property {module:model/BasicStreamAllOf}
     */
    BasicStreamAllOf,

    /**
     * The BasicStreamBase model constructor.
     * @property {module:model/BasicStreamBase}
     */
    BasicStreamBase,

    /**
     * The Bot model constructor.
     * @property {module:model/Bot}
     */
    Bot,

    /**
     * The BotAllOf model constructor.
     * @property {module:model/BotAllOf}
     */
    BotAllOf,

    /**
     * The CodedError model constructor.
     * @property {module:model/CodedError}
     */
    CodedError,

    /**
     * The CodedErrorAllOf model constructor.
     * @property {module:model/CodedErrorAllOf}
     */
    CodedErrorAllOf,

    /**
     * The CodedErrorBase model constructor.
     * @property {module:model/CodedErrorBase}
     */
    CodedErrorBase,

    /**
     * The CodedErrorBaseAllOf model constructor.
     * @property {module:model/CodedErrorBaseAllOf}
     */
    CodedErrorBaseAllOf,

    /**
     * The CustomProfileField model constructor.
     * @property {module:model/CustomProfileField}
     */
    CustomProfileField,

    /**
     * The DefaultStreamGroup model constructor.
     * @property {module:model/DefaultStreamGroup}
     */
    DefaultStreamGroup,

    /**
     * The Draft model constructor.
     * @property {module:model/Draft}
     */
    Draft,

    /**
     * The EmojiBase model constructor.
     * @property {module:model/EmojiBase}
     */
    EmojiBase,

    /**
     * The EmojiReaction model constructor.
     * @property {module:model/EmojiReaction}
     */
    EmojiReaction,

    /**
     * The EmojiReactionAllOf model constructor.
     * @property {module:model/EmojiReactionAllOf}
     */
    EmojiReactionAllOf,

    /**
     * The EmojiReactionBase model constructor.
     * @property {module:model/EmojiReactionBase}
     */
    EmojiReactionBase,

    /**
     * The EmojiReactionBaseAllOf model constructor.
     * @property {module:model/EmojiReactionBaseAllOf}
     */
    EmojiReactionBaseAllOf,

    /**
     * The EmojiReactionBaseAllOfUser model constructor.
     * @property {module:model/EmojiReactionBaseAllOfUser}
     */
    EmojiReactionBaseAllOfUser,

    /**
     * The GetMessages model constructor.
     * @property {module:model/GetMessages}
     */
    GetMessages,

    /**
     * The GetMessagesAllOf model constructor.
     * @property {module:model/GetMessagesAllOf}
     */
    GetMessagesAllOf,

    /**
     * The Hotspot model constructor.
     * @property {module:model/Hotspot}
     */
    Hotspot,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InvalidApiKeyError model constructor.
     * @property {module:model/InvalidApiKeyError}
     */
    InvalidApiKeyError,

    /**
     * The InvalidMessageError model constructor.
     * @property {module:model/InvalidMessageError}
     */
    InvalidMessageError,

    /**
     * The InvalidMessageErrorAllOf model constructor.
     * @property {module:model/InvalidMessageErrorAllOf}
     */
    InvalidMessageErrorAllOf,

    /**
     * The JsonError model constructor.
     * @property {module:model/JsonError}
     */
    JsonError,

    /**
     * The JsonErrorBase model constructor.
     * @property {module:model/JsonErrorBase}
     */
    JsonErrorBase,

    /**
     * The JsonErrorBaseAllOf model constructor.
     * @property {module:model/JsonErrorBaseAllOf}
     */
    JsonErrorBaseAllOf,

    /**
     * The JsonResponseBase model constructor.
     * @property {module:model/JsonResponseBase}
     */
    JsonResponseBase,

    /**
     * The JsonSuccess model constructor.
     * @property {module:model/JsonSuccess}
     */
    JsonSuccess,

    /**
     * The JsonSuccessAllOf model constructor.
     * @property {module:model/JsonSuccessAllOf}
     */
    JsonSuccessAllOf,

    /**
     * The JsonSuccessBase model constructor.
     * @property {module:model/JsonSuccessBase}
     */
    JsonSuccessBase,

    /**
     * The JsonSuccessBaseAllOf model constructor.
     * @property {module:model/JsonSuccessBaseAllOf}
     */
    JsonSuccessBaseAllOf,

    /**
     * The Messages model constructor.
     * @property {module:model/Messages}
     */
    Messages,

    /**
     * The MessagesAllOf model constructor.
     * @property {module:model/MessagesAllOf}
     */
    MessagesAllOf,

    /**
     * The MessagesBase model constructor.
     * @property {module:model/MessagesBase}
     */
    MessagesBase,

    /**
     * The MessagesBaseTopicLinks model constructor.
     * @property {module:model/MessagesBaseTopicLinks}
     */
    MessagesBaseTopicLinks,

    /**
     * The MissingArgumentError model constructor.
     * @property {module:model/MissingArgumentError}
     */
    MissingArgumentError,

    /**
     * The MissingArgumentErrorAllOf model constructor.
     * @property {module:model/MissingArgumentErrorAllOf}
     */
    MissingArgumentErrorAllOf,

    /**
     * The NonExistingStreamError model constructor.
     * @property {module:model/NonExistingStreamError}
     */
    NonExistingStreamError,

    /**
     * The NonExistingStreamErrorAllOf model constructor.
     * @property {module:model/NonExistingStreamErrorAllOf}
     */
    NonExistingStreamErrorAllOf,

    /**
     * The Presence model constructor.
     * @property {module:model/Presence}
     */
    Presence,

    /**
     * The RateLimitedError model constructor.
     * @property {module:model/RateLimitedError}
     */
    RateLimitedError,

    /**
     * The RealmDeactivatedError model constructor.
     * @property {module:model/RealmDeactivatedError}
     */
    RealmDeactivatedError,

    /**
     * The RealmDomain model constructor.
     * @property {module:model/RealmDomain}
     */
    RealmDomain,

    /**
     * The RealmEmoji model constructor.
     * @property {module:model/RealmEmoji}
     */
    RealmEmoji,

    /**
     * The RealmExport model constructor.
     * @property {module:model/RealmExport}
     */
    RealmExport,

    /**
     * The RealmPlayground model constructor.
     * @property {module:model/RealmPlayground}
     */
    RealmPlayground,

    /**
     * The Subscriptions model constructor.
     * @property {module:model/Subscriptions}
     */
    Subscriptions,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserAllOf model constructor.
     * @property {module:model/UserAllOf}
     */
    UserAllOf,

    /**
     * The UserBase model constructor.
     * @property {module:model/UserBase}
     */
    UserBase,

    /**
     * The UserDeactivatedError model constructor.
     * @property {module:model/UserDeactivatedError}
     */
    UserDeactivatedError,

    /**
     * The UserGroup model constructor.
     * @property {module:model/UserGroup}
     */
    UserGroup,

    /**
     * The UserNotAuthorizedError model constructor.
     * @property {module:model/UserNotAuthorizedError}
     */
    UserNotAuthorizedError,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The DraftsApi service constructor.
    * @property {module:api/DraftsApi}
    */
    DraftsApi,

    /**
    * The MessagesApi service constructor.
    * @property {module:api/MessagesApi}
    */
    MessagesApi,

    /**
    * The RealTimeEventsApi service constructor.
    * @property {module:api/RealTimeEventsApi}
    */
    RealTimeEventsApi,

    /**
    * The ServerAndOrganizationsApi service constructor.
    * @property {module:api/ServerAndOrganizationsApi}
    */
    ServerAndOrganizationsApi,

    /**
    * The StreamsApi service constructor.
    * @property {module:api/StreamsApi}
    */
    StreamsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi
};

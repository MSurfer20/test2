/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvalidMessageErrorAllOf from './InvalidMessageErrorAllOf';
import JsonSuccessBase from './JsonSuccessBase';

/**
 * The InvalidMessageError model module.
 * @module model/InvalidMessageError
 * @version 1.0.0
 */
class InvalidMessageError {
    /**
     * Constructs a new <code>InvalidMessageError</code>.
     * @alias module:model/InvalidMessageError
     * @implements module:model/JsonSuccessBase
     * @implements module:model/InvalidMessageErrorAllOf
     * @param result {Object} 
     * @param msg {Object} 
     */
    constructor(result, msg) { 
        JsonSuccessBase.initialize(this, result, msg);InvalidMessageErrorAllOf.initialize(this);
        InvalidMessageError.initialize(this, result, msg);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, result, msg) { 
        obj['result'] = result;
        obj['msg'] = msg;
    }

    /**
     * Constructs a <code>InvalidMessageError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvalidMessageError} obj Optional instance to populate.
     * @return {module:model/InvalidMessageError} The populated <code>InvalidMessageError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvalidMessageError();
            JsonSuccessBase.constructFromObject(data, obj);
            InvalidMessageErrorAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], Object);
            }
            if (data.hasOwnProperty('msg')) {
                obj['msg'] = ApiClient.convertToType(data['msg'], Object);
            }
            if (data.hasOwnProperty('raw_content')) {
                obj['raw_content'] = ApiClient.convertToType(data['raw_content'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Object} result
 */
InvalidMessageError.prototype['result'] = undefined;

/**
 * @member {Object} msg
 */
InvalidMessageError.prototype['msg'] = undefined;

/**
 * The raw content of the message. 
 * @member {String} raw_content
 */
InvalidMessageError.prototype['raw_content'] = undefined;


// Implement JsonSuccessBase interface:
/**
 * @member {module:model/JsonSuccessBase.ResultEnum} result
 */
JsonSuccessBase.prototype['result'] = undefined;
/**
 * @member {String} msg
 */
JsonSuccessBase.prototype['msg'] = undefined;
// Implement InvalidMessageErrorAllOf interface:
/**
 * @member {Object} result
 */
InvalidMessageErrorAllOf.prototype['result'] = undefined;
/**
 * @member {Object} msg
 */
InvalidMessageErrorAllOf.prototype['msg'] = undefined;
/**
 * The raw content of the message. 
 * @member {String} raw_content
 */
InvalidMessageErrorAllOf.prototype['raw_content'] = undefined;




export default InvalidMessageError;


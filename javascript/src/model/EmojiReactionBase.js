/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmojiReactionBaseUser from './EmojiReactionBaseUser';

/**
 * The EmojiReactionBase model module.
 * @module model/EmojiReactionBase
 * @version 1.0.0
 */
class EmojiReactionBase {
    /**
     * Constructs a new <code>EmojiReactionBase</code>.
     * @alias module:model/EmojiReactionBase
     */
    constructor() { 
        
        EmojiReactionBase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmojiReactionBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmojiReactionBase} obj Optional instance to populate.
     * @return {module:model/EmojiReactionBase} The populated <code>EmojiReactionBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmojiReactionBase();

            if (data.hasOwnProperty('emoji_code')) {
                obj['emoji_code'] = ApiClient.convertToType(data['emoji_code'], 'String');
            }
            if (data.hasOwnProperty('emoji_name')) {
                obj['emoji_name'] = ApiClient.convertToType(data['emoji_name'], 'String');
            }
            if (data.hasOwnProperty('reaction_type')) {
                obj['reaction_type'] = ApiClient.convertToType(data['reaction_type'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = EmojiReactionBaseUser.constructFromObject(data['user']);
            }
        }
        return obj;
    }


}

/**
 * A unique identifier, defining the specific emoji codepoint requested, within the namespace of the `reaction_type`.  For example, for `unicode_emoji`, this will be an encoding of the Unicode codepoint. 
 * @member {String} emoji_code
 */
EmojiReactionBase.prototype['emoji_code'] = undefined;

/**
 * Name of the emoji. 
 * @member {String} emoji_name
 */
EmojiReactionBase.prototype['emoji_name'] = undefined;

/**
 * One of the following values:  * `unicode_emoji`: Unicode emoji (`emoji_code` will be its Unicode   codepoint). * `realm_emoji`: [Custom emoji](/help/add-custom-emoji).   (`emoji_code` will be its ID). * `zulip_extra_emoji`: Special emoji included with Zulip.  Exists to   namespace the `zulip` emoji. 
 * @member {String} reaction_type
 */
EmojiReactionBase.prototype['reaction_type'] = undefined;

/**
 * The ID of the user who added the reaction.  **Changes**: New in Zulip 3.0 (feature level 2). The `user` object is deprecated and will be removed in the future. 
 * @member {Number} user_id
 */
EmojiReactionBase.prototype['user_id'] = undefined;

/**
 * @member {module:model/EmojiReactionBaseUser} user
 */
EmojiReactionBase.prototype['user'] = undefined;






export default EmojiReactionBase;


/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Presence model module.
 * @module model/Presence
 * @version 1.0.0
 */
class Presence {
    /**
     * Constructs a new <code>Presence</code>.
     * &#x60;{client_name}&#x60;: Object containing the details of the user&#39;s presence on a particular platform with the client&#39;s platform name being the object key. 
     * @alias module:model/Presence
     */
    constructor() { 
        
        Presence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Presence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Presence} obj Optional instance to populate.
     * @return {module:model/Presence} The populated <code>Presence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Presence();

            if (data.hasOwnProperty('client')) {
                obj['client'] = ApiClient.convertToType(data['client'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('pushable')) {
                obj['pushable'] = ApiClient.convertToType(data['pushable'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The client's platform name. 
 * @member {String} client
 */
Presence.prototype['client'] = undefined;

/**
 * The status of the user on this client. It is either `idle` or `active`. 
 * @member {module:model/Presence.StatusEnum} status
 */
Presence.prototype['status'] = undefined;

/**
 * The UNIX timestamp of when this client sent the user's presence to the server with the precision of a second. 
 * @member {Number} timestamp
 */
Presence.prototype['timestamp'] = undefined;

/**
 * Whether the client is capable of showing mobile/push notifications to the user. 
 * @member {Boolean} pushable
 */
Presence.prototype['pushable'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Presence['StatusEnum'] = {

    /**
     * value: "idle"
     * @const
     */
    "idle": "idle",

    /**
     * value: "active"
     * @const
     */
    "active": "active"
};



export default Presence;


/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmojiReactionBaseUser model module.
 * @module model/EmojiReactionBaseUser
 * @version 1.0.0
 */
class EmojiReactionBaseUser {
    /**
     * Constructs a new <code>EmojiReactionBaseUser</code>.
     * Dictionary with data on the user who added the reaction, including the user ID as the &#x60;id&#x60; field.  **Note**: In the [events API](/api/get-events), this &#x60;user&#x60; dictionary confusing had the user ID in a field called &#x60;user_id&#x60; instead.  We recommend ignoring fields other than the user ID.  **Deprecated** and to be removed in a future release once core clients have migrated to use the &#x60;user_id&#x60; field. 
     * @alias module:model/EmojiReactionBaseUser
     */
    constructor() { 
        
        EmojiReactionBaseUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmojiReactionBaseUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmojiReactionBaseUser} obj Optional instance to populate.
     * @return {module:model/EmojiReactionBaseUser} The populated <code>EmojiReactionBaseUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmojiReactionBaseUser();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('full_name')) {
                obj['full_name'] = ApiClient.convertToType(data['full_name'], 'String');
            }
            if (data.hasOwnProperty('is_mirror_dummy')) {
                obj['is_mirror_dummy'] = ApiClient.convertToType(data['is_mirror_dummy'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * ID of the user. 
 * @member {Number} id
 */
EmojiReactionBaseUser.prototype['id'] = undefined;

/**
 * Email of the user. 
 * @member {String} email
 */
EmojiReactionBaseUser.prototype['email'] = undefined;

/**
 * Full name of the user. 
 * @member {String} full_name
 */
EmojiReactionBaseUser.prototype['full_name'] = undefined;

/**
 * Whether the user is a mirror dummy. 
 * @member {Boolean} is_mirror_dummy
 */
EmojiReactionBaseUser.prototype['is_mirror_dummy'] = undefined;






export default EmojiReactionBaseUser;


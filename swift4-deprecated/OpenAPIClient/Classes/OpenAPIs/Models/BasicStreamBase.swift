//
// BasicStreamBase.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Object containing basic details about the stream.  */
public struct BasicStreamBase: Codable { 


    /** The unique ID of the stream.  */
    public var streamId: Int?
    /** The name of the stream.  */
    public var name: String?
    /** The short description of the stream in text/markdown format, intended to be used to prepopulate UI for editing a stream&#39;s description.  */
    public var description: String?
    /** The UNIX timestamp for when the stream was created, in UTC seconds.  **Changes**: New in Zulip 4.0 (feature level 30).  */
    public var dateCreated: Int?
    /** Specifies whether the stream is private or not. Only people who have been invited can access a private stream.  */
    public var inviteOnly: Bool?
    /** The short description of the stream rendered as HTML, intended to be used when displaying the stream description in a UI.  One should use the standard Zulip rendered_markdown CSS when displaying this content so that emoji, LaTeX, and other syntax work correctly.  And any client-side security logic for user-generated message content should be applied when displaying this HTML as though it were the body of a Zulip message.  */
    public var renderedDescription: String?
    /** Whether the stream has been configured to allow unauthenticated access to its message history from the web.  */
    public var isWebPublic: Bool?
    /** Policy for which users can post messages to the stream.  * 1 &#x3D;&gt; Any user can post. * 2 &#x3D;&gt; Only administrators can post. * 3 &#x3D;&gt; Only full members can post. * 4 &#x3D;&gt; Only moderators can post.  **Changes**: New in Zulip 3.0, replacing the previous &#x60;is_announcement_only&#x60; boolean.  */
    public var streamPostPolicy: Int?
    /** Number of days that messages sent to this stream will be stored before being automatically deleted by the [message retention policy](/help/message-retention-policy).  There are two special values:  * &#x60;null&#x60;, the default, means the stream will inherit the organization   level setting. * &#x60;-1&#x60; encodes retaining messages in this stream forever.  **Changes**: New in Zulip 3.0 (feature level 17).  */
    public var messageRetentionDays: Int?
    /** Whether the history of the stream is public to its subscribers.  Currently always true for public streams (i.e. invite_only&#x3D;False implies history_public_to_subscribers&#x3D;True), but clients should not make that assumption, as we may change that behavior in the future.  */
    public var historyPublicToSubscribers: Bool?
    /** The id of the first message in the stream.  Intended to help clients determine whether they need to display UI like the \&quot;more topics\&quot; widget that would suggest the stream has older history that can be accessed.  Null is used for streams with no message history.  */
    public var firstMessageId: Int?
    /** Whether the given stream is announcement only or not.  **Changes**: Deprecated in Zulip 3.0 (feature level 1), use &#x60;stream_post_policy&#x60; instead.  */
    public var isAnnouncementOnly: Bool?

    public init(streamId: Int?, name: String?, description: String?, dateCreated: Int?, inviteOnly: Bool?, renderedDescription: String?, isWebPublic: Bool?, streamPostPolicy: Int?, messageRetentionDays: Int?, historyPublicToSubscribers: Bool?, firstMessageId: Int?, isAnnouncementOnly: Bool?) {
        self.streamId = streamId
        self.name = name
        self.description = description
        self.dateCreated = dateCreated
        self.inviteOnly = inviteOnly
        self.renderedDescription = renderedDescription
        self.isWebPublic = isWebPublic
        self.streamPostPolicy = streamPostPolicy
        self.messageRetentionDays = messageRetentionDays
        self.historyPublicToSubscribers = historyPublicToSubscribers
        self.firstMessageId = firstMessageId
        self.isAnnouncementOnly = isAnnouncementOnly
    }

    public enum CodingKeys: String, CodingKey { 
        case streamId = "stream_id"
        case name
        case description
        case dateCreated = "date_created"
        case inviteOnly = "invite_only"
        case renderedDescription = "rendered_description"
        case isWebPublic = "is_web_public"
        case streamPostPolicy = "stream_post_policy"
        case messageRetentionDays = "message_retention_days"
        case historyPublicToSubscribers = "history_public_to_subscribers"
        case firstMessageId = "first_message_id"
        case isAnnouncementOnly = "is_announcement_only"
    }

}

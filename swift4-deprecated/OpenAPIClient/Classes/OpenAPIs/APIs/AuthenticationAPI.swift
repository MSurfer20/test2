//
// AuthenticationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class AuthenticationAPI {
    /**
     Fetch an API key (development only)
     
     - parameter username: (query) The email address for the user that owns the API key.  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func devFetchApiKey(username: String, completion: @escaping ((_ data: ApiKeyResponse?,_ error: Error?) -> Void)) {
        devFetchApiKeyWithRequestBuilder(username: username).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Fetch an API key (development only)
     - POST /dev_fetch_api_key
     - For easy testing of mobile apps and other clients and against Zulip development servers, we support fetching a Zulip API key for any user on the development server without authentication (so that they can implement analogues of the one-click login process available for Zulip development servers on the web).  **Note:** This endpoint is only available on Zulip development servers; for obvious security reasons it will always return an error in a Zulip production server.  `POST {{ api_url }}/v1/dev_fetch_api_key` 
     - parameter username: (query) The email address for the user that owns the API key.  
     - returns: RequestBuilder<ApiKeyResponse> 
     */
    open class func devFetchApiKeyWithRequestBuilder(username: String) -> RequestBuilder<ApiKeyResponse> {
        let path = "/dev_fetch_api_key"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "username": username.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ApiKeyResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Fetch an API key (production)
     
     - parameter username: (query) The username to be used for authentication (typically, the email address, but depending on configuration, it could be an LDAP username).  See the &#x60;require_email_format_usernames&#x60; parameter documented in [GET /server_settings](/api/get-server-settings) for details.  
     - parameter password: (query) The user&#39;s Zulip password (or LDAP password, if LDAP authentication is in use).  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fetchApiKey(username: String, password: String, completion: @escaping ((_ data: ApiKeyResponse?,_ error: Error?) -> Void)) {
        fetchApiKeyWithRequestBuilder(username: username, password: password).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Fetch an API key (production)
     - POST /fetch_api_key
     - This API endpoint is used by clients such as the Zulip mobile and terminal apps to implement password-based authentication.  Given the user's Zulip login credentials, it returns a Zulip API key that the client can use to make requests requests as the user.  This endpoint is only useful for Zulip servers/organizations with EmailAuthBackend or LDAPAuthBackend enabled.  The Zulip mobile apps also support SSO/social authentication (GitHub auth, Google auth, SAML, etc.) that does not use this endpoint.  Instead, the mobile apps reuse the web login flow passing the `mobile_flow_otp` in a webview, and the credentials are returned to the app (encrypted) via a redirect to a `zulip://` URL.  !!! warn \"\"     **Note:** If you signed up using passwordless authentication and     never had a password, you can [reset your password](/help/change-your-password).      See the [API keys](/api/api-keys) documentation for     more details on how to download API key manually.  In a [Zulip development environment](https://zulip.readthedocs.io/en/latest/development/overview.html), see also [the unauthenticated variant](/api/dev-fetch-api-key). 
     - parameter username: (query) The username to be used for authentication (typically, the email address, but depending on configuration, it could be an LDAP username).  See the &#x60;require_email_format_usernames&#x60; parameter documented in [GET /server_settings](/api/get-server-settings) for details.  
     - parameter password: (query) The user&#39;s Zulip password (or LDAP password, if LDAP authentication is in use).  
     - returns: RequestBuilder<ApiKeyResponse> 
     */
    open class func fetchApiKeyWithRequestBuilder(username: String, password: String) -> RequestBuilder<ApiKeyResponse> {
        let path = "/fetch_api_key"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "username": username.encodeToJSON(), 
            "password": password.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ApiKeyResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}

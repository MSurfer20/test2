/* tslint:disable */
/* eslint-disable */
/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserAllOf,
    UserAllOfFromJSON,
    UserAllOfFromJSONTyped,
    UserAllOfToJSON,
    UserBase,
    UserBaseFromJSON,
    UserBaseFromJSONTyped,
    UserBaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {any}
     * @memberof User
     */
    email?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    isBot?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    avatarUrl?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    avatarVersion?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    fullName?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    isAdmin?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    isOwner?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    isBillingAdmin?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    role?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    botType?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    userId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    botOwnerId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    isActive?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    isGuest?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    timezone?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    dateJoined?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    deliveryEmail?: any | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    profileData?: any | null;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'isBot': !exists(json, 'is_bot') ? undefined : json['is_bot'],
        'avatarUrl': !exists(json, 'avatar_url') ? undefined : json['avatar_url'],
        'avatarVersion': !exists(json, 'avatar_version') ? undefined : json['avatar_version'],
        'fullName': !exists(json, 'full_name') ? undefined : json['full_name'],
        'isAdmin': !exists(json, 'is_admin') ? undefined : json['is_admin'],
        'isOwner': !exists(json, 'is_owner') ? undefined : json['is_owner'],
        'isBillingAdmin': !exists(json, 'is_billing_admin') ? undefined : json['is_billing_admin'],
        'role': !exists(json, 'role') ? undefined : json['role'],
        'botType': !exists(json, 'bot_type') ? undefined : json['bot_type'],
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
        'botOwnerId': !exists(json, 'bot_owner_id') ? undefined : json['bot_owner_id'],
        'isActive': !exists(json, 'is_active') ? undefined : json['is_active'],
        'isGuest': !exists(json, 'is_guest') ? undefined : json['is_guest'],
        'timezone': !exists(json, 'timezone') ? undefined : json['timezone'],
        'dateJoined': !exists(json, 'date_joined') ? undefined : json['date_joined'],
        'deliveryEmail': !exists(json, 'delivery_email') ? undefined : json['delivery_email'],
        'profileData': !exists(json, 'profile_data') ? undefined : json['profile_data'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'is_bot': value.isBot,
        'avatar_url': value.avatarUrl,
        'avatar_version': value.avatarVersion,
        'full_name': value.fullName,
        'is_admin': value.isAdmin,
        'is_owner': value.isOwner,
        'is_billing_admin': value.isBillingAdmin,
        'role': value.role,
        'bot_type': value.botType,
        'user_id': value.userId,
        'bot_owner_id': value.botOwnerId,
        'is_active': value.isActive,
        'is_guest': value.isGuest,
        'timezone': value.timezone,
        'date_joined': value.dateJoined,
        'delivery_email': value.deliveryEmail,
        'profile_data': value.profileData,
    };
}



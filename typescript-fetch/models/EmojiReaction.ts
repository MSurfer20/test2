/* tslint:disable */
/* eslint-disable */
/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmojiReactionAllOf,
    EmojiReactionAllOfFromJSON,
    EmojiReactionAllOfFromJSONTyped,
    EmojiReactionAllOfToJSON,
    EmojiReactionBase,
    EmojiReactionBaseFromJSON,
    EmojiReactionBaseFromJSONTyped,
    EmojiReactionBaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface EmojiReaction
 */
export interface EmojiReaction {
    /**
     * 
     * @type {any}
     * @memberof EmojiReaction
     */
    emojiCode?: any | null;
    /**
     * 
     * @type {any}
     * @memberof EmojiReaction
     */
    emojiName?: any | null;
    /**
     * 
     * @type {any}
     * @memberof EmojiReaction
     */
    reactionType?: any | null;
    /**
     * 
     * @type {any}
     * @memberof EmojiReaction
     */
    userId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof EmojiReaction
     */
    user?: any | null;
}

export function EmojiReactionFromJSON(json: any): EmojiReaction {
    return EmojiReactionFromJSONTyped(json, false);
}

export function EmojiReactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmojiReaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emojiCode': !exists(json, 'emoji_code') ? undefined : json['emoji_code'],
        'emojiName': !exists(json, 'emoji_name') ? undefined : json['emoji_name'],
        'reactionType': !exists(json, 'reaction_type') ? undefined : json['reaction_type'],
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function EmojiReactionToJSON(value?: EmojiReaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emoji_code': value.emojiCode,
        'emoji_name': value.emojiName,
        'reaction_type': value.reactionType,
        'user_id': value.userId,
        'user': value.user,
    };
}



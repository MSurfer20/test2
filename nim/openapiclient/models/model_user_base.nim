#
# Zulip REST API
# 
# Powerful open source group chat 
# The version of the OpenAPI document: 1.0.0
# 
# Generated by: https://openapi-generator.tech
#

import json
import tables

import model_map
import model_object

type Role* {.pure.} = enum
  `100`
  `200`
  `300`
  `400`
  `600`

type UserBase* = object
  ## A dictionary containing basic data on a given Zulip user. 
  email*: string ## The Zulip API email address of the user or bot.  If you do not have permission to view the email address of the target user, this will be a fake email address that is usable for the Zulip API but nothing else. 
  isBot*: bool ## A boolean specifying whether the user is a bot or full account. 
  avatarUrl*: string ## URL for the user's avatar.  Will be `null` if the `client_gravatar` query parameter was set to `True` and the user's avatar is hosted by the Gravatar provider (i.e. the user has never uploaded an avatar).  **Changes**: In Zulip 3.0 (feature level 18), if the client has the `user_avatar_url_field_optional` capability, this will be missing at the server's sole discretion. 
  avatarVersion*: int ## Version for the user's avatar.  Used for cache-busting requests for the user's avatar.  Clients generally shouldn't need to use this; most avatar URLs sent by Zulip will already end with `?v={avatar_version}`. 
  fullName*: string ## Full name of the user or bot, used for all display purposes. 
  isAdmin*: bool ## A boolean specifying whether the user is an organization administrator. 
  isOwner*: bool ## A boolean specifying whether the user is an organization owner. If true, is_admin will also be true.  **Changes**: New in Zulip 3.0 (feature level 8). 
  isBillingAdmin*: bool ## A boolean specifying whether the user is a billing administrator.  **Changes**: New in Zulip 5.0 (feature level 73). 
  role*: Role ## [Organization-level role](/help/roles-and-permissions)) of the user. Poosible values are:  * Organization owner => 100 * Organization administrator => 200 * Organization moderator => 300 * Member => 400 * Guest => 600  **Changes**: New in Zulip 4.0 (feature level 59). 
  botType*: int ## An integer describing the type of bot: * `null` if the user isn't a bot. * `1` for a `Generic` bot. * `2` for an `Incoming webhook` bot. * `3` for an `Outgoing webhook` bot. * `4` for an `Embedded` bot. 
  userId*: int ## The unique ID of the user. 
  botOwnerId*: int ## If the user is a bot (i.e. `is_bot` is `True`), `bot_owner` is the user ID of the bot's owner (usually, whoever created the bot).  Will be null for legacy bots that do not have an owner.  **Changes**: New in Zulip 3.0 (feature level 1).  In previous versions, there was a `bot_owner` field containing the email address of the bot's owner. 
  isActive*: bool ## A boolean specifying whether the user account has been deactivated. 
  isGuest*: bool ## A boolean specifying whether the user is a guest user. 
  timezone*: string ## The time zone of the user. 
  dateJoined*: string ## The time the user account was created. 
  deliveryEmail*: string ## The user's real email address.  This field is present only if [email address visibility](/help/restrict-visibility-of-email-addresses) is limited and you are an administrator with access to real email addresses under the configured policy. 
  profileData*: Table[string, object] ## A dictionary containing custom profile field data for the user. Each entry maps the integer ID of a custom profile field in the organization to a dictionary containing the user's data for that field.  Generally the data includes just a single `value` key; for those custom profile fields supporting Markdown, a `rendered_value` key will also be present. 

func `%`*(v: Role): JsonNode =
  let str = case v:
    of Role.`100`: "100"
    of Role.`200`: "200"
    of Role.`300`: "300"
    of Role.`400`: "400"
    of Role.`600`: "600"

  JsonNode(kind: JString, str: str)

func `$`*(v: Role): string =
  result = case v:
    of Role.`100`: "100"
    of Role.`200`: "200"
    of Role.`300`: "300"
    of Role.`400`: "400"
    of Role.`600`: "600"

-module(openapi_subscriptions).

-export([encode/1]).

-export_type([openapi_subscriptions/0]).

-type openapi_subscriptions() ::
    #{ 'stream_id' => integer(),
       'name' => binary(),
       'description' => binary(),
       'rendered_description' => binary(),
       'date_created' => integer(),
       'invite_only' => boolean(),
       'subscribers' => list(),
       'desktop_notifications' => boolean(),
       'email_notifications' => boolean(),
       'wildcard_mentions_notify' => boolean(),
       'push_notifications' => boolean(),
       'audible_notifications' => boolean(),
       'pin_to_top' => boolean(),
       'email_address' => binary(),
       'is_muted' => boolean(),
       'in_home_view' => boolean(),
       'is_announcement_only' => boolean(),
       'is_web_public' => boolean(),
       'role' => integer(),
       'color' => binary(),
       'stream_post_policy' => integer(),
       'message_retention_days' => integer(),
       'history_public_to_subscribers' => boolean(),
       'first_message_id' => integer(),
       'stream_weekly_traffic' => integer()
     }.

encode(#{ 'stream_id' := StreamId,
          'name' := Name,
          'description' := Description,
          'rendered_description' := RenderedDescription,
          'date_created' := DateCreated,
          'invite_only' := InviteOnly,
          'subscribers' := Subscribers,
          'desktop_notifications' := DesktopNotifications,
          'email_notifications' := EmailNotifications,
          'wildcard_mentions_notify' := WildcardMentionsNotify,
          'push_notifications' := PushNotifications,
          'audible_notifications' := AudibleNotifications,
          'pin_to_top' := PinToTop,
          'email_address' := EmailAddress,
          'is_muted' := IsMuted,
          'in_home_view' := InHomeView,
          'is_announcement_only' := IsAnnouncementOnly,
          'is_web_public' := IsWebPublic,
          'role' := Role,
          'color' := Color,
          'stream_post_policy' := StreamPostPolicy,
          'message_retention_days' := MessageRetentionDays,
          'history_public_to_subscribers' := HistoryPublicToSubscribers,
          'first_message_id' := FirstMessageId,
          'stream_weekly_traffic' := StreamWeeklyTraffic
        }) ->
    #{ 'stream_id' => StreamId,
       'name' => Name,
       'description' => Description,
       'rendered_description' => RenderedDescription,
       'date_created' => DateCreated,
       'invite_only' => InviteOnly,
       'subscribers' => Subscribers,
       'desktop_notifications' => DesktopNotifications,
       'email_notifications' => EmailNotifications,
       'wildcard_mentions_notify' => WildcardMentionsNotify,
       'push_notifications' => PushNotifications,
       'audible_notifications' => AudibleNotifications,
       'pin_to_top' => PinToTop,
       'email_address' => EmailAddress,
       'is_muted' => IsMuted,
       'in_home_view' => InHomeView,
       'is_announcement_only' => IsAnnouncementOnly,
       'is_web_public' => IsWebPublic,
       'role' => Role,
       'color' => Color,
       'stream_post_policy' => StreamPostPolicy,
       'message_retention_days' => MessageRetentionDays,
       'history_public_to_subscribers' => HistoryPublicToSubscribers,
       'first_message_id' => FirstMessageId,
       'stream_weekly_traffic' => StreamWeeklyTraffic
     }.

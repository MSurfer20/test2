{-
   Zulip REST API

   Powerful open source group chat 

   OpenAPI Version: 3.0.1
   Zulip REST API API version: 1.0.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ZulipREST.API.Drafts
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ZulipREST.API.Drafts where

import ZulipREST.Core
import ZulipREST.MimeTypes
import ZulipREST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Drafts

-- *** createDrafts

-- | @POST \/drafts@
-- 
-- Create drafts
-- 
-- Create one or more drafts on the server. These drafts will be automatically synchronized to other clients via `drafts` events.  `POST {{ api_url }}/v1/drafts` 
-- 
createDrafts 
  :: ZulipRESTRequest CreateDrafts MimeNoContent JsonSuccess MimeJSON
createDrafts =
  _mkRequest "POST" ["/drafts"]

data CreateDrafts  

-- | /Optional Param/ "drafts" - A JSON-encoded list of containing new draft objects. 
instance HasOptionalParam CreateDrafts Drafts where
  applyOptionalParam req (Drafts xs) =
    req `addQuery` toQueryColl MultiParamArray ("drafts", Just xs)
-- | @application/json@
instance Produces CreateDrafts MimeJSON


-- *** deleteDraft

-- | @DELETE \/drafts\/{draft_id}@
-- 
-- Delete a draft
-- 
-- Delete a single draft from the server. The deletion will be automatically synchronized to other clients via a `drafts` event.  `DELETE {{ api_url }}/v1/drafts/{draft_id}` 
-- 
deleteDraft 
  :: DraftId -- ^ "draftId" -  The ID of the draft you want to delete. 
  -> ZulipRESTRequest DeleteDraft MimeNoContent JsonSuccess MimeJSON
deleteDraft (DraftId draftId) =
  _mkRequest "DELETE" ["/drafts/",toPath draftId]

data DeleteDraft  
-- | @application/json@
instance Produces DeleteDraft MimeJSON


-- *** editDraft

-- | @PATCH \/drafts\/{draft_id}@
-- 
-- Edit a draft
-- 
-- Edit a draft on the server. The edit will be automatically synchronized to other clients via `drafts` events.  `PATCH {{ api_url }}/v1/drafts/{draft_id}` 
-- 
editDraft 
  :: DraftId -- ^ "draftId" -  The ID of the draft to be edited. 
  -> Draft2 -- ^ "draft" -  A JSON-encoded object containing a replacement draft object for this ID. 
  -> ZulipRESTRequest EditDraft MimeNoContent JsonSuccess MimeJSON
editDraft (DraftId draftId) (Draft2 draft) =
  _mkRequest "PATCH" ["/drafts/",toPath draftId]
    `addQuery` toQuery ("draft", Just draft)

data EditDraft  
-- | @application/json@
instance Produces EditDraft MimeJSON


-- *** getDrafts

-- | @GET \/drafts@
-- 
-- Get drafts
-- 
-- Fetch all drafts for the current user.  `GET {{ api_url }}/v1/drafts` 
-- 
getDrafts 
  :: ZulipRESTRequest GetDrafts MimeNoContent JsonSuccess MimeJSON
getDrafts =
  _mkRequest "GET" ["/drafts"]

data GetDrafts  
-- | @application/json@
instance Produces GetDrafts MimeJSON


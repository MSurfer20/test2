{-
   Zulip REST API

   Powerful open source group chat 

   OpenAPI Version: 3.0.1
   Zulip REST API API version: 1.0.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ZulipREST.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ZulipREST.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import ZulipREST.Model
import ZulipREST.Core


-- * AddSubscriptionsResponse

-- | 'addSubscriptionsResponseResult' Lens
addSubscriptionsResponseResultL :: Lens_' AddSubscriptionsResponse (AnyType)
addSubscriptionsResponseResultL f AddSubscriptionsResponse{..} = (\addSubscriptionsResponseResult -> AddSubscriptionsResponse { addSubscriptionsResponseResult, ..} ) <$> f addSubscriptionsResponseResult
{-# INLINE addSubscriptionsResponseResultL #-}

-- | 'addSubscriptionsResponseMsg' Lens
addSubscriptionsResponseMsgL :: Lens_' AddSubscriptionsResponse (AnyType)
addSubscriptionsResponseMsgL f AddSubscriptionsResponse{..} = (\addSubscriptionsResponseMsg -> AddSubscriptionsResponse { addSubscriptionsResponseMsg, ..} ) <$> f addSubscriptionsResponseMsg
{-# INLINE addSubscriptionsResponseMsgL #-}

-- | 'addSubscriptionsResponseSubscribed' Lens
addSubscriptionsResponseSubscribedL :: Lens_' AddSubscriptionsResponse (Maybe (Map.Map String [Text]))
addSubscriptionsResponseSubscribedL f AddSubscriptionsResponse{..} = (\addSubscriptionsResponseSubscribed -> AddSubscriptionsResponse { addSubscriptionsResponseSubscribed, ..} ) <$> f addSubscriptionsResponseSubscribed
{-# INLINE addSubscriptionsResponseSubscribedL #-}

-- | 'addSubscriptionsResponseAlreadySubscribed' Lens
addSubscriptionsResponseAlreadySubscribedL :: Lens_' AddSubscriptionsResponse (Maybe (Map.Map String [Text]))
addSubscriptionsResponseAlreadySubscribedL f AddSubscriptionsResponse{..} = (\addSubscriptionsResponseAlreadySubscribed -> AddSubscriptionsResponse { addSubscriptionsResponseAlreadySubscribed, ..} ) <$> f addSubscriptionsResponseAlreadySubscribed
{-# INLINE addSubscriptionsResponseAlreadySubscribedL #-}

-- | 'addSubscriptionsResponseUnauthorized' Lens
addSubscriptionsResponseUnauthorizedL :: Lens_' AddSubscriptionsResponse (Maybe [Text])
addSubscriptionsResponseUnauthorizedL f AddSubscriptionsResponse{..} = (\addSubscriptionsResponseUnauthorized -> AddSubscriptionsResponse { addSubscriptionsResponseUnauthorized, ..} ) <$> f addSubscriptionsResponseUnauthorized
{-# INLINE addSubscriptionsResponseUnauthorizedL #-}



-- * AddSubscriptionsResponseAllOf

-- | 'addSubscriptionsResponseAllOfResult' Lens
addSubscriptionsResponseAllOfResultL :: Lens_' AddSubscriptionsResponseAllOf (Maybe AnyType)
addSubscriptionsResponseAllOfResultL f AddSubscriptionsResponseAllOf{..} = (\addSubscriptionsResponseAllOfResult -> AddSubscriptionsResponseAllOf { addSubscriptionsResponseAllOfResult, ..} ) <$> f addSubscriptionsResponseAllOfResult
{-# INLINE addSubscriptionsResponseAllOfResultL #-}

-- | 'addSubscriptionsResponseAllOfMsg' Lens
addSubscriptionsResponseAllOfMsgL :: Lens_' AddSubscriptionsResponseAllOf (Maybe AnyType)
addSubscriptionsResponseAllOfMsgL f AddSubscriptionsResponseAllOf{..} = (\addSubscriptionsResponseAllOfMsg -> AddSubscriptionsResponseAllOf { addSubscriptionsResponseAllOfMsg, ..} ) <$> f addSubscriptionsResponseAllOfMsg
{-# INLINE addSubscriptionsResponseAllOfMsgL #-}

-- | 'addSubscriptionsResponseAllOfSubscribed' Lens
addSubscriptionsResponseAllOfSubscribedL :: Lens_' AddSubscriptionsResponseAllOf (Maybe (Map.Map String [Text]))
addSubscriptionsResponseAllOfSubscribedL f AddSubscriptionsResponseAllOf{..} = (\addSubscriptionsResponseAllOfSubscribed -> AddSubscriptionsResponseAllOf { addSubscriptionsResponseAllOfSubscribed, ..} ) <$> f addSubscriptionsResponseAllOfSubscribed
{-# INLINE addSubscriptionsResponseAllOfSubscribedL #-}

-- | 'addSubscriptionsResponseAllOfAlreadySubscribed' Lens
addSubscriptionsResponseAllOfAlreadySubscribedL :: Lens_' AddSubscriptionsResponseAllOf (Maybe (Map.Map String [Text]))
addSubscriptionsResponseAllOfAlreadySubscribedL f AddSubscriptionsResponseAllOf{..} = (\addSubscriptionsResponseAllOfAlreadySubscribed -> AddSubscriptionsResponseAllOf { addSubscriptionsResponseAllOfAlreadySubscribed, ..} ) <$> f addSubscriptionsResponseAllOfAlreadySubscribed
{-# INLINE addSubscriptionsResponseAllOfAlreadySubscribedL #-}

-- | 'addSubscriptionsResponseAllOfUnauthorized' Lens
addSubscriptionsResponseAllOfUnauthorizedL :: Lens_' AddSubscriptionsResponseAllOf (Maybe [Text])
addSubscriptionsResponseAllOfUnauthorizedL f AddSubscriptionsResponseAllOf{..} = (\addSubscriptionsResponseAllOfUnauthorized -> AddSubscriptionsResponseAllOf { addSubscriptionsResponseAllOfUnauthorized, ..} ) <$> f addSubscriptionsResponseAllOfUnauthorized
{-# INLINE addSubscriptionsResponseAllOfUnauthorizedL #-}



-- * ApiKeyResponse

-- | 'apiKeyResponseResult' Lens
apiKeyResponseResultL :: Lens_' ApiKeyResponse (AnyType)
apiKeyResponseResultL f ApiKeyResponse{..} = (\apiKeyResponseResult -> ApiKeyResponse { apiKeyResponseResult, ..} ) <$> f apiKeyResponseResult
{-# INLINE apiKeyResponseResultL #-}

-- | 'apiKeyResponseMsg' Lens
apiKeyResponseMsgL :: Lens_' ApiKeyResponse (AnyType)
apiKeyResponseMsgL f ApiKeyResponse{..} = (\apiKeyResponseMsg -> ApiKeyResponse { apiKeyResponseMsg, ..} ) <$> f apiKeyResponseMsg
{-# INLINE apiKeyResponseMsgL #-}

-- | 'apiKeyResponseApiKey' Lens
apiKeyResponseApiKeyL :: Lens_' ApiKeyResponse (Text)
apiKeyResponseApiKeyL f ApiKeyResponse{..} = (\apiKeyResponseApiKey -> ApiKeyResponse { apiKeyResponseApiKey, ..} ) <$> f apiKeyResponseApiKey
{-# INLINE apiKeyResponseApiKeyL #-}

-- | 'apiKeyResponseEmail' Lens
apiKeyResponseEmailL :: Lens_' ApiKeyResponse (Text)
apiKeyResponseEmailL f ApiKeyResponse{..} = (\apiKeyResponseEmail -> ApiKeyResponse { apiKeyResponseEmail, ..} ) <$> f apiKeyResponseEmail
{-# INLINE apiKeyResponseEmailL #-}



-- * ApiKeyResponseAllOf

-- | 'apiKeyResponseAllOfResult' Lens
apiKeyResponseAllOfResultL :: Lens_' ApiKeyResponseAllOf (Maybe AnyType)
apiKeyResponseAllOfResultL f ApiKeyResponseAllOf{..} = (\apiKeyResponseAllOfResult -> ApiKeyResponseAllOf { apiKeyResponseAllOfResult, ..} ) <$> f apiKeyResponseAllOfResult
{-# INLINE apiKeyResponseAllOfResultL #-}

-- | 'apiKeyResponseAllOfMsg' Lens
apiKeyResponseAllOfMsgL :: Lens_' ApiKeyResponseAllOf (Maybe AnyType)
apiKeyResponseAllOfMsgL f ApiKeyResponseAllOf{..} = (\apiKeyResponseAllOfMsg -> ApiKeyResponseAllOf { apiKeyResponseAllOfMsg, ..} ) <$> f apiKeyResponseAllOfMsg
{-# INLINE apiKeyResponseAllOfMsgL #-}

-- | 'apiKeyResponseAllOfApiKey' Lens
apiKeyResponseAllOfApiKeyL :: Lens_' ApiKeyResponseAllOf (Text)
apiKeyResponseAllOfApiKeyL f ApiKeyResponseAllOf{..} = (\apiKeyResponseAllOfApiKey -> ApiKeyResponseAllOf { apiKeyResponseAllOfApiKey, ..} ) <$> f apiKeyResponseAllOfApiKey
{-# INLINE apiKeyResponseAllOfApiKeyL #-}

-- | 'apiKeyResponseAllOfEmail' Lens
apiKeyResponseAllOfEmailL :: Lens_' ApiKeyResponseAllOf (Text)
apiKeyResponseAllOfEmailL f ApiKeyResponseAllOf{..} = (\apiKeyResponseAllOfEmail -> ApiKeyResponseAllOf { apiKeyResponseAllOfEmail, ..} ) <$> f apiKeyResponseAllOfEmail
{-# INLINE apiKeyResponseAllOfEmailL #-}



-- * Attachments

-- | 'attachmentsId' Lens
attachmentsIdL :: Lens_' Attachments (Maybe Int)
attachmentsIdL f Attachments{..} = (\attachmentsId -> Attachments { attachmentsId, ..} ) <$> f attachmentsId
{-# INLINE attachmentsIdL #-}

-- | 'attachmentsName' Lens
attachmentsNameL :: Lens_' Attachments (Maybe Text)
attachmentsNameL f Attachments{..} = (\attachmentsName -> Attachments { attachmentsName, ..} ) <$> f attachmentsName
{-# INLINE attachmentsNameL #-}

-- | 'attachmentsPathId' Lens
attachmentsPathIdL :: Lens_' Attachments (Maybe Text)
attachmentsPathIdL f Attachments{..} = (\attachmentsPathId -> Attachments { attachmentsPathId, ..} ) <$> f attachmentsPathId
{-# INLINE attachmentsPathIdL #-}

-- | 'attachmentsSize' Lens
attachmentsSizeL :: Lens_' Attachments (Maybe Int)
attachmentsSizeL f Attachments{..} = (\attachmentsSize -> Attachments { attachmentsSize, ..} ) <$> f attachmentsSize
{-# INLINE attachmentsSizeL #-}

-- | 'attachmentsCreateTime' Lens
attachmentsCreateTimeL :: Lens_' Attachments (Maybe Int)
attachmentsCreateTimeL f Attachments{..} = (\attachmentsCreateTime -> Attachments { attachmentsCreateTime, ..} ) <$> f attachmentsCreateTime
{-# INLINE attachmentsCreateTimeL #-}

-- | 'attachmentsMessages' Lens
attachmentsMessagesL :: Lens_' Attachments (Maybe [AttachmentsMessages])
attachmentsMessagesL f Attachments{..} = (\attachmentsMessages -> Attachments { attachmentsMessages, ..} ) <$> f attachmentsMessages
{-# INLINE attachmentsMessagesL #-}



-- * AttachmentsMessages

-- | 'attachmentsMessagesDateSent' Lens
attachmentsMessagesDateSentL :: Lens_' AttachmentsMessages (Maybe Int)
attachmentsMessagesDateSentL f AttachmentsMessages{..} = (\attachmentsMessagesDateSent -> AttachmentsMessages { attachmentsMessagesDateSent, ..} ) <$> f attachmentsMessagesDateSent
{-# INLINE attachmentsMessagesDateSentL #-}

-- | 'attachmentsMessagesId' Lens
attachmentsMessagesIdL :: Lens_' AttachmentsMessages (Maybe Int)
attachmentsMessagesIdL f AttachmentsMessages{..} = (\attachmentsMessagesId -> AttachmentsMessages { attachmentsMessagesId, ..} ) <$> f attachmentsMessagesId
{-# INLINE attachmentsMessagesIdL #-}



-- * BadEventQueueIdError

-- | 'badEventQueueIdErrorResult' Lens
badEventQueueIdErrorResultL :: Lens_' BadEventQueueIdError (AnyType)
badEventQueueIdErrorResultL f BadEventQueueIdError{..} = (\badEventQueueIdErrorResult -> BadEventQueueIdError { badEventQueueIdErrorResult, ..} ) <$> f badEventQueueIdErrorResult
{-# INLINE badEventQueueIdErrorResultL #-}

-- | 'badEventQueueIdErrorMsg' Lens
badEventQueueIdErrorMsgL :: Lens_' BadEventQueueIdError (AnyType)
badEventQueueIdErrorMsgL f BadEventQueueIdError{..} = (\badEventQueueIdErrorMsg -> BadEventQueueIdError { badEventQueueIdErrorMsg, ..} ) <$> f badEventQueueIdErrorMsg
{-# INLINE badEventQueueIdErrorMsgL #-}

-- | 'badEventQueueIdErrorCode' Lens
badEventQueueIdErrorCodeL :: Lens_' BadEventQueueIdError (Maybe AnyType)
badEventQueueIdErrorCodeL f BadEventQueueIdError{..} = (\badEventQueueIdErrorCode -> BadEventQueueIdError { badEventQueueIdErrorCode, ..} ) <$> f badEventQueueIdErrorCode
{-# INLINE badEventQueueIdErrorCodeL #-}

-- | 'badEventQueueIdErrorQueueId' Lens
badEventQueueIdErrorQueueIdL :: Lens_' BadEventQueueIdError (Maybe Text)
badEventQueueIdErrorQueueIdL f BadEventQueueIdError{..} = (\badEventQueueIdErrorQueueId -> BadEventQueueIdError { badEventQueueIdErrorQueueId, ..} ) <$> f badEventQueueIdErrorQueueId
{-# INLINE badEventQueueIdErrorQueueIdL #-}



-- * BadEventQueueIdErrorAllOf

-- | 'badEventQueueIdErrorAllOfResult' Lens
badEventQueueIdErrorAllOfResultL :: Lens_' BadEventQueueIdErrorAllOf (Maybe AnyType)
badEventQueueIdErrorAllOfResultL f BadEventQueueIdErrorAllOf{..} = (\badEventQueueIdErrorAllOfResult -> BadEventQueueIdErrorAllOf { badEventQueueIdErrorAllOfResult, ..} ) <$> f badEventQueueIdErrorAllOfResult
{-# INLINE badEventQueueIdErrorAllOfResultL #-}

-- | 'badEventQueueIdErrorAllOfMsg' Lens
badEventQueueIdErrorAllOfMsgL :: Lens_' BadEventQueueIdErrorAllOf (Maybe AnyType)
badEventQueueIdErrorAllOfMsgL f BadEventQueueIdErrorAllOf{..} = (\badEventQueueIdErrorAllOfMsg -> BadEventQueueIdErrorAllOf { badEventQueueIdErrorAllOfMsg, ..} ) <$> f badEventQueueIdErrorAllOfMsg
{-# INLINE badEventQueueIdErrorAllOfMsgL #-}

-- | 'badEventQueueIdErrorAllOfCode' Lens
badEventQueueIdErrorAllOfCodeL :: Lens_' BadEventQueueIdErrorAllOf (Maybe AnyType)
badEventQueueIdErrorAllOfCodeL f BadEventQueueIdErrorAllOf{..} = (\badEventQueueIdErrorAllOfCode -> BadEventQueueIdErrorAllOf { badEventQueueIdErrorAllOfCode, ..} ) <$> f badEventQueueIdErrorAllOfCode
{-# INLINE badEventQueueIdErrorAllOfCodeL #-}

-- | 'badEventQueueIdErrorAllOfQueueId' Lens
badEventQueueIdErrorAllOfQueueIdL :: Lens_' BadEventQueueIdErrorAllOf (Maybe Text)
badEventQueueIdErrorAllOfQueueIdL f BadEventQueueIdErrorAllOf{..} = (\badEventQueueIdErrorAllOfQueueId -> BadEventQueueIdErrorAllOf { badEventQueueIdErrorAllOfQueueId, ..} ) <$> f badEventQueueIdErrorAllOfQueueId
{-# INLINE badEventQueueIdErrorAllOfQueueIdL #-}



-- * BasicBot

-- | 'basicBotUserId' Lens
basicBotUserIdL :: Lens_' BasicBot (Maybe AnyType)
basicBotUserIdL f BasicBot{..} = (\basicBotUserId -> BasicBot { basicBotUserId, ..} ) <$> f basicBotUserId
{-# INLINE basicBotUserIdL #-}

-- | 'basicBotFullName' Lens
basicBotFullNameL :: Lens_' BasicBot (Maybe AnyType)
basicBotFullNameL f BasicBot{..} = (\basicBotFullName -> BasicBot { basicBotFullName, ..} ) <$> f basicBotFullName
{-# INLINE basicBotFullNameL #-}

-- | 'basicBotApiKey' Lens
basicBotApiKeyL :: Lens_' BasicBot (Maybe AnyType)
basicBotApiKeyL f BasicBot{..} = (\basicBotApiKey -> BasicBot { basicBotApiKey, ..} ) <$> f basicBotApiKey
{-# INLINE basicBotApiKeyL #-}

-- | 'basicBotDefaultSendingStream' Lens
basicBotDefaultSendingStreamL :: Lens_' BasicBot (Maybe AnyType)
basicBotDefaultSendingStreamL f BasicBot{..} = (\basicBotDefaultSendingStream -> BasicBot { basicBotDefaultSendingStream, ..} ) <$> f basicBotDefaultSendingStream
{-# INLINE basicBotDefaultSendingStreamL #-}

-- | 'basicBotDefaultEventsRegisterStream' Lens
basicBotDefaultEventsRegisterStreamL :: Lens_' BasicBot (Maybe AnyType)
basicBotDefaultEventsRegisterStreamL f BasicBot{..} = (\basicBotDefaultEventsRegisterStream -> BasicBot { basicBotDefaultEventsRegisterStream, ..} ) <$> f basicBotDefaultEventsRegisterStream
{-# INLINE basicBotDefaultEventsRegisterStreamL #-}

-- | 'basicBotDefaultAllPublicStreams' Lens
basicBotDefaultAllPublicStreamsL :: Lens_' BasicBot (Maybe AnyType)
basicBotDefaultAllPublicStreamsL f BasicBot{..} = (\basicBotDefaultAllPublicStreams -> BasicBot { basicBotDefaultAllPublicStreams, ..} ) <$> f basicBotDefaultAllPublicStreams
{-# INLINE basicBotDefaultAllPublicStreamsL #-}

-- | 'basicBotAvatarUrl' Lens
basicBotAvatarUrlL :: Lens_' BasicBot (Maybe AnyType)
basicBotAvatarUrlL f BasicBot{..} = (\basicBotAvatarUrl -> BasicBot { basicBotAvatarUrl, ..} ) <$> f basicBotAvatarUrl
{-# INLINE basicBotAvatarUrlL #-}

-- | 'basicBotOwnerId' Lens
basicBotOwnerIdL :: Lens_' BasicBot (Maybe AnyType)
basicBotOwnerIdL f BasicBot{..} = (\basicBotOwnerId -> BasicBot { basicBotOwnerId, ..} ) <$> f basicBotOwnerId
{-# INLINE basicBotOwnerIdL #-}

-- | 'basicBotServices' Lens
basicBotServicesL :: Lens_' BasicBot (Maybe AnyType)
basicBotServicesL f BasicBot{..} = (\basicBotServices -> BasicBot { basicBotServices, ..} ) <$> f basicBotServices
{-# INLINE basicBotServicesL #-}



-- * BasicBotAllOf

-- | 'basicBotAllOfUserId' Lens
basicBotAllOfUserIdL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfUserIdL f BasicBotAllOf{..} = (\basicBotAllOfUserId -> BasicBotAllOf { basicBotAllOfUserId, ..} ) <$> f basicBotAllOfUserId
{-# INLINE basicBotAllOfUserIdL #-}

-- | 'basicBotAllOfFullName' Lens
basicBotAllOfFullNameL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfFullNameL f BasicBotAllOf{..} = (\basicBotAllOfFullName -> BasicBotAllOf { basicBotAllOfFullName, ..} ) <$> f basicBotAllOfFullName
{-# INLINE basicBotAllOfFullNameL #-}

-- | 'basicBotAllOfApiKey' Lens
basicBotAllOfApiKeyL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfApiKeyL f BasicBotAllOf{..} = (\basicBotAllOfApiKey -> BasicBotAllOf { basicBotAllOfApiKey, ..} ) <$> f basicBotAllOfApiKey
{-# INLINE basicBotAllOfApiKeyL #-}

-- | 'basicBotAllOfDefaultSendingStream' Lens
basicBotAllOfDefaultSendingStreamL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfDefaultSendingStreamL f BasicBotAllOf{..} = (\basicBotAllOfDefaultSendingStream -> BasicBotAllOf { basicBotAllOfDefaultSendingStream, ..} ) <$> f basicBotAllOfDefaultSendingStream
{-# INLINE basicBotAllOfDefaultSendingStreamL #-}

-- | 'basicBotAllOfDefaultEventsRegisterStream' Lens
basicBotAllOfDefaultEventsRegisterStreamL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfDefaultEventsRegisterStreamL f BasicBotAllOf{..} = (\basicBotAllOfDefaultEventsRegisterStream -> BasicBotAllOf { basicBotAllOfDefaultEventsRegisterStream, ..} ) <$> f basicBotAllOfDefaultEventsRegisterStream
{-# INLINE basicBotAllOfDefaultEventsRegisterStreamL #-}

-- | 'basicBotAllOfDefaultAllPublicStreams' Lens
basicBotAllOfDefaultAllPublicStreamsL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfDefaultAllPublicStreamsL f BasicBotAllOf{..} = (\basicBotAllOfDefaultAllPublicStreams -> BasicBotAllOf { basicBotAllOfDefaultAllPublicStreams, ..} ) <$> f basicBotAllOfDefaultAllPublicStreams
{-# INLINE basicBotAllOfDefaultAllPublicStreamsL #-}

-- | 'basicBotAllOfAvatarUrl' Lens
basicBotAllOfAvatarUrlL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfAvatarUrlL f BasicBotAllOf{..} = (\basicBotAllOfAvatarUrl -> BasicBotAllOf { basicBotAllOfAvatarUrl, ..} ) <$> f basicBotAllOfAvatarUrl
{-# INLINE basicBotAllOfAvatarUrlL #-}

-- | 'basicBotAllOfOwnerId' Lens
basicBotAllOfOwnerIdL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfOwnerIdL f BasicBotAllOf{..} = (\basicBotAllOfOwnerId -> BasicBotAllOf { basicBotAllOfOwnerId, ..} ) <$> f basicBotAllOfOwnerId
{-# INLINE basicBotAllOfOwnerIdL #-}

-- | 'basicBotAllOfServices' Lens
basicBotAllOfServicesL :: Lens_' BasicBotAllOf (Maybe AnyType)
basicBotAllOfServicesL f BasicBotAllOf{..} = (\basicBotAllOfServices -> BasicBotAllOf { basicBotAllOfServices, ..} ) <$> f basicBotAllOfServices
{-# INLINE basicBotAllOfServicesL #-}



-- * BasicBotBase

-- | 'basicBotBaseUserId' Lens
basicBotBaseUserIdL :: Lens_' BasicBotBase (Maybe Int)
basicBotBaseUserIdL f BasicBotBase{..} = (\basicBotBaseUserId -> BasicBotBase { basicBotBaseUserId, ..} ) <$> f basicBotBaseUserId
{-# INLINE basicBotBaseUserIdL #-}

-- | 'basicBotBaseFullName' Lens
basicBotBaseFullNameL :: Lens_' BasicBotBase (Maybe Text)
basicBotBaseFullNameL f BasicBotBase{..} = (\basicBotBaseFullName -> BasicBotBase { basicBotBaseFullName, ..} ) <$> f basicBotBaseFullName
{-# INLINE basicBotBaseFullNameL #-}

-- | 'basicBotBaseApiKey' Lens
basicBotBaseApiKeyL :: Lens_' BasicBotBase (Maybe Text)
basicBotBaseApiKeyL f BasicBotBase{..} = (\basicBotBaseApiKey -> BasicBotBase { basicBotBaseApiKey, ..} ) <$> f basicBotBaseApiKey
{-# INLINE basicBotBaseApiKeyL #-}

-- | 'basicBotBaseDefaultSendingStream' Lens
basicBotBaseDefaultSendingStreamL :: Lens_' BasicBotBase (Maybe Text)
basicBotBaseDefaultSendingStreamL f BasicBotBase{..} = (\basicBotBaseDefaultSendingStream -> BasicBotBase { basicBotBaseDefaultSendingStream, ..} ) <$> f basicBotBaseDefaultSendingStream
{-# INLINE basicBotBaseDefaultSendingStreamL #-}

-- | 'basicBotBaseDefaultEventsRegisterStream' Lens
basicBotBaseDefaultEventsRegisterStreamL :: Lens_' BasicBotBase (Maybe Text)
basicBotBaseDefaultEventsRegisterStreamL f BasicBotBase{..} = (\basicBotBaseDefaultEventsRegisterStream -> BasicBotBase { basicBotBaseDefaultEventsRegisterStream, ..} ) <$> f basicBotBaseDefaultEventsRegisterStream
{-# INLINE basicBotBaseDefaultEventsRegisterStreamL #-}

-- | 'basicBotBaseDefaultAllPublicStreams' Lens
basicBotBaseDefaultAllPublicStreamsL :: Lens_' BasicBotBase (Maybe Bool)
basicBotBaseDefaultAllPublicStreamsL f BasicBotBase{..} = (\basicBotBaseDefaultAllPublicStreams -> BasicBotBase { basicBotBaseDefaultAllPublicStreams, ..} ) <$> f basicBotBaseDefaultAllPublicStreams
{-# INLINE basicBotBaseDefaultAllPublicStreamsL #-}

-- | 'basicBotBaseAvatarUrl' Lens
basicBotBaseAvatarUrlL :: Lens_' BasicBotBase (Maybe Text)
basicBotBaseAvatarUrlL f BasicBotBase{..} = (\basicBotBaseAvatarUrl -> BasicBotBase { basicBotBaseAvatarUrl, ..} ) <$> f basicBotBaseAvatarUrl
{-# INLINE basicBotBaseAvatarUrlL #-}

-- | 'basicBotBaseOwnerId' Lens
basicBotBaseOwnerIdL :: Lens_' BasicBotBase (Maybe Int)
basicBotBaseOwnerIdL f BasicBotBase{..} = (\basicBotBaseOwnerId -> BasicBotBase { basicBotBaseOwnerId, ..} ) <$> f basicBotBaseOwnerId
{-# INLINE basicBotBaseOwnerIdL #-}

-- | 'basicBotBaseServices' Lens
basicBotBaseServicesL :: Lens_' BasicBotBase (Maybe [OneOfobjectobject])
basicBotBaseServicesL f BasicBotBase{..} = (\basicBotBaseServices -> BasicBotBase { basicBotBaseServices, ..} ) <$> f basicBotBaseServices
{-# INLINE basicBotBaseServicesL #-}



-- * BasicStream

-- | 'basicStreamStreamId' Lens
basicStreamStreamIdL :: Lens_' BasicStream (Maybe AnyType)
basicStreamStreamIdL f BasicStream{..} = (\basicStreamStreamId -> BasicStream { basicStreamStreamId, ..} ) <$> f basicStreamStreamId
{-# INLINE basicStreamStreamIdL #-}

-- | 'basicStreamName' Lens
basicStreamNameL :: Lens_' BasicStream (Maybe AnyType)
basicStreamNameL f BasicStream{..} = (\basicStreamName -> BasicStream { basicStreamName, ..} ) <$> f basicStreamName
{-# INLINE basicStreamNameL #-}

-- | 'basicStreamDescription' Lens
basicStreamDescriptionL :: Lens_' BasicStream (Maybe AnyType)
basicStreamDescriptionL f BasicStream{..} = (\basicStreamDescription -> BasicStream { basicStreamDescription, ..} ) <$> f basicStreamDescription
{-# INLINE basicStreamDescriptionL #-}

-- | 'basicStreamDateCreated' Lens
basicStreamDateCreatedL :: Lens_' BasicStream (Maybe AnyType)
basicStreamDateCreatedL f BasicStream{..} = (\basicStreamDateCreated -> BasicStream { basicStreamDateCreated, ..} ) <$> f basicStreamDateCreated
{-# INLINE basicStreamDateCreatedL #-}

-- | 'basicStreamInviteOnly' Lens
basicStreamInviteOnlyL :: Lens_' BasicStream (Maybe AnyType)
basicStreamInviteOnlyL f BasicStream{..} = (\basicStreamInviteOnly -> BasicStream { basicStreamInviteOnly, ..} ) <$> f basicStreamInviteOnly
{-# INLINE basicStreamInviteOnlyL #-}

-- | 'basicStreamRenderedDescription' Lens
basicStreamRenderedDescriptionL :: Lens_' BasicStream (Maybe AnyType)
basicStreamRenderedDescriptionL f BasicStream{..} = (\basicStreamRenderedDescription -> BasicStream { basicStreamRenderedDescription, ..} ) <$> f basicStreamRenderedDescription
{-# INLINE basicStreamRenderedDescriptionL #-}

-- | 'basicStreamIsWebPublic' Lens
basicStreamIsWebPublicL :: Lens_' BasicStream (Maybe AnyType)
basicStreamIsWebPublicL f BasicStream{..} = (\basicStreamIsWebPublic -> BasicStream { basicStreamIsWebPublic, ..} ) <$> f basicStreamIsWebPublic
{-# INLINE basicStreamIsWebPublicL #-}

-- | 'basicStreamStreamPostPolicy' Lens
basicStreamStreamPostPolicyL :: Lens_' BasicStream (Maybe AnyType)
basicStreamStreamPostPolicyL f BasicStream{..} = (\basicStreamStreamPostPolicy -> BasicStream { basicStreamStreamPostPolicy, ..} ) <$> f basicStreamStreamPostPolicy
{-# INLINE basicStreamStreamPostPolicyL #-}

-- | 'basicStreamMessageRetentionDays' Lens
basicStreamMessageRetentionDaysL :: Lens_' BasicStream (Maybe AnyType)
basicStreamMessageRetentionDaysL f BasicStream{..} = (\basicStreamMessageRetentionDays -> BasicStream { basicStreamMessageRetentionDays, ..} ) <$> f basicStreamMessageRetentionDays
{-# INLINE basicStreamMessageRetentionDaysL #-}

-- | 'basicStreamHistoryPublicToSubscribers' Lens
basicStreamHistoryPublicToSubscribersL :: Lens_' BasicStream (Maybe AnyType)
basicStreamHistoryPublicToSubscribersL f BasicStream{..} = (\basicStreamHistoryPublicToSubscribers -> BasicStream { basicStreamHistoryPublicToSubscribers, ..} ) <$> f basicStreamHistoryPublicToSubscribers
{-# INLINE basicStreamHistoryPublicToSubscribersL #-}

-- | 'basicStreamFirstMessageId' Lens
basicStreamFirstMessageIdL :: Lens_' BasicStream (Maybe AnyType)
basicStreamFirstMessageIdL f BasicStream{..} = (\basicStreamFirstMessageId -> BasicStream { basicStreamFirstMessageId, ..} ) <$> f basicStreamFirstMessageId
{-# INLINE basicStreamFirstMessageIdL #-}

-- | 'basicStreamIsAnnouncementOnly' Lens
basicStreamIsAnnouncementOnlyL :: Lens_' BasicStream (Maybe AnyType)
basicStreamIsAnnouncementOnlyL f BasicStream{..} = (\basicStreamIsAnnouncementOnly -> BasicStream { basicStreamIsAnnouncementOnly, ..} ) <$> f basicStreamIsAnnouncementOnly
{-# INLINE basicStreamIsAnnouncementOnlyL #-}



-- * BasicStreamAllOf

-- | 'basicStreamAllOfStreamId' Lens
basicStreamAllOfStreamIdL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfStreamIdL f BasicStreamAllOf{..} = (\basicStreamAllOfStreamId -> BasicStreamAllOf { basicStreamAllOfStreamId, ..} ) <$> f basicStreamAllOfStreamId
{-# INLINE basicStreamAllOfStreamIdL #-}

-- | 'basicStreamAllOfName' Lens
basicStreamAllOfNameL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfNameL f BasicStreamAllOf{..} = (\basicStreamAllOfName -> BasicStreamAllOf { basicStreamAllOfName, ..} ) <$> f basicStreamAllOfName
{-# INLINE basicStreamAllOfNameL #-}

-- | 'basicStreamAllOfDescription' Lens
basicStreamAllOfDescriptionL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfDescriptionL f BasicStreamAllOf{..} = (\basicStreamAllOfDescription -> BasicStreamAllOf { basicStreamAllOfDescription, ..} ) <$> f basicStreamAllOfDescription
{-# INLINE basicStreamAllOfDescriptionL #-}

-- | 'basicStreamAllOfDateCreated' Lens
basicStreamAllOfDateCreatedL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfDateCreatedL f BasicStreamAllOf{..} = (\basicStreamAllOfDateCreated -> BasicStreamAllOf { basicStreamAllOfDateCreated, ..} ) <$> f basicStreamAllOfDateCreated
{-# INLINE basicStreamAllOfDateCreatedL #-}

-- | 'basicStreamAllOfInviteOnly' Lens
basicStreamAllOfInviteOnlyL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfInviteOnlyL f BasicStreamAllOf{..} = (\basicStreamAllOfInviteOnly -> BasicStreamAllOf { basicStreamAllOfInviteOnly, ..} ) <$> f basicStreamAllOfInviteOnly
{-# INLINE basicStreamAllOfInviteOnlyL #-}

-- | 'basicStreamAllOfRenderedDescription' Lens
basicStreamAllOfRenderedDescriptionL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfRenderedDescriptionL f BasicStreamAllOf{..} = (\basicStreamAllOfRenderedDescription -> BasicStreamAllOf { basicStreamAllOfRenderedDescription, ..} ) <$> f basicStreamAllOfRenderedDescription
{-# INLINE basicStreamAllOfRenderedDescriptionL #-}

-- | 'basicStreamAllOfIsWebPublic' Lens
basicStreamAllOfIsWebPublicL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfIsWebPublicL f BasicStreamAllOf{..} = (\basicStreamAllOfIsWebPublic -> BasicStreamAllOf { basicStreamAllOfIsWebPublic, ..} ) <$> f basicStreamAllOfIsWebPublic
{-# INLINE basicStreamAllOfIsWebPublicL #-}

-- | 'basicStreamAllOfStreamPostPolicy' Lens
basicStreamAllOfStreamPostPolicyL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfStreamPostPolicyL f BasicStreamAllOf{..} = (\basicStreamAllOfStreamPostPolicy -> BasicStreamAllOf { basicStreamAllOfStreamPostPolicy, ..} ) <$> f basicStreamAllOfStreamPostPolicy
{-# INLINE basicStreamAllOfStreamPostPolicyL #-}

-- | 'basicStreamAllOfMessageRetentionDays' Lens
basicStreamAllOfMessageRetentionDaysL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfMessageRetentionDaysL f BasicStreamAllOf{..} = (\basicStreamAllOfMessageRetentionDays -> BasicStreamAllOf { basicStreamAllOfMessageRetentionDays, ..} ) <$> f basicStreamAllOfMessageRetentionDays
{-# INLINE basicStreamAllOfMessageRetentionDaysL #-}

-- | 'basicStreamAllOfHistoryPublicToSubscribers' Lens
basicStreamAllOfHistoryPublicToSubscribersL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfHistoryPublicToSubscribersL f BasicStreamAllOf{..} = (\basicStreamAllOfHistoryPublicToSubscribers -> BasicStreamAllOf { basicStreamAllOfHistoryPublicToSubscribers, ..} ) <$> f basicStreamAllOfHistoryPublicToSubscribers
{-# INLINE basicStreamAllOfHistoryPublicToSubscribersL #-}

-- | 'basicStreamAllOfFirstMessageId' Lens
basicStreamAllOfFirstMessageIdL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfFirstMessageIdL f BasicStreamAllOf{..} = (\basicStreamAllOfFirstMessageId -> BasicStreamAllOf { basicStreamAllOfFirstMessageId, ..} ) <$> f basicStreamAllOfFirstMessageId
{-# INLINE basicStreamAllOfFirstMessageIdL #-}

-- | 'basicStreamAllOfIsAnnouncementOnly' Lens
basicStreamAllOfIsAnnouncementOnlyL :: Lens_' BasicStreamAllOf (Maybe AnyType)
basicStreamAllOfIsAnnouncementOnlyL f BasicStreamAllOf{..} = (\basicStreamAllOfIsAnnouncementOnly -> BasicStreamAllOf { basicStreamAllOfIsAnnouncementOnly, ..} ) <$> f basicStreamAllOfIsAnnouncementOnly
{-# INLINE basicStreamAllOfIsAnnouncementOnlyL #-}



-- * BasicStreamBase

-- | 'basicStreamBaseStreamId' Lens
basicStreamBaseStreamIdL :: Lens_' BasicStreamBase (Maybe Int)
basicStreamBaseStreamIdL f BasicStreamBase{..} = (\basicStreamBaseStreamId -> BasicStreamBase { basicStreamBaseStreamId, ..} ) <$> f basicStreamBaseStreamId
{-# INLINE basicStreamBaseStreamIdL #-}

-- | 'basicStreamBaseName' Lens
basicStreamBaseNameL :: Lens_' BasicStreamBase (Maybe Text)
basicStreamBaseNameL f BasicStreamBase{..} = (\basicStreamBaseName -> BasicStreamBase { basicStreamBaseName, ..} ) <$> f basicStreamBaseName
{-# INLINE basicStreamBaseNameL #-}

-- | 'basicStreamBaseDescription' Lens
basicStreamBaseDescriptionL :: Lens_' BasicStreamBase (Maybe Text)
basicStreamBaseDescriptionL f BasicStreamBase{..} = (\basicStreamBaseDescription -> BasicStreamBase { basicStreamBaseDescription, ..} ) <$> f basicStreamBaseDescription
{-# INLINE basicStreamBaseDescriptionL #-}

-- | 'basicStreamBaseDateCreated' Lens
basicStreamBaseDateCreatedL :: Lens_' BasicStreamBase (Maybe Int)
basicStreamBaseDateCreatedL f BasicStreamBase{..} = (\basicStreamBaseDateCreated -> BasicStreamBase { basicStreamBaseDateCreated, ..} ) <$> f basicStreamBaseDateCreated
{-# INLINE basicStreamBaseDateCreatedL #-}

-- | 'basicStreamBaseInviteOnly' Lens
basicStreamBaseInviteOnlyL :: Lens_' BasicStreamBase (Maybe Bool)
basicStreamBaseInviteOnlyL f BasicStreamBase{..} = (\basicStreamBaseInviteOnly -> BasicStreamBase { basicStreamBaseInviteOnly, ..} ) <$> f basicStreamBaseInviteOnly
{-# INLINE basicStreamBaseInviteOnlyL #-}

-- | 'basicStreamBaseRenderedDescription' Lens
basicStreamBaseRenderedDescriptionL :: Lens_' BasicStreamBase (Maybe Text)
basicStreamBaseRenderedDescriptionL f BasicStreamBase{..} = (\basicStreamBaseRenderedDescription -> BasicStreamBase { basicStreamBaseRenderedDescription, ..} ) <$> f basicStreamBaseRenderedDescription
{-# INLINE basicStreamBaseRenderedDescriptionL #-}

-- | 'basicStreamBaseIsWebPublic' Lens
basicStreamBaseIsWebPublicL :: Lens_' BasicStreamBase (Maybe Bool)
basicStreamBaseIsWebPublicL f BasicStreamBase{..} = (\basicStreamBaseIsWebPublic -> BasicStreamBase { basicStreamBaseIsWebPublic, ..} ) <$> f basicStreamBaseIsWebPublic
{-# INLINE basicStreamBaseIsWebPublicL #-}

-- | 'basicStreamBaseStreamPostPolicy' Lens
basicStreamBaseStreamPostPolicyL :: Lens_' BasicStreamBase (Maybe Int)
basicStreamBaseStreamPostPolicyL f BasicStreamBase{..} = (\basicStreamBaseStreamPostPolicy -> BasicStreamBase { basicStreamBaseStreamPostPolicy, ..} ) <$> f basicStreamBaseStreamPostPolicy
{-# INLINE basicStreamBaseStreamPostPolicyL #-}

-- | 'basicStreamBaseMessageRetentionDays' Lens
basicStreamBaseMessageRetentionDaysL :: Lens_' BasicStreamBase (Maybe Int)
basicStreamBaseMessageRetentionDaysL f BasicStreamBase{..} = (\basicStreamBaseMessageRetentionDays -> BasicStreamBase { basicStreamBaseMessageRetentionDays, ..} ) <$> f basicStreamBaseMessageRetentionDays
{-# INLINE basicStreamBaseMessageRetentionDaysL #-}

-- | 'basicStreamBaseHistoryPublicToSubscribers' Lens
basicStreamBaseHistoryPublicToSubscribersL :: Lens_' BasicStreamBase (Maybe Bool)
basicStreamBaseHistoryPublicToSubscribersL f BasicStreamBase{..} = (\basicStreamBaseHistoryPublicToSubscribers -> BasicStreamBase { basicStreamBaseHistoryPublicToSubscribers, ..} ) <$> f basicStreamBaseHistoryPublicToSubscribers
{-# INLINE basicStreamBaseHistoryPublicToSubscribersL #-}

-- | 'basicStreamBaseFirstMessageId' Lens
basicStreamBaseFirstMessageIdL :: Lens_' BasicStreamBase (Maybe Int)
basicStreamBaseFirstMessageIdL f BasicStreamBase{..} = (\basicStreamBaseFirstMessageId -> BasicStreamBase { basicStreamBaseFirstMessageId, ..} ) <$> f basicStreamBaseFirstMessageId
{-# INLINE basicStreamBaseFirstMessageIdL #-}

-- | 'basicStreamBaseIsAnnouncementOnly' Lens
basicStreamBaseIsAnnouncementOnlyL :: Lens_' BasicStreamBase (Maybe Bool)
basicStreamBaseIsAnnouncementOnlyL f BasicStreamBase{..} = (\basicStreamBaseIsAnnouncementOnly -> BasicStreamBase { basicStreamBaseIsAnnouncementOnly, ..} ) <$> f basicStreamBaseIsAnnouncementOnly
{-# INLINE basicStreamBaseIsAnnouncementOnlyL #-}



-- * Bot

-- | 'botUserId' Lens
botUserIdL :: Lens_' Bot (Maybe AnyType)
botUserIdL f Bot{..} = (\botUserId -> Bot { botUserId, ..} ) <$> f botUserId
{-# INLINE botUserIdL #-}

-- | 'botFullName' Lens
botFullNameL :: Lens_' Bot (Maybe AnyType)
botFullNameL f Bot{..} = (\botFullName -> Bot { botFullName, ..} ) <$> f botFullName
{-# INLINE botFullNameL #-}

-- | 'botApiKey' Lens
botApiKeyL :: Lens_' Bot (Maybe AnyType)
botApiKeyL f Bot{..} = (\botApiKey -> Bot { botApiKey, ..} ) <$> f botApiKey
{-# INLINE botApiKeyL #-}

-- | 'botDefaultSendingStream' Lens
botDefaultSendingStreamL :: Lens_' Bot (Maybe AnyType)
botDefaultSendingStreamL f Bot{..} = (\botDefaultSendingStream -> Bot { botDefaultSendingStream, ..} ) <$> f botDefaultSendingStream
{-# INLINE botDefaultSendingStreamL #-}

-- | 'botDefaultEventsRegisterStream' Lens
botDefaultEventsRegisterStreamL :: Lens_' Bot (Maybe AnyType)
botDefaultEventsRegisterStreamL f Bot{..} = (\botDefaultEventsRegisterStream -> Bot { botDefaultEventsRegisterStream, ..} ) <$> f botDefaultEventsRegisterStream
{-# INLINE botDefaultEventsRegisterStreamL #-}

-- | 'botDefaultAllPublicStreams' Lens
botDefaultAllPublicStreamsL :: Lens_' Bot (Maybe AnyType)
botDefaultAllPublicStreamsL f Bot{..} = (\botDefaultAllPublicStreams -> Bot { botDefaultAllPublicStreams, ..} ) <$> f botDefaultAllPublicStreams
{-# INLINE botDefaultAllPublicStreamsL #-}

-- | 'botAvatarUrl' Lens
botAvatarUrlL :: Lens_' Bot (Maybe AnyType)
botAvatarUrlL f Bot{..} = (\botAvatarUrl -> Bot { botAvatarUrl, ..} ) <$> f botAvatarUrl
{-# INLINE botAvatarUrlL #-}

-- | 'botOwnerId' Lens
botOwnerIdL :: Lens_' Bot (Maybe AnyType)
botOwnerIdL f Bot{..} = (\botOwnerId -> Bot { botOwnerId, ..} ) <$> f botOwnerId
{-# INLINE botOwnerIdL #-}

-- | 'botServices' Lens
botServicesL :: Lens_' Bot (Maybe AnyType)
botServicesL f Bot{..} = (\botServices -> Bot { botServices, ..} ) <$> f botServices
{-# INLINE botServicesL #-}

-- | 'botEmail' Lens
botEmailL :: Lens_' Bot (Maybe Text)
botEmailL f Bot{..} = (\botEmail -> Bot { botEmail, ..} ) <$> f botEmail
{-# INLINE botEmailL #-}

-- | 'botBotType' Lens
botBotTypeL :: Lens_' Bot (Maybe Int)
botBotTypeL f Bot{..} = (\botBotType -> Bot { botBotType, ..} ) <$> f botBotType
{-# INLINE botBotTypeL #-}

-- | 'botIsActive' Lens
botIsActiveL :: Lens_' Bot (Maybe Bool)
botIsActiveL f Bot{..} = (\botIsActive -> Bot { botIsActive, ..} ) <$> f botIsActive
{-# INLINE botIsActiveL #-}



-- * BotAllOf

-- | 'botAllOfUserId' Lens
botAllOfUserIdL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfUserIdL f BotAllOf{..} = (\botAllOfUserId -> BotAllOf { botAllOfUserId, ..} ) <$> f botAllOfUserId
{-# INLINE botAllOfUserIdL #-}

-- | 'botAllOfFullName' Lens
botAllOfFullNameL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfFullNameL f BotAllOf{..} = (\botAllOfFullName -> BotAllOf { botAllOfFullName, ..} ) <$> f botAllOfFullName
{-# INLINE botAllOfFullNameL #-}

-- | 'botAllOfApiKey' Lens
botAllOfApiKeyL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfApiKeyL f BotAllOf{..} = (\botAllOfApiKey -> BotAllOf { botAllOfApiKey, ..} ) <$> f botAllOfApiKey
{-# INLINE botAllOfApiKeyL #-}

-- | 'botAllOfDefaultSendingStream' Lens
botAllOfDefaultSendingStreamL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfDefaultSendingStreamL f BotAllOf{..} = (\botAllOfDefaultSendingStream -> BotAllOf { botAllOfDefaultSendingStream, ..} ) <$> f botAllOfDefaultSendingStream
{-# INLINE botAllOfDefaultSendingStreamL #-}

-- | 'botAllOfDefaultEventsRegisterStream' Lens
botAllOfDefaultEventsRegisterStreamL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfDefaultEventsRegisterStreamL f BotAllOf{..} = (\botAllOfDefaultEventsRegisterStream -> BotAllOf { botAllOfDefaultEventsRegisterStream, ..} ) <$> f botAllOfDefaultEventsRegisterStream
{-# INLINE botAllOfDefaultEventsRegisterStreamL #-}

-- | 'botAllOfDefaultAllPublicStreams' Lens
botAllOfDefaultAllPublicStreamsL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfDefaultAllPublicStreamsL f BotAllOf{..} = (\botAllOfDefaultAllPublicStreams -> BotAllOf { botAllOfDefaultAllPublicStreams, ..} ) <$> f botAllOfDefaultAllPublicStreams
{-# INLINE botAllOfDefaultAllPublicStreamsL #-}

-- | 'botAllOfAvatarUrl' Lens
botAllOfAvatarUrlL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfAvatarUrlL f BotAllOf{..} = (\botAllOfAvatarUrl -> BotAllOf { botAllOfAvatarUrl, ..} ) <$> f botAllOfAvatarUrl
{-# INLINE botAllOfAvatarUrlL #-}

-- | 'botAllOfOwnerId' Lens
botAllOfOwnerIdL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfOwnerIdL f BotAllOf{..} = (\botAllOfOwnerId -> BotAllOf { botAllOfOwnerId, ..} ) <$> f botAllOfOwnerId
{-# INLINE botAllOfOwnerIdL #-}

-- | 'botAllOfServices' Lens
botAllOfServicesL :: Lens_' BotAllOf (Maybe AnyType)
botAllOfServicesL f BotAllOf{..} = (\botAllOfServices -> BotAllOf { botAllOfServices, ..} ) <$> f botAllOfServices
{-# INLINE botAllOfServicesL #-}

-- | 'botAllOfEmail' Lens
botAllOfEmailL :: Lens_' BotAllOf (Maybe Text)
botAllOfEmailL f BotAllOf{..} = (\botAllOfEmail -> BotAllOf { botAllOfEmail, ..} ) <$> f botAllOfEmail
{-# INLINE botAllOfEmailL #-}

-- | 'botAllOfBotType' Lens
botAllOfBotTypeL :: Lens_' BotAllOf (Maybe Int)
botAllOfBotTypeL f BotAllOf{..} = (\botAllOfBotType -> BotAllOf { botAllOfBotType, ..} ) <$> f botAllOfBotType
{-# INLINE botAllOfBotTypeL #-}

-- | 'botAllOfIsActive' Lens
botAllOfIsActiveL :: Lens_' BotAllOf (Maybe Bool)
botAllOfIsActiveL f BotAllOf{..} = (\botAllOfIsActive -> BotAllOf { botAllOfIsActive, ..} ) <$> f botAllOfIsActive
{-# INLINE botAllOfIsActiveL #-}



-- * CodedError

-- | 'codedErrorResult' Lens
codedErrorResultL :: Lens_' CodedError (AnyType)
codedErrorResultL f CodedError{..} = (\codedErrorResult -> CodedError { codedErrorResult, ..} ) <$> f codedErrorResult
{-# INLINE codedErrorResultL #-}

-- | 'codedErrorMsg' Lens
codedErrorMsgL :: Lens_' CodedError (AnyType)
codedErrorMsgL f CodedError{..} = (\codedErrorMsg -> CodedError { codedErrorMsg, ..} ) <$> f codedErrorMsg
{-# INLINE codedErrorMsgL #-}

-- | 'codedErrorCode' Lens
codedErrorCodeL :: Lens_' CodedError (Maybe AnyType)
codedErrorCodeL f CodedError{..} = (\codedErrorCode -> CodedError { codedErrorCode, ..} ) <$> f codedErrorCode
{-# INLINE codedErrorCodeL #-}



-- * CodedErrorAllOf

-- | 'codedErrorAllOfResult' Lens
codedErrorAllOfResultL :: Lens_' CodedErrorAllOf (Maybe AnyType)
codedErrorAllOfResultL f CodedErrorAllOf{..} = (\codedErrorAllOfResult -> CodedErrorAllOf { codedErrorAllOfResult, ..} ) <$> f codedErrorAllOfResult
{-# INLINE codedErrorAllOfResultL #-}

-- | 'codedErrorAllOfMsg' Lens
codedErrorAllOfMsgL :: Lens_' CodedErrorAllOf (Maybe AnyType)
codedErrorAllOfMsgL f CodedErrorAllOf{..} = (\codedErrorAllOfMsg -> CodedErrorAllOf { codedErrorAllOfMsg, ..} ) <$> f codedErrorAllOfMsg
{-# INLINE codedErrorAllOfMsgL #-}

-- | 'codedErrorAllOfCode' Lens
codedErrorAllOfCodeL :: Lens_' CodedErrorAllOf (Maybe AnyType)
codedErrorAllOfCodeL f CodedErrorAllOf{..} = (\codedErrorAllOfCode -> CodedErrorAllOf { codedErrorAllOfCode, ..} ) <$> f codedErrorAllOfCode
{-# INLINE codedErrorAllOfCodeL #-}



-- * CodedErrorBase

-- | 'codedErrorBaseResult' Lens
codedErrorBaseResultL :: Lens_' CodedErrorBase (AnyType)
codedErrorBaseResultL f CodedErrorBase{..} = (\codedErrorBaseResult -> CodedErrorBase { codedErrorBaseResult, ..} ) <$> f codedErrorBaseResult
{-# INLINE codedErrorBaseResultL #-}

-- | 'codedErrorBaseMsg' Lens
codedErrorBaseMsgL :: Lens_' CodedErrorBase (AnyType)
codedErrorBaseMsgL f CodedErrorBase{..} = (\codedErrorBaseMsg -> CodedErrorBase { codedErrorBaseMsg, ..} ) <$> f codedErrorBaseMsg
{-# INLINE codedErrorBaseMsgL #-}

-- | 'codedErrorBaseCode' Lens
codedErrorBaseCodeL :: Lens_' CodedErrorBase (Maybe Text)
codedErrorBaseCodeL f CodedErrorBase{..} = (\codedErrorBaseCode -> CodedErrorBase { codedErrorBaseCode, ..} ) <$> f codedErrorBaseCode
{-# INLINE codedErrorBaseCodeL #-}



-- * CodedErrorBaseAllOf

-- | 'codedErrorBaseAllOfResult' Lens
codedErrorBaseAllOfResultL :: Lens_' CodedErrorBaseAllOf (Maybe AnyType)
codedErrorBaseAllOfResultL f CodedErrorBaseAllOf{..} = (\codedErrorBaseAllOfResult -> CodedErrorBaseAllOf { codedErrorBaseAllOfResult, ..} ) <$> f codedErrorBaseAllOfResult
{-# INLINE codedErrorBaseAllOfResultL #-}

-- | 'codedErrorBaseAllOfMsg' Lens
codedErrorBaseAllOfMsgL :: Lens_' CodedErrorBaseAllOf (Maybe AnyType)
codedErrorBaseAllOfMsgL f CodedErrorBaseAllOf{..} = (\codedErrorBaseAllOfMsg -> CodedErrorBaseAllOf { codedErrorBaseAllOfMsg, ..} ) <$> f codedErrorBaseAllOfMsg
{-# INLINE codedErrorBaseAllOfMsgL #-}

-- | 'codedErrorBaseAllOfCode' Lens
codedErrorBaseAllOfCodeL :: Lens_' CodedErrorBaseAllOf (Maybe Text)
codedErrorBaseAllOfCodeL f CodedErrorBaseAllOf{..} = (\codedErrorBaseAllOfCode -> CodedErrorBaseAllOf { codedErrorBaseAllOfCode, ..} ) <$> f codedErrorBaseAllOfCode
{-# INLINE codedErrorBaseAllOfCodeL #-}



-- * CustomProfileField

-- | 'customProfileFieldId' Lens
customProfileFieldIdL :: Lens_' CustomProfileField (Maybe Int)
customProfileFieldIdL f CustomProfileField{..} = (\customProfileFieldId -> CustomProfileField { customProfileFieldId, ..} ) <$> f customProfileFieldId
{-# INLINE customProfileFieldIdL #-}

-- | 'customProfileFieldType' Lens
customProfileFieldTypeL :: Lens_' CustomProfileField (Maybe Int)
customProfileFieldTypeL f CustomProfileField{..} = (\customProfileFieldType -> CustomProfileField { customProfileFieldType, ..} ) <$> f customProfileFieldType
{-# INLINE customProfileFieldTypeL #-}

-- | 'customProfileFieldOrder' Lens
customProfileFieldOrderL :: Lens_' CustomProfileField (Maybe Int)
customProfileFieldOrderL f CustomProfileField{..} = (\customProfileFieldOrder -> CustomProfileField { customProfileFieldOrder, ..} ) <$> f customProfileFieldOrder
{-# INLINE customProfileFieldOrderL #-}

-- | 'customProfileFieldName' Lens
customProfileFieldNameL :: Lens_' CustomProfileField (Maybe Text)
customProfileFieldNameL f CustomProfileField{..} = (\customProfileFieldName -> CustomProfileField { customProfileFieldName, ..} ) <$> f customProfileFieldName
{-# INLINE customProfileFieldNameL #-}

-- | 'customProfileFieldHint' Lens
customProfileFieldHintL :: Lens_' CustomProfileField (Maybe Text)
customProfileFieldHintL f CustomProfileField{..} = (\customProfileFieldHint -> CustomProfileField { customProfileFieldHint, ..} ) <$> f customProfileFieldHint
{-# INLINE customProfileFieldHintL #-}

-- | 'customProfileFieldFieldData' Lens
customProfileFieldFieldDataL :: Lens_' CustomProfileField (Maybe Text)
customProfileFieldFieldDataL f CustomProfileField{..} = (\customProfileFieldFieldData -> CustomProfileField { customProfileFieldFieldData, ..} ) <$> f customProfileFieldFieldData
{-# INLINE customProfileFieldFieldDataL #-}



-- * DefaultStreamGroup

-- | 'defaultStreamGroupName' Lens
defaultStreamGroupNameL :: Lens_' DefaultStreamGroup (Maybe Text)
defaultStreamGroupNameL f DefaultStreamGroup{..} = (\defaultStreamGroupName -> DefaultStreamGroup { defaultStreamGroupName, ..} ) <$> f defaultStreamGroupName
{-# INLINE defaultStreamGroupNameL #-}

-- | 'defaultStreamGroupDescription' Lens
defaultStreamGroupDescriptionL :: Lens_' DefaultStreamGroup (Maybe Text)
defaultStreamGroupDescriptionL f DefaultStreamGroup{..} = (\defaultStreamGroupDescription -> DefaultStreamGroup { defaultStreamGroupDescription, ..} ) <$> f defaultStreamGroupDescription
{-# INLINE defaultStreamGroupDescriptionL #-}

-- | 'defaultStreamGroupId' Lens
defaultStreamGroupIdL :: Lens_' DefaultStreamGroup (Maybe Int)
defaultStreamGroupIdL f DefaultStreamGroup{..} = (\defaultStreamGroupId -> DefaultStreamGroup { defaultStreamGroupId, ..} ) <$> f defaultStreamGroupId
{-# INLINE defaultStreamGroupIdL #-}

-- | 'defaultStreamGroupStreams' Lens
defaultStreamGroupStreamsL :: Lens_' DefaultStreamGroup (Maybe [BasicStream])
defaultStreamGroupStreamsL f DefaultStreamGroup{..} = (\defaultStreamGroupStreams -> DefaultStreamGroup { defaultStreamGroupStreams, ..} ) <$> f defaultStreamGroupStreams
{-# INLINE defaultStreamGroupStreamsL #-}



-- * Draft

-- | 'draftId' Lens
draftIdL :: Lens_' Draft (Maybe Int)
draftIdL f Draft{..} = (\draftId -> Draft { draftId, ..} ) <$> f draftId
{-# INLINE draftIdL #-}

-- | 'draftType' Lens
draftTypeL :: Lens_' Draft (E'Type)
draftTypeL f Draft{..} = (\draftType -> Draft { draftType, ..} ) <$> f draftType
{-# INLINE draftTypeL #-}

-- | 'draftTo' Lens
draftToL :: Lens_' Draft ([Int])
draftToL f Draft{..} = (\draftTo -> Draft { draftTo, ..} ) <$> f draftTo
{-# INLINE draftToL #-}

-- | 'draftTopic' Lens
draftTopicL :: Lens_' Draft (Text)
draftTopicL f Draft{..} = (\draftTopic -> Draft { draftTopic, ..} ) <$> f draftTopic
{-# INLINE draftTopicL #-}

-- | 'draftContent' Lens
draftContentL :: Lens_' Draft (Text)
draftContentL f Draft{..} = (\draftContent -> Draft { draftContent, ..} ) <$> f draftContent
{-# INLINE draftContentL #-}

-- | 'draftTimestamp' Lens
draftTimestampL :: Lens_' Draft (Maybe Double)
draftTimestampL f Draft{..} = (\draftTimestamp -> Draft { draftTimestamp, ..} ) <$> f draftTimestamp
{-# INLINE draftTimestampL #-}



-- * EmojiBase

-- | 'emojiBaseEmojiCode' Lens
emojiBaseEmojiCodeL :: Lens_' EmojiBase (Maybe Text)
emojiBaseEmojiCodeL f EmojiBase{..} = (\emojiBaseEmojiCode -> EmojiBase { emojiBaseEmojiCode, ..} ) <$> f emojiBaseEmojiCode
{-# INLINE emojiBaseEmojiCodeL #-}

-- | 'emojiBaseEmojiName' Lens
emojiBaseEmojiNameL :: Lens_' EmojiBase (Maybe Text)
emojiBaseEmojiNameL f EmojiBase{..} = (\emojiBaseEmojiName -> EmojiBase { emojiBaseEmojiName, ..} ) <$> f emojiBaseEmojiName
{-# INLINE emojiBaseEmojiNameL #-}

-- | 'emojiBaseReactionType' Lens
emojiBaseReactionTypeL :: Lens_' EmojiBase (Maybe Text)
emojiBaseReactionTypeL f EmojiBase{..} = (\emojiBaseReactionType -> EmojiBase { emojiBaseReactionType, ..} ) <$> f emojiBaseReactionType
{-# INLINE emojiBaseReactionTypeL #-}



-- * EmojiReaction

-- | 'emojiReactionEmojiCode' Lens
emojiReactionEmojiCodeL :: Lens_' EmojiReaction (Maybe AnyType)
emojiReactionEmojiCodeL f EmojiReaction{..} = (\emojiReactionEmojiCode -> EmojiReaction { emojiReactionEmojiCode, ..} ) <$> f emojiReactionEmojiCode
{-# INLINE emojiReactionEmojiCodeL #-}

-- | 'emojiReactionEmojiName' Lens
emojiReactionEmojiNameL :: Lens_' EmojiReaction (Maybe AnyType)
emojiReactionEmojiNameL f EmojiReaction{..} = (\emojiReactionEmojiName -> EmojiReaction { emojiReactionEmojiName, ..} ) <$> f emojiReactionEmojiName
{-# INLINE emojiReactionEmojiNameL #-}

-- | 'emojiReactionReactionType' Lens
emojiReactionReactionTypeL :: Lens_' EmojiReaction (Maybe AnyType)
emojiReactionReactionTypeL f EmojiReaction{..} = (\emojiReactionReactionType -> EmojiReaction { emojiReactionReactionType, ..} ) <$> f emojiReactionReactionType
{-# INLINE emojiReactionReactionTypeL #-}

-- | 'emojiReactionUserId' Lens
emojiReactionUserIdL :: Lens_' EmojiReaction (Maybe AnyType)
emojiReactionUserIdL f EmojiReaction{..} = (\emojiReactionUserId -> EmojiReaction { emojiReactionUserId, ..} ) <$> f emojiReactionUserId
{-# INLINE emojiReactionUserIdL #-}

-- | 'emojiReactionUser' Lens
emojiReactionUserL :: Lens_' EmojiReaction (Maybe AnyType)
emojiReactionUserL f EmojiReaction{..} = (\emojiReactionUser -> EmojiReaction { emojiReactionUser, ..} ) <$> f emojiReactionUser
{-# INLINE emojiReactionUserL #-}



-- * EmojiReactionAllOf

-- | 'emojiReactionAllOfEmojiCode' Lens
emojiReactionAllOfEmojiCodeL :: Lens_' EmojiReactionAllOf (Maybe AnyType)
emojiReactionAllOfEmojiCodeL f EmojiReactionAllOf{..} = (\emojiReactionAllOfEmojiCode -> EmojiReactionAllOf { emojiReactionAllOfEmojiCode, ..} ) <$> f emojiReactionAllOfEmojiCode
{-# INLINE emojiReactionAllOfEmojiCodeL #-}

-- | 'emojiReactionAllOfEmojiName' Lens
emojiReactionAllOfEmojiNameL :: Lens_' EmojiReactionAllOf (Maybe AnyType)
emojiReactionAllOfEmojiNameL f EmojiReactionAllOf{..} = (\emojiReactionAllOfEmojiName -> EmojiReactionAllOf { emojiReactionAllOfEmojiName, ..} ) <$> f emojiReactionAllOfEmojiName
{-# INLINE emojiReactionAllOfEmojiNameL #-}

-- | 'emojiReactionAllOfReactionType' Lens
emojiReactionAllOfReactionTypeL :: Lens_' EmojiReactionAllOf (Maybe AnyType)
emojiReactionAllOfReactionTypeL f EmojiReactionAllOf{..} = (\emojiReactionAllOfReactionType -> EmojiReactionAllOf { emojiReactionAllOfReactionType, ..} ) <$> f emojiReactionAllOfReactionType
{-# INLINE emojiReactionAllOfReactionTypeL #-}

-- | 'emojiReactionAllOfUserId' Lens
emojiReactionAllOfUserIdL :: Lens_' EmojiReactionAllOf (Maybe AnyType)
emojiReactionAllOfUserIdL f EmojiReactionAllOf{..} = (\emojiReactionAllOfUserId -> EmojiReactionAllOf { emojiReactionAllOfUserId, ..} ) <$> f emojiReactionAllOfUserId
{-# INLINE emojiReactionAllOfUserIdL #-}

-- | 'emojiReactionAllOfUser' Lens
emojiReactionAllOfUserL :: Lens_' EmojiReactionAllOf (Maybe AnyType)
emojiReactionAllOfUserL f EmojiReactionAllOf{..} = (\emojiReactionAllOfUser -> EmojiReactionAllOf { emojiReactionAllOfUser, ..} ) <$> f emojiReactionAllOfUser
{-# INLINE emojiReactionAllOfUserL #-}



-- * EmojiReactionBase

-- | 'emojiReactionBaseEmojiCode' Lens
emojiReactionBaseEmojiCodeL :: Lens_' EmojiReactionBase (Maybe Text)
emojiReactionBaseEmojiCodeL f EmojiReactionBase{..} = (\emojiReactionBaseEmojiCode -> EmojiReactionBase { emojiReactionBaseEmojiCode, ..} ) <$> f emojiReactionBaseEmojiCode
{-# INLINE emojiReactionBaseEmojiCodeL #-}

-- | 'emojiReactionBaseEmojiName' Lens
emojiReactionBaseEmojiNameL :: Lens_' EmojiReactionBase (Maybe Text)
emojiReactionBaseEmojiNameL f EmojiReactionBase{..} = (\emojiReactionBaseEmojiName -> EmojiReactionBase { emojiReactionBaseEmojiName, ..} ) <$> f emojiReactionBaseEmojiName
{-# INLINE emojiReactionBaseEmojiNameL #-}

-- | 'emojiReactionBaseReactionType' Lens
emojiReactionBaseReactionTypeL :: Lens_' EmojiReactionBase (Maybe Text)
emojiReactionBaseReactionTypeL f EmojiReactionBase{..} = (\emojiReactionBaseReactionType -> EmojiReactionBase { emojiReactionBaseReactionType, ..} ) <$> f emojiReactionBaseReactionType
{-# INLINE emojiReactionBaseReactionTypeL #-}

-- | 'emojiReactionBaseUserId' Lens
emojiReactionBaseUserIdL :: Lens_' EmojiReactionBase (Maybe Int)
emojiReactionBaseUserIdL f EmojiReactionBase{..} = (\emojiReactionBaseUserId -> EmojiReactionBase { emojiReactionBaseUserId, ..} ) <$> f emojiReactionBaseUserId
{-# INLINE emojiReactionBaseUserIdL #-}

-- | 'emojiReactionBaseUser' Lens
emojiReactionBaseUserL :: Lens_' EmojiReactionBase (Maybe EmojiReactionBaseAllOfUser)
emojiReactionBaseUserL f EmojiReactionBase{..} = (\emojiReactionBaseUser -> EmojiReactionBase { emojiReactionBaseUser, ..} ) <$> f emojiReactionBaseUser
{-# INLINE emojiReactionBaseUserL #-}



-- * EmojiReactionBaseAllOf

-- | 'emojiReactionBaseAllOfUserId' Lens
emojiReactionBaseAllOfUserIdL :: Lens_' EmojiReactionBaseAllOf (Maybe Int)
emojiReactionBaseAllOfUserIdL f EmojiReactionBaseAllOf{..} = (\emojiReactionBaseAllOfUserId -> EmojiReactionBaseAllOf { emojiReactionBaseAllOfUserId, ..} ) <$> f emojiReactionBaseAllOfUserId
{-# INLINE emojiReactionBaseAllOfUserIdL #-}

-- | 'emojiReactionBaseAllOfUser' Lens
emojiReactionBaseAllOfUserL :: Lens_' EmojiReactionBaseAllOf (Maybe EmojiReactionBaseAllOfUser)
emojiReactionBaseAllOfUserL f EmojiReactionBaseAllOf{..} = (\emojiReactionBaseAllOfUser -> EmojiReactionBaseAllOf { emojiReactionBaseAllOfUser, ..} ) <$> f emojiReactionBaseAllOfUser
{-# INLINE emojiReactionBaseAllOfUserL #-}



-- * EmojiReactionBaseAllOfUser

-- | 'emojiReactionBaseAllOfUserId' Lens
emojiReactionBaseAllOfUserIdL :: Lens_' EmojiReactionBaseAllOfUser (Maybe Int)
emojiReactionBaseAllOfUserIdL f EmojiReactionBaseAllOfUser{..} = (\emojiReactionBaseAllOfUserId -> EmojiReactionBaseAllOfUser { emojiReactionBaseAllOfUserId, ..} ) <$> f emojiReactionBaseAllOfUserId
{-# INLINE emojiReactionBaseAllOfUserIdL #-}

-- | 'emojiReactionBaseAllOfUserEmail' Lens
emojiReactionBaseAllOfUserEmailL :: Lens_' EmojiReactionBaseAllOfUser (Maybe Text)
emojiReactionBaseAllOfUserEmailL f EmojiReactionBaseAllOfUser{..} = (\emojiReactionBaseAllOfUserEmail -> EmojiReactionBaseAllOfUser { emojiReactionBaseAllOfUserEmail, ..} ) <$> f emojiReactionBaseAllOfUserEmail
{-# INLINE emojiReactionBaseAllOfUserEmailL #-}

-- | 'emojiReactionBaseAllOfUserFullName' Lens
emojiReactionBaseAllOfUserFullNameL :: Lens_' EmojiReactionBaseAllOfUser (Maybe Text)
emojiReactionBaseAllOfUserFullNameL f EmojiReactionBaseAllOfUser{..} = (\emojiReactionBaseAllOfUserFullName -> EmojiReactionBaseAllOfUser { emojiReactionBaseAllOfUserFullName, ..} ) <$> f emojiReactionBaseAllOfUserFullName
{-# INLINE emojiReactionBaseAllOfUserFullNameL #-}

-- | 'emojiReactionBaseAllOfUserIsMirrorDummy' Lens
emojiReactionBaseAllOfUserIsMirrorDummyL :: Lens_' EmojiReactionBaseAllOfUser (Maybe Bool)
emojiReactionBaseAllOfUserIsMirrorDummyL f EmojiReactionBaseAllOfUser{..} = (\emojiReactionBaseAllOfUserIsMirrorDummy -> EmojiReactionBaseAllOfUser { emojiReactionBaseAllOfUserIsMirrorDummy, ..} ) <$> f emojiReactionBaseAllOfUserIsMirrorDummy
{-# INLINE emojiReactionBaseAllOfUserIsMirrorDummyL #-}



-- * GetMessages

-- | 'getMessagesAvatarUrl' Lens
getMessagesAvatarUrlL :: Lens_' GetMessages (Maybe AnyType)
getMessagesAvatarUrlL f GetMessages{..} = (\getMessagesAvatarUrl -> GetMessages { getMessagesAvatarUrl, ..} ) <$> f getMessagesAvatarUrl
{-# INLINE getMessagesAvatarUrlL #-}

-- | 'getMessagesClient' Lens
getMessagesClientL :: Lens_' GetMessages (Maybe AnyType)
getMessagesClientL f GetMessages{..} = (\getMessagesClient -> GetMessages { getMessagesClient, ..} ) <$> f getMessagesClient
{-# INLINE getMessagesClientL #-}

-- | 'getMessagesContent' Lens
getMessagesContentL :: Lens_' GetMessages (Maybe AnyType)
getMessagesContentL f GetMessages{..} = (\getMessagesContent -> GetMessages { getMessagesContent, ..} ) <$> f getMessagesContent
{-# INLINE getMessagesContentL #-}

-- | 'getMessagesContentType' Lens
getMessagesContentTypeL :: Lens_' GetMessages (Maybe AnyType)
getMessagesContentTypeL f GetMessages{..} = (\getMessagesContentType -> GetMessages { getMessagesContentType, ..} ) <$> f getMessagesContentType
{-# INLINE getMessagesContentTypeL #-}

-- | 'getMessagesDisplayRecipient' Lens
getMessagesDisplayRecipientL :: Lens_' GetMessages (Maybe AnyType)
getMessagesDisplayRecipientL f GetMessages{..} = (\getMessagesDisplayRecipient -> GetMessages { getMessagesDisplayRecipient, ..} ) <$> f getMessagesDisplayRecipient
{-# INLINE getMessagesDisplayRecipientL #-}

-- | 'getMessagesId' Lens
getMessagesIdL :: Lens_' GetMessages (Maybe AnyType)
getMessagesIdL f GetMessages{..} = (\getMessagesId -> GetMessages { getMessagesId, ..} ) <$> f getMessagesId
{-# INLINE getMessagesIdL #-}

-- | 'getMessagesIsMeMessage' Lens
getMessagesIsMeMessageL :: Lens_' GetMessages (Maybe AnyType)
getMessagesIsMeMessageL f GetMessages{..} = (\getMessagesIsMeMessage -> GetMessages { getMessagesIsMeMessage, ..} ) <$> f getMessagesIsMeMessage
{-# INLINE getMessagesIsMeMessageL #-}

-- | 'getMessagesReactions' Lens
getMessagesReactionsL :: Lens_' GetMessages (Maybe AnyType)
getMessagesReactionsL f GetMessages{..} = (\getMessagesReactions -> GetMessages { getMessagesReactions, ..} ) <$> f getMessagesReactions
{-# INLINE getMessagesReactionsL #-}

-- | 'getMessagesRecipientId' Lens
getMessagesRecipientIdL :: Lens_' GetMessages (Maybe AnyType)
getMessagesRecipientIdL f GetMessages{..} = (\getMessagesRecipientId -> GetMessages { getMessagesRecipientId, ..} ) <$> f getMessagesRecipientId
{-# INLINE getMessagesRecipientIdL #-}

-- | 'getMessagesSenderEmail' Lens
getMessagesSenderEmailL :: Lens_' GetMessages (Maybe AnyType)
getMessagesSenderEmailL f GetMessages{..} = (\getMessagesSenderEmail -> GetMessages { getMessagesSenderEmail, ..} ) <$> f getMessagesSenderEmail
{-# INLINE getMessagesSenderEmailL #-}

-- | 'getMessagesSenderFullName' Lens
getMessagesSenderFullNameL :: Lens_' GetMessages (Maybe AnyType)
getMessagesSenderFullNameL f GetMessages{..} = (\getMessagesSenderFullName -> GetMessages { getMessagesSenderFullName, ..} ) <$> f getMessagesSenderFullName
{-# INLINE getMessagesSenderFullNameL #-}

-- | 'getMessagesSenderId' Lens
getMessagesSenderIdL :: Lens_' GetMessages (Maybe AnyType)
getMessagesSenderIdL f GetMessages{..} = (\getMessagesSenderId -> GetMessages { getMessagesSenderId, ..} ) <$> f getMessagesSenderId
{-# INLINE getMessagesSenderIdL #-}

-- | 'getMessagesSenderRealmStr' Lens
getMessagesSenderRealmStrL :: Lens_' GetMessages (Maybe AnyType)
getMessagesSenderRealmStrL f GetMessages{..} = (\getMessagesSenderRealmStr -> GetMessages { getMessagesSenderRealmStr, ..} ) <$> f getMessagesSenderRealmStr
{-# INLINE getMessagesSenderRealmStrL #-}

-- | 'getMessagesStreamId' Lens
getMessagesStreamIdL :: Lens_' GetMessages (Maybe AnyType)
getMessagesStreamIdL f GetMessages{..} = (\getMessagesStreamId -> GetMessages { getMessagesStreamId, ..} ) <$> f getMessagesStreamId
{-# INLINE getMessagesStreamIdL #-}

-- | 'getMessagesSubject' Lens
getMessagesSubjectL :: Lens_' GetMessages (Maybe AnyType)
getMessagesSubjectL f GetMessages{..} = (\getMessagesSubject -> GetMessages { getMessagesSubject, ..} ) <$> f getMessagesSubject
{-# INLINE getMessagesSubjectL #-}

-- | 'getMessagesTopicLinks' Lens
getMessagesTopicLinksL :: Lens_' GetMessages (Maybe AnyType)
getMessagesTopicLinksL f GetMessages{..} = (\getMessagesTopicLinks -> GetMessages { getMessagesTopicLinks, ..} ) <$> f getMessagesTopicLinks
{-# INLINE getMessagesTopicLinksL #-}

-- | 'getMessagesSubmessages' Lens
getMessagesSubmessagesL :: Lens_' GetMessages (Maybe AnyType)
getMessagesSubmessagesL f GetMessages{..} = (\getMessagesSubmessages -> GetMessages { getMessagesSubmessages, ..} ) <$> f getMessagesSubmessages
{-# INLINE getMessagesSubmessagesL #-}

-- | 'getMessagesTimestamp' Lens
getMessagesTimestampL :: Lens_' GetMessages (Maybe AnyType)
getMessagesTimestampL f GetMessages{..} = (\getMessagesTimestamp -> GetMessages { getMessagesTimestamp, ..} ) <$> f getMessagesTimestamp
{-# INLINE getMessagesTimestampL #-}

-- | 'getMessagesType' Lens
getMessagesTypeL :: Lens_' GetMessages (Maybe AnyType)
getMessagesTypeL f GetMessages{..} = (\getMessagesType -> GetMessages { getMessagesType, ..} ) <$> f getMessagesType
{-# INLINE getMessagesTypeL #-}

-- | 'getMessagesFlags' Lens
getMessagesFlagsL :: Lens_' GetMessages (Maybe [Text])
getMessagesFlagsL f GetMessages{..} = (\getMessagesFlags -> GetMessages { getMessagesFlags, ..} ) <$> f getMessagesFlags
{-# INLINE getMessagesFlagsL #-}

-- | 'getMessagesLastEditTimestamp' Lens
getMessagesLastEditTimestampL :: Lens_' GetMessages (Maybe Int)
getMessagesLastEditTimestampL f GetMessages{..} = (\getMessagesLastEditTimestamp -> GetMessages { getMessagesLastEditTimestamp, ..} ) <$> f getMessagesLastEditTimestamp
{-# INLINE getMessagesLastEditTimestampL #-}

-- | 'getMessagesMatchContent' Lens
getMessagesMatchContentL :: Lens_' GetMessages (Maybe Text)
getMessagesMatchContentL f GetMessages{..} = (\getMessagesMatchContent -> GetMessages { getMessagesMatchContent, ..} ) <$> f getMessagesMatchContent
{-# INLINE getMessagesMatchContentL #-}

-- | 'getMessagesMatchSubject' Lens
getMessagesMatchSubjectL :: Lens_' GetMessages (Maybe Text)
getMessagesMatchSubjectL f GetMessages{..} = (\getMessagesMatchSubject -> GetMessages { getMessagesMatchSubject, ..} ) <$> f getMessagesMatchSubject
{-# INLINE getMessagesMatchSubjectL #-}



-- * GetMessagesAllOf

-- | 'getMessagesAllOfAvatarUrl' Lens
getMessagesAllOfAvatarUrlL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfAvatarUrlL f GetMessagesAllOf{..} = (\getMessagesAllOfAvatarUrl -> GetMessagesAllOf { getMessagesAllOfAvatarUrl, ..} ) <$> f getMessagesAllOfAvatarUrl
{-# INLINE getMessagesAllOfAvatarUrlL #-}

-- | 'getMessagesAllOfClient' Lens
getMessagesAllOfClientL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfClientL f GetMessagesAllOf{..} = (\getMessagesAllOfClient -> GetMessagesAllOf { getMessagesAllOfClient, ..} ) <$> f getMessagesAllOfClient
{-# INLINE getMessagesAllOfClientL #-}

-- | 'getMessagesAllOfContent' Lens
getMessagesAllOfContentL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfContentL f GetMessagesAllOf{..} = (\getMessagesAllOfContent -> GetMessagesAllOf { getMessagesAllOfContent, ..} ) <$> f getMessagesAllOfContent
{-# INLINE getMessagesAllOfContentL #-}

-- | 'getMessagesAllOfContentType' Lens
getMessagesAllOfContentTypeL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfContentTypeL f GetMessagesAllOf{..} = (\getMessagesAllOfContentType -> GetMessagesAllOf { getMessagesAllOfContentType, ..} ) <$> f getMessagesAllOfContentType
{-# INLINE getMessagesAllOfContentTypeL #-}

-- | 'getMessagesAllOfDisplayRecipient' Lens
getMessagesAllOfDisplayRecipientL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfDisplayRecipientL f GetMessagesAllOf{..} = (\getMessagesAllOfDisplayRecipient -> GetMessagesAllOf { getMessagesAllOfDisplayRecipient, ..} ) <$> f getMessagesAllOfDisplayRecipient
{-# INLINE getMessagesAllOfDisplayRecipientL #-}

-- | 'getMessagesAllOfId' Lens
getMessagesAllOfIdL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfIdL f GetMessagesAllOf{..} = (\getMessagesAllOfId -> GetMessagesAllOf { getMessagesAllOfId, ..} ) <$> f getMessagesAllOfId
{-# INLINE getMessagesAllOfIdL #-}

-- | 'getMessagesAllOfIsMeMessage' Lens
getMessagesAllOfIsMeMessageL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfIsMeMessageL f GetMessagesAllOf{..} = (\getMessagesAllOfIsMeMessage -> GetMessagesAllOf { getMessagesAllOfIsMeMessage, ..} ) <$> f getMessagesAllOfIsMeMessage
{-# INLINE getMessagesAllOfIsMeMessageL #-}

-- | 'getMessagesAllOfReactions' Lens
getMessagesAllOfReactionsL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfReactionsL f GetMessagesAllOf{..} = (\getMessagesAllOfReactions -> GetMessagesAllOf { getMessagesAllOfReactions, ..} ) <$> f getMessagesAllOfReactions
{-# INLINE getMessagesAllOfReactionsL #-}

-- | 'getMessagesAllOfRecipientId' Lens
getMessagesAllOfRecipientIdL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfRecipientIdL f GetMessagesAllOf{..} = (\getMessagesAllOfRecipientId -> GetMessagesAllOf { getMessagesAllOfRecipientId, ..} ) <$> f getMessagesAllOfRecipientId
{-# INLINE getMessagesAllOfRecipientIdL #-}

-- | 'getMessagesAllOfSenderEmail' Lens
getMessagesAllOfSenderEmailL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfSenderEmailL f GetMessagesAllOf{..} = (\getMessagesAllOfSenderEmail -> GetMessagesAllOf { getMessagesAllOfSenderEmail, ..} ) <$> f getMessagesAllOfSenderEmail
{-# INLINE getMessagesAllOfSenderEmailL #-}

-- | 'getMessagesAllOfSenderFullName' Lens
getMessagesAllOfSenderFullNameL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfSenderFullNameL f GetMessagesAllOf{..} = (\getMessagesAllOfSenderFullName -> GetMessagesAllOf { getMessagesAllOfSenderFullName, ..} ) <$> f getMessagesAllOfSenderFullName
{-# INLINE getMessagesAllOfSenderFullNameL #-}

-- | 'getMessagesAllOfSenderId' Lens
getMessagesAllOfSenderIdL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfSenderIdL f GetMessagesAllOf{..} = (\getMessagesAllOfSenderId -> GetMessagesAllOf { getMessagesAllOfSenderId, ..} ) <$> f getMessagesAllOfSenderId
{-# INLINE getMessagesAllOfSenderIdL #-}

-- | 'getMessagesAllOfSenderRealmStr' Lens
getMessagesAllOfSenderRealmStrL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfSenderRealmStrL f GetMessagesAllOf{..} = (\getMessagesAllOfSenderRealmStr -> GetMessagesAllOf { getMessagesAllOfSenderRealmStr, ..} ) <$> f getMessagesAllOfSenderRealmStr
{-# INLINE getMessagesAllOfSenderRealmStrL #-}

-- | 'getMessagesAllOfStreamId' Lens
getMessagesAllOfStreamIdL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfStreamIdL f GetMessagesAllOf{..} = (\getMessagesAllOfStreamId -> GetMessagesAllOf { getMessagesAllOfStreamId, ..} ) <$> f getMessagesAllOfStreamId
{-# INLINE getMessagesAllOfStreamIdL #-}

-- | 'getMessagesAllOfSubject' Lens
getMessagesAllOfSubjectL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfSubjectL f GetMessagesAllOf{..} = (\getMessagesAllOfSubject -> GetMessagesAllOf { getMessagesAllOfSubject, ..} ) <$> f getMessagesAllOfSubject
{-# INLINE getMessagesAllOfSubjectL #-}

-- | 'getMessagesAllOfTopicLinks' Lens
getMessagesAllOfTopicLinksL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfTopicLinksL f GetMessagesAllOf{..} = (\getMessagesAllOfTopicLinks -> GetMessagesAllOf { getMessagesAllOfTopicLinks, ..} ) <$> f getMessagesAllOfTopicLinks
{-# INLINE getMessagesAllOfTopicLinksL #-}

-- | 'getMessagesAllOfSubmessages' Lens
getMessagesAllOfSubmessagesL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfSubmessagesL f GetMessagesAllOf{..} = (\getMessagesAllOfSubmessages -> GetMessagesAllOf { getMessagesAllOfSubmessages, ..} ) <$> f getMessagesAllOfSubmessages
{-# INLINE getMessagesAllOfSubmessagesL #-}

-- | 'getMessagesAllOfTimestamp' Lens
getMessagesAllOfTimestampL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfTimestampL f GetMessagesAllOf{..} = (\getMessagesAllOfTimestamp -> GetMessagesAllOf { getMessagesAllOfTimestamp, ..} ) <$> f getMessagesAllOfTimestamp
{-# INLINE getMessagesAllOfTimestampL #-}

-- | 'getMessagesAllOfType' Lens
getMessagesAllOfTypeL :: Lens_' GetMessagesAllOf (Maybe AnyType)
getMessagesAllOfTypeL f GetMessagesAllOf{..} = (\getMessagesAllOfType -> GetMessagesAllOf { getMessagesAllOfType, ..} ) <$> f getMessagesAllOfType
{-# INLINE getMessagesAllOfTypeL #-}

-- | 'getMessagesAllOfFlags' Lens
getMessagesAllOfFlagsL :: Lens_' GetMessagesAllOf (Maybe [Text])
getMessagesAllOfFlagsL f GetMessagesAllOf{..} = (\getMessagesAllOfFlags -> GetMessagesAllOf { getMessagesAllOfFlags, ..} ) <$> f getMessagesAllOfFlags
{-# INLINE getMessagesAllOfFlagsL #-}

-- | 'getMessagesAllOfLastEditTimestamp' Lens
getMessagesAllOfLastEditTimestampL :: Lens_' GetMessagesAllOf (Maybe Int)
getMessagesAllOfLastEditTimestampL f GetMessagesAllOf{..} = (\getMessagesAllOfLastEditTimestamp -> GetMessagesAllOf { getMessagesAllOfLastEditTimestamp, ..} ) <$> f getMessagesAllOfLastEditTimestamp
{-# INLINE getMessagesAllOfLastEditTimestampL #-}

-- | 'getMessagesAllOfMatchContent' Lens
getMessagesAllOfMatchContentL :: Lens_' GetMessagesAllOf (Maybe Text)
getMessagesAllOfMatchContentL f GetMessagesAllOf{..} = (\getMessagesAllOfMatchContent -> GetMessagesAllOf { getMessagesAllOfMatchContent, ..} ) <$> f getMessagesAllOfMatchContent
{-# INLINE getMessagesAllOfMatchContentL #-}

-- | 'getMessagesAllOfMatchSubject' Lens
getMessagesAllOfMatchSubjectL :: Lens_' GetMessagesAllOf (Maybe Text)
getMessagesAllOfMatchSubjectL f GetMessagesAllOf{..} = (\getMessagesAllOfMatchSubject -> GetMessagesAllOf { getMessagesAllOfMatchSubject, ..} ) <$> f getMessagesAllOfMatchSubject
{-# INLINE getMessagesAllOfMatchSubjectL #-}



-- * Hotspot

-- | 'hotspotDelay' Lens
hotspotDelayL :: Lens_' Hotspot (Maybe Double)
hotspotDelayL f Hotspot{..} = (\hotspotDelay -> Hotspot { hotspotDelay, ..} ) <$> f hotspotDelay
{-# INLINE hotspotDelayL #-}

-- | 'hotspotName' Lens
hotspotNameL :: Lens_' Hotspot (Maybe Text)
hotspotNameL f Hotspot{..} = (\hotspotName -> Hotspot { hotspotName, ..} ) <$> f hotspotName
{-# INLINE hotspotNameL #-}

-- | 'hotspotTitle' Lens
hotspotTitleL :: Lens_' Hotspot (Maybe Text)
hotspotTitleL f Hotspot{..} = (\hotspotTitle -> Hotspot { hotspotTitle, ..} ) <$> f hotspotTitle
{-# INLINE hotspotTitleL #-}

-- | 'hotspotDescription' Lens
hotspotDescriptionL :: Lens_' Hotspot (Maybe Text)
hotspotDescriptionL f Hotspot{..} = (\hotspotDescription -> Hotspot { hotspotDescription, ..} ) <$> f hotspotDescription
{-# INLINE hotspotDescriptionL #-}



-- * InlineResponse200

-- | 'inlineResponse200BotEmail' Lens
inlineResponse200BotEmailL :: Lens_' InlineResponse200 (Maybe Text)
inlineResponse200BotEmailL f InlineResponse200{..} = (\inlineResponse200BotEmail -> InlineResponse200 { inlineResponse200BotEmail, ..} ) <$> f inlineResponse200BotEmail
{-# INLINE inlineResponse200BotEmailL #-}

-- | 'inlineResponse200BotFullName' Lens
inlineResponse200BotFullNameL :: Lens_' InlineResponse200 (Maybe Text)
inlineResponse200BotFullNameL f InlineResponse200{..} = (\inlineResponse200BotFullName -> InlineResponse200 { inlineResponse200BotFullName, ..} ) <$> f inlineResponse200BotFullName
{-# INLINE inlineResponse200BotFullNameL #-}

-- | 'inlineResponse200Data' Lens
inlineResponse200DataL :: Lens_' InlineResponse200 (Maybe Text)
inlineResponse200DataL f InlineResponse200{..} = (\inlineResponse200Data -> InlineResponse200 { inlineResponse200Data, ..} ) <$> f inlineResponse200Data
{-# INLINE inlineResponse200DataL #-}

-- | 'inlineResponse200Trigger' Lens
inlineResponse200TriggerL :: Lens_' InlineResponse200 (Maybe Text)
inlineResponse200TriggerL f InlineResponse200{..} = (\inlineResponse200Trigger -> InlineResponse200 { inlineResponse200Trigger, ..} ) <$> f inlineResponse200Trigger
{-# INLINE inlineResponse200TriggerL #-}

-- | 'inlineResponse200Token' Lens
inlineResponse200TokenL :: Lens_' InlineResponse200 (Maybe Text)
inlineResponse200TokenL f InlineResponse200{..} = (\inlineResponse200Token -> InlineResponse200 { inlineResponse200Token, ..} ) <$> f inlineResponse200Token
{-# INLINE inlineResponse200TokenL #-}

-- | 'inlineResponse200Message' Lens
inlineResponse200MessageL :: Lens_' InlineResponse200 (Maybe MessagesBase)
inlineResponse200MessageL f InlineResponse200{..} = (\inlineResponse200Message -> InlineResponse200 { inlineResponse200Message, ..} ) <$> f inlineResponse200Message
{-# INLINE inlineResponse200MessageL #-}



-- * InvalidApiKeyError

-- | 'invalidApiKeyErrorResult' Lens
invalidApiKeyErrorResultL :: Lens_' InvalidApiKeyError (AnyType)
invalidApiKeyErrorResultL f InvalidApiKeyError{..} = (\invalidApiKeyErrorResult -> InvalidApiKeyError { invalidApiKeyErrorResult, ..} ) <$> f invalidApiKeyErrorResult
{-# INLINE invalidApiKeyErrorResultL #-}

-- | 'invalidApiKeyErrorMsg' Lens
invalidApiKeyErrorMsgL :: Lens_' InvalidApiKeyError (AnyType)
invalidApiKeyErrorMsgL f InvalidApiKeyError{..} = (\invalidApiKeyErrorMsg -> InvalidApiKeyError { invalidApiKeyErrorMsg, ..} ) <$> f invalidApiKeyErrorMsg
{-# INLINE invalidApiKeyErrorMsgL #-}



-- * InvalidMessageError

-- | 'invalidMessageErrorResult' Lens
invalidMessageErrorResultL :: Lens_' InvalidMessageError (AnyType)
invalidMessageErrorResultL f InvalidMessageError{..} = (\invalidMessageErrorResult -> InvalidMessageError { invalidMessageErrorResult, ..} ) <$> f invalidMessageErrorResult
{-# INLINE invalidMessageErrorResultL #-}

-- | 'invalidMessageErrorMsg' Lens
invalidMessageErrorMsgL :: Lens_' InvalidMessageError (AnyType)
invalidMessageErrorMsgL f InvalidMessageError{..} = (\invalidMessageErrorMsg -> InvalidMessageError { invalidMessageErrorMsg, ..} ) <$> f invalidMessageErrorMsg
{-# INLINE invalidMessageErrorMsgL #-}

-- | 'invalidMessageErrorRawContent' Lens
invalidMessageErrorRawContentL :: Lens_' InvalidMessageError (Maybe Text)
invalidMessageErrorRawContentL f InvalidMessageError{..} = (\invalidMessageErrorRawContent -> InvalidMessageError { invalidMessageErrorRawContent, ..} ) <$> f invalidMessageErrorRawContent
{-# INLINE invalidMessageErrorRawContentL #-}



-- * InvalidMessageErrorAllOf

-- | 'invalidMessageErrorAllOfResult' Lens
invalidMessageErrorAllOfResultL :: Lens_' InvalidMessageErrorAllOf (Maybe AnyType)
invalidMessageErrorAllOfResultL f InvalidMessageErrorAllOf{..} = (\invalidMessageErrorAllOfResult -> InvalidMessageErrorAllOf { invalidMessageErrorAllOfResult, ..} ) <$> f invalidMessageErrorAllOfResult
{-# INLINE invalidMessageErrorAllOfResultL #-}

-- | 'invalidMessageErrorAllOfMsg' Lens
invalidMessageErrorAllOfMsgL :: Lens_' InvalidMessageErrorAllOf (Maybe AnyType)
invalidMessageErrorAllOfMsgL f InvalidMessageErrorAllOf{..} = (\invalidMessageErrorAllOfMsg -> InvalidMessageErrorAllOf { invalidMessageErrorAllOfMsg, ..} ) <$> f invalidMessageErrorAllOfMsg
{-# INLINE invalidMessageErrorAllOfMsgL #-}

-- | 'invalidMessageErrorAllOfRawContent' Lens
invalidMessageErrorAllOfRawContentL :: Lens_' InvalidMessageErrorAllOf (Maybe Text)
invalidMessageErrorAllOfRawContentL f InvalidMessageErrorAllOf{..} = (\invalidMessageErrorAllOfRawContent -> InvalidMessageErrorAllOf { invalidMessageErrorAllOfRawContent, ..} ) <$> f invalidMessageErrorAllOfRawContent
{-# INLINE invalidMessageErrorAllOfRawContentL #-}



-- * JsonError

-- | 'jsonErrorResult' Lens
jsonErrorResultL :: Lens_' JsonError (AnyType)
jsonErrorResultL f JsonError{..} = (\jsonErrorResult -> JsonError { jsonErrorResult, ..} ) <$> f jsonErrorResult
{-# INLINE jsonErrorResultL #-}

-- | 'jsonErrorMsg' Lens
jsonErrorMsgL :: Lens_' JsonError (AnyType)
jsonErrorMsgL f JsonError{..} = (\jsonErrorMsg -> JsonError { jsonErrorMsg, ..} ) <$> f jsonErrorMsg
{-# INLINE jsonErrorMsgL #-}



-- * JsonErrorBase

-- | 'jsonErrorBaseResult' Lens
jsonErrorBaseResultL :: Lens_' JsonErrorBase (E'Result2)
jsonErrorBaseResultL f JsonErrorBase{..} = (\jsonErrorBaseResult -> JsonErrorBase { jsonErrorBaseResult, ..} ) <$> f jsonErrorBaseResult
{-# INLINE jsonErrorBaseResultL #-}

-- | 'jsonErrorBaseMsg' Lens
jsonErrorBaseMsgL :: Lens_' JsonErrorBase (Text)
jsonErrorBaseMsgL f JsonErrorBase{..} = (\jsonErrorBaseMsg -> JsonErrorBase { jsonErrorBaseMsg, ..} ) <$> f jsonErrorBaseMsg
{-# INLINE jsonErrorBaseMsgL #-}



-- * JsonErrorBaseAllOf

-- | 'jsonErrorBaseAllOfResult' Lens
jsonErrorBaseAllOfResultL :: Lens_' JsonErrorBaseAllOf (E'Result2)
jsonErrorBaseAllOfResultL f JsonErrorBaseAllOf{..} = (\jsonErrorBaseAllOfResult -> JsonErrorBaseAllOf { jsonErrorBaseAllOfResult, ..} ) <$> f jsonErrorBaseAllOfResult
{-# INLINE jsonErrorBaseAllOfResultL #-}

-- | 'jsonErrorBaseAllOfMsg' Lens
jsonErrorBaseAllOfMsgL :: Lens_' JsonErrorBaseAllOf (Text)
jsonErrorBaseAllOfMsgL f JsonErrorBaseAllOf{..} = (\jsonErrorBaseAllOfMsg -> JsonErrorBaseAllOf { jsonErrorBaseAllOfMsg, ..} ) <$> f jsonErrorBaseAllOfMsg
{-# INLINE jsonErrorBaseAllOfMsgL #-}



-- * JsonResponseBase

-- | 'jsonResponseBaseResult' Lens
jsonResponseBaseResultL :: Lens_' JsonResponseBase (Maybe Text)
jsonResponseBaseResultL f JsonResponseBase{..} = (\jsonResponseBaseResult -> JsonResponseBase { jsonResponseBaseResult, ..} ) <$> f jsonResponseBaseResult
{-# INLINE jsonResponseBaseResultL #-}



-- * JsonSuccess

-- | 'jsonSuccessResult' Lens
jsonSuccessResultL :: Lens_' JsonSuccess (AnyType)
jsonSuccessResultL f JsonSuccess{..} = (\jsonSuccessResult -> JsonSuccess { jsonSuccessResult, ..} ) <$> f jsonSuccessResult
{-# INLINE jsonSuccessResultL #-}

-- | 'jsonSuccessMsg' Lens
jsonSuccessMsgL :: Lens_' JsonSuccess (AnyType)
jsonSuccessMsgL f JsonSuccess{..} = (\jsonSuccessMsg -> JsonSuccess { jsonSuccessMsg, ..} ) <$> f jsonSuccessMsg
{-# INLINE jsonSuccessMsgL #-}



-- * JsonSuccessAllOf

-- | 'jsonSuccessAllOfResult' Lens
jsonSuccessAllOfResultL :: Lens_' JsonSuccessAllOf (Maybe AnyType)
jsonSuccessAllOfResultL f JsonSuccessAllOf{..} = (\jsonSuccessAllOfResult -> JsonSuccessAllOf { jsonSuccessAllOfResult, ..} ) <$> f jsonSuccessAllOfResult
{-# INLINE jsonSuccessAllOfResultL #-}

-- | 'jsonSuccessAllOfMsg' Lens
jsonSuccessAllOfMsgL :: Lens_' JsonSuccessAllOf (Maybe AnyType)
jsonSuccessAllOfMsgL f JsonSuccessAllOf{..} = (\jsonSuccessAllOfMsg -> JsonSuccessAllOf { jsonSuccessAllOfMsg, ..} ) <$> f jsonSuccessAllOfMsg
{-# INLINE jsonSuccessAllOfMsgL #-}



-- * JsonSuccessBase

-- | 'jsonSuccessBaseResult' Lens
jsonSuccessBaseResultL :: Lens_' JsonSuccessBase (E'Result)
jsonSuccessBaseResultL f JsonSuccessBase{..} = (\jsonSuccessBaseResult -> JsonSuccessBase { jsonSuccessBaseResult, ..} ) <$> f jsonSuccessBaseResult
{-# INLINE jsonSuccessBaseResultL #-}

-- | 'jsonSuccessBaseMsg' Lens
jsonSuccessBaseMsgL :: Lens_' JsonSuccessBase (Text)
jsonSuccessBaseMsgL f JsonSuccessBase{..} = (\jsonSuccessBaseMsg -> JsonSuccessBase { jsonSuccessBaseMsg, ..} ) <$> f jsonSuccessBaseMsg
{-# INLINE jsonSuccessBaseMsgL #-}



-- * JsonSuccessBaseAllOf

-- | 'jsonSuccessBaseAllOfResult' Lens
jsonSuccessBaseAllOfResultL :: Lens_' JsonSuccessBaseAllOf (E'Result)
jsonSuccessBaseAllOfResultL f JsonSuccessBaseAllOf{..} = (\jsonSuccessBaseAllOfResult -> JsonSuccessBaseAllOf { jsonSuccessBaseAllOfResult, ..} ) <$> f jsonSuccessBaseAllOfResult
{-# INLINE jsonSuccessBaseAllOfResultL #-}

-- | 'jsonSuccessBaseAllOfMsg' Lens
jsonSuccessBaseAllOfMsgL :: Lens_' JsonSuccessBaseAllOf (Text)
jsonSuccessBaseAllOfMsgL f JsonSuccessBaseAllOf{..} = (\jsonSuccessBaseAllOfMsg -> JsonSuccessBaseAllOf { jsonSuccessBaseAllOfMsg, ..} ) <$> f jsonSuccessBaseAllOfMsg
{-# INLINE jsonSuccessBaseAllOfMsgL #-}



-- * Messages

-- | 'messagesAvatarUrl' Lens
messagesAvatarUrlL :: Lens_' Messages (Maybe AnyType)
messagesAvatarUrlL f Messages{..} = (\messagesAvatarUrl -> Messages { messagesAvatarUrl, ..} ) <$> f messagesAvatarUrl
{-# INLINE messagesAvatarUrlL #-}

-- | 'messagesClient' Lens
messagesClientL :: Lens_' Messages (Maybe AnyType)
messagesClientL f Messages{..} = (\messagesClient -> Messages { messagesClient, ..} ) <$> f messagesClient
{-# INLINE messagesClientL #-}

-- | 'messagesContent' Lens
messagesContentL :: Lens_' Messages (Maybe AnyType)
messagesContentL f Messages{..} = (\messagesContent -> Messages { messagesContent, ..} ) <$> f messagesContent
{-# INLINE messagesContentL #-}

-- | 'messagesContentType' Lens
messagesContentTypeL :: Lens_' Messages (Maybe AnyType)
messagesContentTypeL f Messages{..} = (\messagesContentType -> Messages { messagesContentType, ..} ) <$> f messagesContentType
{-# INLINE messagesContentTypeL #-}

-- | 'messagesDisplayRecipient' Lens
messagesDisplayRecipientL :: Lens_' Messages (Maybe AnyType)
messagesDisplayRecipientL f Messages{..} = (\messagesDisplayRecipient -> Messages { messagesDisplayRecipient, ..} ) <$> f messagesDisplayRecipient
{-# INLINE messagesDisplayRecipientL #-}

-- | 'messagesId' Lens
messagesIdL :: Lens_' Messages (Maybe AnyType)
messagesIdL f Messages{..} = (\messagesId -> Messages { messagesId, ..} ) <$> f messagesId
{-# INLINE messagesIdL #-}

-- | 'messagesIsMeMessage' Lens
messagesIsMeMessageL :: Lens_' Messages (Maybe AnyType)
messagesIsMeMessageL f Messages{..} = (\messagesIsMeMessage -> Messages { messagesIsMeMessage, ..} ) <$> f messagesIsMeMessage
{-# INLINE messagesIsMeMessageL #-}

-- | 'messagesReactions' Lens
messagesReactionsL :: Lens_' Messages (Maybe AnyType)
messagesReactionsL f Messages{..} = (\messagesReactions -> Messages { messagesReactions, ..} ) <$> f messagesReactions
{-# INLINE messagesReactionsL #-}

-- | 'messagesRecipientId' Lens
messagesRecipientIdL :: Lens_' Messages (Maybe AnyType)
messagesRecipientIdL f Messages{..} = (\messagesRecipientId -> Messages { messagesRecipientId, ..} ) <$> f messagesRecipientId
{-# INLINE messagesRecipientIdL #-}

-- | 'messagesSenderEmail' Lens
messagesSenderEmailL :: Lens_' Messages (Maybe AnyType)
messagesSenderEmailL f Messages{..} = (\messagesSenderEmail -> Messages { messagesSenderEmail, ..} ) <$> f messagesSenderEmail
{-# INLINE messagesSenderEmailL #-}

-- | 'messagesSenderFullName' Lens
messagesSenderFullNameL :: Lens_' Messages (Maybe AnyType)
messagesSenderFullNameL f Messages{..} = (\messagesSenderFullName -> Messages { messagesSenderFullName, ..} ) <$> f messagesSenderFullName
{-# INLINE messagesSenderFullNameL #-}

-- | 'messagesSenderId' Lens
messagesSenderIdL :: Lens_' Messages (Maybe AnyType)
messagesSenderIdL f Messages{..} = (\messagesSenderId -> Messages { messagesSenderId, ..} ) <$> f messagesSenderId
{-# INLINE messagesSenderIdL #-}

-- | 'messagesSenderRealmStr' Lens
messagesSenderRealmStrL :: Lens_' Messages (Maybe AnyType)
messagesSenderRealmStrL f Messages{..} = (\messagesSenderRealmStr -> Messages { messagesSenderRealmStr, ..} ) <$> f messagesSenderRealmStr
{-# INLINE messagesSenderRealmStrL #-}

-- | 'messagesStreamId' Lens
messagesStreamIdL :: Lens_' Messages (Maybe AnyType)
messagesStreamIdL f Messages{..} = (\messagesStreamId -> Messages { messagesStreamId, ..} ) <$> f messagesStreamId
{-# INLINE messagesStreamIdL #-}

-- | 'messagesSubject' Lens
messagesSubjectL :: Lens_' Messages (Maybe AnyType)
messagesSubjectL f Messages{..} = (\messagesSubject -> Messages { messagesSubject, ..} ) <$> f messagesSubject
{-# INLINE messagesSubjectL #-}

-- | 'messagesTopicLinks' Lens
messagesTopicLinksL :: Lens_' Messages (Maybe AnyType)
messagesTopicLinksL f Messages{..} = (\messagesTopicLinks -> Messages { messagesTopicLinks, ..} ) <$> f messagesTopicLinks
{-# INLINE messagesTopicLinksL #-}

-- | 'messagesSubmessages' Lens
messagesSubmessagesL :: Lens_' Messages (Maybe AnyType)
messagesSubmessagesL f Messages{..} = (\messagesSubmessages -> Messages { messagesSubmessages, ..} ) <$> f messagesSubmessages
{-# INLINE messagesSubmessagesL #-}

-- | 'messagesTimestamp' Lens
messagesTimestampL :: Lens_' Messages (Maybe AnyType)
messagesTimestampL f Messages{..} = (\messagesTimestamp -> Messages { messagesTimestamp, ..} ) <$> f messagesTimestamp
{-# INLINE messagesTimestampL #-}

-- | 'messagesType' Lens
messagesTypeL :: Lens_' Messages (Maybe AnyType)
messagesTypeL f Messages{..} = (\messagesType -> Messages { messagesType, ..} ) <$> f messagesType
{-# INLINE messagesTypeL #-}



-- * MessagesAllOf

-- | 'messagesAllOfAvatarUrl' Lens
messagesAllOfAvatarUrlL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfAvatarUrlL f MessagesAllOf{..} = (\messagesAllOfAvatarUrl -> MessagesAllOf { messagesAllOfAvatarUrl, ..} ) <$> f messagesAllOfAvatarUrl
{-# INLINE messagesAllOfAvatarUrlL #-}

-- | 'messagesAllOfClient' Lens
messagesAllOfClientL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfClientL f MessagesAllOf{..} = (\messagesAllOfClient -> MessagesAllOf { messagesAllOfClient, ..} ) <$> f messagesAllOfClient
{-# INLINE messagesAllOfClientL #-}

-- | 'messagesAllOfContent' Lens
messagesAllOfContentL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfContentL f MessagesAllOf{..} = (\messagesAllOfContent -> MessagesAllOf { messagesAllOfContent, ..} ) <$> f messagesAllOfContent
{-# INLINE messagesAllOfContentL #-}

-- | 'messagesAllOfContentType' Lens
messagesAllOfContentTypeL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfContentTypeL f MessagesAllOf{..} = (\messagesAllOfContentType -> MessagesAllOf { messagesAllOfContentType, ..} ) <$> f messagesAllOfContentType
{-# INLINE messagesAllOfContentTypeL #-}

-- | 'messagesAllOfDisplayRecipient' Lens
messagesAllOfDisplayRecipientL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfDisplayRecipientL f MessagesAllOf{..} = (\messagesAllOfDisplayRecipient -> MessagesAllOf { messagesAllOfDisplayRecipient, ..} ) <$> f messagesAllOfDisplayRecipient
{-# INLINE messagesAllOfDisplayRecipientL #-}

-- | 'messagesAllOfId' Lens
messagesAllOfIdL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfIdL f MessagesAllOf{..} = (\messagesAllOfId -> MessagesAllOf { messagesAllOfId, ..} ) <$> f messagesAllOfId
{-# INLINE messagesAllOfIdL #-}

-- | 'messagesAllOfIsMeMessage' Lens
messagesAllOfIsMeMessageL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfIsMeMessageL f MessagesAllOf{..} = (\messagesAllOfIsMeMessage -> MessagesAllOf { messagesAllOfIsMeMessage, ..} ) <$> f messagesAllOfIsMeMessage
{-# INLINE messagesAllOfIsMeMessageL #-}

-- | 'messagesAllOfReactions' Lens
messagesAllOfReactionsL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfReactionsL f MessagesAllOf{..} = (\messagesAllOfReactions -> MessagesAllOf { messagesAllOfReactions, ..} ) <$> f messagesAllOfReactions
{-# INLINE messagesAllOfReactionsL #-}

-- | 'messagesAllOfRecipientId' Lens
messagesAllOfRecipientIdL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfRecipientIdL f MessagesAllOf{..} = (\messagesAllOfRecipientId -> MessagesAllOf { messagesAllOfRecipientId, ..} ) <$> f messagesAllOfRecipientId
{-# INLINE messagesAllOfRecipientIdL #-}

-- | 'messagesAllOfSenderEmail' Lens
messagesAllOfSenderEmailL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfSenderEmailL f MessagesAllOf{..} = (\messagesAllOfSenderEmail -> MessagesAllOf { messagesAllOfSenderEmail, ..} ) <$> f messagesAllOfSenderEmail
{-# INLINE messagesAllOfSenderEmailL #-}

-- | 'messagesAllOfSenderFullName' Lens
messagesAllOfSenderFullNameL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfSenderFullNameL f MessagesAllOf{..} = (\messagesAllOfSenderFullName -> MessagesAllOf { messagesAllOfSenderFullName, ..} ) <$> f messagesAllOfSenderFullName
{-# INLINE messagesAllOfSenderFullNameL #-}

-- | 'messagesAllOfSenderId' Lens
messagesAllOfSenderIdL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfSenderIdL f MessagesAllOf{..} = (\messagesAllOfSenderId -> MessagesAllOf { messagesAllOfSenderId, ..} ) <$> f messagesAllOfSenderId
{-# INLINE messagesAllOfSenderIdL #-}

-- | 'messagesAllOfSenderRealmStr' Lens
messagesAllOfSenderRealmStrL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfSenderRealmStrL f MessagesAllOf{..} = (\messagesAllOfSenderRealmStr -> MessagesAllOf { messagesAllOfSenderRealmStr, ..} ) <$> f messagesAllOfSenderRealmStr
{-# INLINE messagesAllOfSenderRealmStrL #-}

-- | 'messagesAllOfStreamId' Lens
messagesAllOfStreamIdL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfStreamIdL f MessagesAllOf{..} = (\messagesAllOfStreamId -> MessagesAllOf { messagesAllOfStreamId, ..} ) <$> f messagesAllOfStreamId
{-# INLINE messagesAllOfStreamIdL #-}

-- | 'messagesAllOfSubject' Lens
messagesAllOfSubjectL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfSubjectL f MessagesAllOf{..} = (\messagesAllOfSubject -> MessagesAllOf { messagesAllOfSubject, ..} ) <$> f messagesAllOfSubject
{-# INLINE messagesAllOfSubjectL #-}

-- | 'messagesAllOfTopicLinks' Lens
messagesAllOfTopicLinksL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfTopicLinksL f MessagesAllOf{..} = (\messagesAllOfTopicLinks -> MessagesAllOf { messagesAllOfTopicLinks, ..} ) <$> f messagesAllOfTopicLinks
{-# INLINE messagesAllOfTopicLinksL #-}

-- | 'messagesAllOfSubmessages' Lens
messagesAllOfSubmessagesL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfSubmessagesL f MessagesAllOf{..} = (\messagesAllOfSubmessages -> MessagesAllOf { messagesAllOfSubmessages, ..} ) <$> f messagesAllOfSubmessages
{-# INLINE messagesAllOfSubmessagesL #-}

-- | 'messagesAllOfTimestamp' Lens
messagesAllOfTimestampL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfTimestampL f MessagesAllOf{..} = (\messagesAllOfTimestamp -> MessagesAllOf { messagesAllOfTimestamp, ..} ) <$> f messagesAllOfTimestamp
{-# INLINE messagesAllOfTimestampL #-}

-- | 'messagesAllOfType' Lens
messagesAllOfTypeL :: Lens_' MessagesAllOf (Maybe AnyType)
messagesAllOfTypeL f MessagesAllOf{..} = (\messagesAllOfType -> MessagesAllOf { messagesAllOfType, ..} ) <$> f messagesAllOfType
{-# INLINE messagesAllOfTypeL #-}



-- * MessagesBase

-- | 'messagesBaseAvatarUrl' Lens
messagesBaseAvatarUrlL :: Lens_' MessagesBase (Maybe Text)
messagesBaseAvatarUrlL f MessagesBase{..} = (\messagesBaseAvatarUrl -> MessagesBase { messagesBaseAvatarUrl, ..} ) <$> f messagesBaseAvatarUrl
{-# INLINE messagesBaseAvatarUrlL #-}

-- | 'messagesBaseClient' Lens
messagesBaseClientL :: Lens_' MessagesBase (Maybe Text)
messagesBaseClientL f MessagesBase{..} = (\messagesBaseClient -> MessagesBase { messagesBaseClient, ..} ) <$> f messagesBaseClient
{-# INLINE messagesBaseClientL #-}

-- | 'messagesBaseContent' Lens
messagesBaseContentL :: Lens_' MessagesBase (Maybe Text)
messagesBaseContentL f MessagesBase{..} = (\messagesBaseContent -> MessagesBase { messagesBaseContent, ..} ) <$> f messagesBaseContent
{-# INLINE messagesBaseContentL #-}

-- | 'messagesBaseContentType' Lens
messagesBaseContentTypeL :: Lens_' MessagesBase (Maybe Text)
messagesBaseContentTypeL f MessagesBase{..} = (\messagesBaseContentType -> MessagesBase { messagesBaseContentType, ..} ) <$> f messagesBaseContentType
{-# INLINE messagesBaseContentTypeL #-}

-- | 'messagesBaseDisplayRecipient' Lens
messagesBaseDisplayRecipientL :: Lens_' MessagesBase (Maybe OneOfstringarray)
messagesBaseDisplayRecipientL f MessagesBase{..} = (\messagesBaseDisplayRecipient -> MessagesBase { messagesBaseDisplayRecipient, ..} ) <$> f messagesBaseDisplayRecipient
{-# INLINE messagesBaseDisplayRecipientL #-}

-- | 'messagesBaseId' Lens
messagesBaseIdL :: Lens_' MessagesBase (Maybe Int)
messagesBaseIdL f MessagesBase{..} = (\messagesBaseId -> MessagesBase { messagesBaseId, ..} ) <$> f messagesBaseId
{-# INLINE messagesBaseIdL #-}

-- | 'messagesBaseIsMeMessage' Lens
messagesBaseIsMeMessageL :: Lens_' MessagesBase (Maybe Bool)
messagesBaseIsMeMessageL f MessagesBase{..} = (\messagesBaseIsMeMessage -> MessagesBase { messagesBaseIsMeMessage, ..} ) <$> f messagesBaseIsMeMessage
{-# INLINE messagesBaseIsMeMessageL #-}

-- | 'messagesBaseReactions' Lens
messagesBaseReactionsL :: Lens_' MessagesBase (Maybe [EmojiReaction])
messagesBaseReactionsL f MessagesBase{..} = (\messagesBaseReactions -> MessagesBase { messagesBaseReactions, ..} ) <$> f messagesBaseReactions
{-# INLINE messagesBaseReactionsL #-}

-- | 'messagesBaseRecipientId' Lens
messagesBaseRecipientIdL :: Lens_' MessagesBase (Maybe Int)
messagesBaseRecipientIdL f MessagesBase{..} = (\messagesBaseRecipientId -> MessagesBase { messagesBaseRecipientId, ..} ) <$> f messagesBaseRecipientId
{-# INLINE messagesBaseRecipientIdL #-}

-- | 'messagesBaseSenderEmail' Lens
messagesBaseSenderEmailL :: Lens_' MessagesBase (Maybe Text)
messagesBaseSenderEmailL f MessagesBase{..} = (\messagesBaseSenderEmail -> MessagesBase { messagesBaseSenderEmail, ..} ) <$> f messagesBaseSenderEmail
{-# INLINE messagesBaseSenderEmailL #-}

-- | 'messagesBaseSenderFullName' Lens
messagesBaseSenderFullNameL :: Lens_' MessagesBase (Maybe Text)
messagesBaseSenderFullNameL f MessagesBase{..} = (\messagesBaseSenderFullName -> MessagesBase { messagesBaseSenderFullName, ..} ) <$> f messagesBaseSenderFullName
{-# INLINE messagesBaseSenderFullNameL #-}

-- | 'messagesBaseSenderId' Lens
messagesBaseSenderIdL :: Lens_' MessagesBase (Maybe Int)
messagesBaseSenderIdL f MessagesBase{..} = (\messagesBaseSenderId -> MessagesBase { messagesBaseSenderId, ..} ) <$> f messagesBaseSenderId
{-# INLINE messagesBaseSenderIdL #-}

-- | 'messagesBaseSenderRealmStr' Lens
messagesBaseSenderRealmStrL :: Lens_' MessagesBase (Maybe Text)
messagesBaseSenderRealmStrL f MessagesBase{..} = (\messagesBaseSenderRealmStr -> MessagesBase { messagesBaseSenderRealmStr, ..} ) <$> f messagesBaseSenderRealmStr
{-# INLINE messagesBaseSenderRealmStrL #-}

-- | 'messagesBaseStreamId' Lens
messagesBaseStreamIdL :: Lens_' MessagesBase (Maybe Int)
messagesBaseStreamIdL f MessagesBase{..} = (\messagesBaseStreamId -> MessagesBase { messagesBaseStreamId, ..} ) <$> f messagesBaseStreamId
{-# INLINE messagesBaseStreamIdL #-}

-- | 'messagesBaseSubject' Lens
messagesBaseSubjectL :: Lens_' MessagesBase (Maybe Text)
messagesBaseSubjectL f MessagesBase{..} = (\messagesBaseSubject -> MessagesBase { messagesBaseSubject, ..} ) <$> f messagesBaseSubject
{-# INLINE messagesBaseSubjectL #-}

-- | 'messagesBaseTopicLinks' Lens
messagesBaseTopicLinksL :: Lens_' MessagesBase (Maybe [MessagesBaseTopicLinks])
messagesBaseTopicLinksL f MessagesBase{..} = (\messagesBaseTopicLinks -> MessagesBase { messagesBaseTopicLinks, ..} ) <$> f messagesBaseTopicLinks
{-# INLINE messagesBaseTopicLinksL #-}

-- | 'messagesBaseSubmessages' Lens
messagesBaseSubmessagesL :: Lens_' MessagesBase (Maybe [Text])
messagesBaseSubmessagesL f MessagesBase{..} = (\messagesBaseSubmessages -> MessagesBase { messagesBaseSubmessages, ..} ) <$> f messagesBaseSubmessages
{-# INLINE messagesBaseSubmessagesL #-}

-- | 'messagesBaseTimestamp' Lens
messagesBaseTimestampL :: Lens_' MessagesBase (Maybe Int)
messagesBaseTimestampL f MessagesBase{..} = (\messagesBaseTimestamp -> MessagesBase { messagesBaseTimestamp, ..} ) <$> f messagesBaseTimestamp
{-# INLINE messagesBaseTimestampL #-}

-- | 'messagesBaseType' Lens
messagesBaseTypeL :: Lens_' MessagesBase (Maybe Text)
messagesBaseTypeL f MessagesBase{..} = (\messagesBaseType -> MessagesBase { messagesBaseType, ..} ) <$> f messagesBaseType
{-# INLINE messagesBaseTypeL #-}



-- * MessagesBaseTopicLinks

-- | 'messagesBaseTopicLinksText' Lens
messagesBaseTopicLinksTextL :: Lens_' MessagesBaseTopicLinks (Maybe Text)
messagesBaseTopicLinksTextL f MessagesBaseTopicLinks{..} = (\messagesBaseTopicLinksText -> MessagesBaseTopicLinks { messagesBaseTopicLinksText, ..} ) <$> f messagesBaseTopicLinksText
{-# INLINE messagesBaseTopicLinksTextL #-}

-- | 'messagesBaseTopicLinksUrl' Lens
messagesBaseTopicLinksUrlL :: Lens_' MessagesBaseTopicLinks (Maybe Text)
messagesBaseTopicLinksUrlL f MessagesBaseTopicLinks{..} = (\messagesBaseTopicLinksUrl -> MessagesBaseTopicLinks { messagesBaseTopicLinksUrl, ..} ) <$> f messagesBaseTopicLinksUrl
{-# INLINE messagesBaseTopicLinksUrlL #-}



-- * MissingArgumentError

-- | 'missingArgumentErrorResult' Lens
missingArgumentErrorResultL :: Lens_' MissingArgumentError (AnyType)
missingArgumentErrorResultL f MissingArgumentError{..} = (\missingArgumentErrorResult -> MissingArgumentError { missingArgumentErrorResult, ..} ) <$> f missingArgumentErrorResult
{-# INLINE missingArgumentErrorResultL #-}

-- | 'missingArgumentErrorMsg' Lens
missingArgumentErrorMsgL :: Lens_' MissingArgumentError (AnyType)
missingArgumentErrorMsgL f MissingArgumentError{..} = (\missingArgumentErrorMsg -> MissingArgumentError { missingArgumentErrorMsg, ..} ) <$> f missingArgumentErrorMsg
{-# INLINE missingArgumentErrorMsgL #-}

-- | 'missingArgumentErrorCode' Lens
missingArgumentErrorCodeL :: Lens_' MissingArgumentError (Maybe AnyType)
missingArgumentErrorCodeL f MissingArgumentError{..} = (\missingArgumentErrorCode -> MissingArgumentError { missingArgumentErrorCode, ..} ) <$> f missingArgumentErrorCode
{-# INLINE missingArgumentErrorCodeL #-}

-- | 'missingArgumentErrorVarName' Lens
missingArgumentErrorVarNameL :: Lens_' MissingArgumentError (Maybe Text)
missingArgumentErrorVarNameL f MissingArgumentError{..} = (\missingArgumentErrorVarName -> MissingArgumentError { missingArgumentErrorVarName, ..} ) <$> f missingArgumentErrorVarName
{-# INLINE missingArgumentErrorVarNameL #-}



-- * MissingArgumentErrorAllOf

-- | 'missingArgumentErrorAllOfResult' Lens
missingArgumentErrorAllOfResultL :: Lens_' MissingArgumentErrorAllOf (Maybe AnyType)
missingArgumentErrorAllOfResultL f MissingArgumentErrorAllOf{..} = (\missingArgumentErrorAllOfResult -> MissingArgumentErrorAllOf { missingArgumentErrorAllOfResult, ..} ) <$> f missingArgumentErrorAllOfResult
{-# INLINE missingArgumentErrorAllOfResultL #-}

-- | 'missingArgumentErrorAllOfMsg' Lens
missingArgumentErrorAllOfMsgL :: Lens_' MissingArgumentErrorAllOf (Maybe AnyType)
missingArgumentErrorAllOfMsgL f MissingArgumentErrorAllOf{..} = (\missingArgumentErrorAllOfMsg -> MissingArgumentErrorAllOf { missingArgumentErrorAllOfMsg, ..} ) <$> f missingArgumentErrorAllOfMsg
{-# INLINE missingArgumentErrorAllOfMsgL #-}

-- | 'missingArgumentErrorAllOfCode' Lens
missingArgumentErrorAllOfCodeL :: Lens_' MissingArgumentErrorAllOf (Maybe AnyType)
missingArgumentErrorAllOfCodeL f MissingArgumentErrorAllOf{..} = (\missingArgumentErrorAllOfCode -> MissingArgumentErrorAllOf { missingArgumentErrorAllOfCode, ..} ) <$> f missingArgumentErrorAllOfCode
{-# INLINE missingArgumentErrorAllOfCodeL #-}

-- | 'missingArgumentErrorAllOfVarName' Lens
missingArgumentErrorAllOfVarNameL :: Lens_' MissingArgumentErrorAllOf (Maybe Text)
missingArgumentErrorAllOfVarNameL f MissingArgumentErrorAllOf{..} = (\missingArgumentErrorAllOfVarName -> MissingArgumentErrorAllOf { missingArgumentErrorAllOfVarName, ..} ) <$> f missingArgumentErrorAllOfVarName
{-# INLINE missingArgumentErrorAllOfVarNameL #-}



-- * NonExistingStreamError

-- | 'nonExistingStreamErrorResult' Lens
nonExistingStreamErrorResultL :: Lens_' NonExistingStreamError (AnyType)
nonExistingStreamErrorResultL f NonExistingStreamError{..} = (\nonExistingStreamErrorResult -> NonExistingStreamError { nonExistingStreamErrorResult, ..} ) <$> f nonExistingStreamErrorResult
{-# INLINE nonExistingStreamErrorResultL #-}

-- | 'nonExistingStreamErrorMsg' Lens
nonExistingStreamErrorMsgL :: Lens_' NonExistingStreamError (AnyType)
nonExistingStreamErrorMsgL f NonExistingStreamError{..} = (\nonExistingStreamErrorMsg -> NonExistingStreamError { nonExistingStreamErrorMsg, ..} ) <$> f nonExistingStreamErrorMsg
{-# INLINE nonExistingStreamErrorMsgL #-}

-- | 'nonExistingStreamErrorCode' Lens
nonExistingStreamErrorCodeL :: Lens_' NonExistingStreamError (Maybe AnyType)
nonExistingStreamErrorCodeL f NonExistingStreamError{..} = (\nonExistingStreamErrorCode -> NonExistingStreamError { nonExistingStreamErrorCode, ..} ) <$> f nonExistingStreamErrorCode
{-# INLINE nonExistingStreamErrorCodeL #-}

-- | 'nonExistingStreamErrorStream' Lens
nonExistingStreamErrorStreamL :: Lens_' NonExistingStreamError (Maybe Text)
nonExistingStreamErrorStreamL f NonExistingStreamError{..} = (\nonExistingStreamErrorStream -> NonExistingStreamError { nonExistingStreamErrorStream, ..} ) <$> f nonExistingStreamErrorStream
{-# INLINE nonExistingStreamErrorStreamL #-}



-- * NonExistingStreamErrorAllOf

-- | 'nonExistingStreamErrorAllOfResult' Lens
nonExistingStreamErrorAllOfResultL :: Lens_' NonExistingStreamErrorAllOf (Maybe AnyType)
nonExistingStreamErrorAllOfResultL f NonExistingStreamErrorAllOf{..} = (\nonExistingStreamErrorAllOfResult -> NonExistingStreamErrorAllOf { nonExistingStreamErrorAllOfResult, ..} ) <$> f nonExistingStreamErrorAllOfResult
{-# INLINE nonExistingStreamErrorAllOfResultL #-}

-- | 'nonExistingStreamErrorAllOfMsg' Lens
nonExistingStreamErrorAllOfMsgL :: Lens_' NonExistingStreamErrorAllOf (Maybe AnyType)
nonExistingStreamErrorAllOfMsgL f NonExistingStreamErrorAllOf{..} = (\nonExistingStreamErrorAllOfMsg -> NonExistingStreamErrorAllOf { nonExistingStreamErrorAllOfMsg, ..} ) <$> f nonExistingStreamErrorAllOfMsg
{-# INLINE nonExistingStreamErrorAllOfMsgL #-}

-- | 'nonExistingStreamErrorAllOfCode' Lens
nonExistingStreamErrorAllOfCodeL :: Lens_' NonExistingStreamErrorAllOf (Maybe AnyType)
nonExistingStreamErrorAllOfCodeL f NonExistingStreamErrorAllOf{..} = (\nonExistingStreamErrorAllOfCode -> NonExistingStreamErrorAllOf { nonExistingStreamErrorAllOfCode, ..} ) <$> f nonExistingStreamErrorAllOfCode
{-# INLINE nonExistingStreamErrorAllOfCodeL #-}

-- | 'nonExistingStreamErrorAllOfStream' Lens
nonExistingStreamErrorAllOfStreamL :: Lens_' NonExistingStreamErrorAllOf (Maybe Text)
nonExistingStreamErrorAllOfStreamL f NonExistingStreamErrorAllOf{..} = (\nonExistingStreamErrorAllOfStream -> NonExistingStreamErrorAllOf { nonExistingStreamErrorAllOfStream, ..} ) <$> f nonExistingStreamErrorAllOfStream
{-# INLINE nonExistingStreamErrorAllOfStreamL #-}



-- * Presence

-- | 'presenceClient' Lens
presenceClientL :: Lens_' Presence (Maybe Text)
presenceClientL f Presence{..} = (\presenceClient -> Presence { presenceClient, ..} ) <$> f presenceClient
{-# INLINE presenceClientL #-}

-- | 'presenceStatus' Lens
presenceStatusL :: Lens_' Presence (Maybe E'Status)
presenceStatusL f Presence{..} = (\presenceStatus -> Presence { presenceStatus, ..} ) <$> f presenceStatus
{-# INLINE presenceStatusL #-}

-- | 'presenceTimestamp' Lens
presenceTimestampL :: Lens_' Presence (Maybe Int)
presenceTimestampL f Presence{..} = (\presenceTimestamp -> Presence { presenceTimestamp, ..} ) <$> f presenceTimestamp
{-# INLINE presenceTimestampL #-}

-- | 'presencePushable' Lens
presencePushableL :: Lens_' Presence (Maybe Bool)
presencePushableL f Presence{..} = (\presencePushable -> Presence { presencePushable, ..} ) <$> f presencePushable
{-# INLINE presencePushableL #-}



-- * RateLimitedError

-- | 'rateLimitedErrorResult' Lens
rateLimitedErrorResultL :: Lens_' RateLimitedError (AnyType)
rateLimitedErrorResultL f RateLimitedError{..} = (\rateLimitedErrorResult -> RateLimitedError { rateLimitedErrorResult, ..} ) <$> f rateLimitedErrorResult
{-# INLINE rateLimitedErrorResultL #-}

-- | 'rateLimitedErrorMsg' Lens
rateLimitedErrorMsgL :: Lens_' RateLimitedError (AnyType)
rateLimitedErrorMsgL f RateLimitedError{..} = (\rateLimitedErrorMsg -> RateLimitedError { rateLimitedErrorMsg, ..} ) <$> f rateLimitedErrorMsg
{-# INLINE rateLimitedErrorMsgL #-}

-- | 'rateLimitedErrorCode' Lens
rateLimitedErrorCodeL :: Lens_' RateLimitedError (Maybe AnyType)
rateLimitedErrorCodeL f RateLimitedError{..} = (\rateLimitedErrorCode -> RateLimitedError { rateLimitedErrorCode, ..} ) <$> f rateLimitedErrorCode
{-# INLINE rateLimitedErrorCodeL #-}



-- * RealmDeactivatedError

-- | 'realmDeactivatedErrorResult' Lens
realmDeactivatedErrorResultL :: Lens_' RealmDeactivatedError (AnyType)
realmDeactivatedErrorResultL f RealmDeactivatedError{..} = (\realmDeactivatedErrorResult -> RealmDeactivatedError { realmDeactivatedErrorResult, ..} ) <$> f realmDeactivatedErrorResult
{-# INLINE realmDeactivatedErrorResultL #-}

-- | 'realmDeactivatedErrorMsg' Lens
realmDeactivatedErrorMsgL :: Lens_' RealmDeactivatedError (AnyType)
realmDeactivatedErrorMsgL f RealmDeactivatedError{..} = (\realmDeactivatedErrorMsg -> RealmDeactivatedError { realmDeactivatedErrorMsg, ..} ) <$> f realmDeactivatedErrorMsg
{-# INLINE realmDeactivatedErrorMsgL #-}

-- | 'realmDeactivatedErrorCode' Lens
realmDeactivatedErrorCodeL :: Lens_' RealmDeactivatedError (Maybe AnyType)
realmDeactivatedErrorCodeL f RealmDeactivatedError{..} = (\realmDeactivatedErrorCode -> RealmDeactivatedError { realmDeactivatedErrorCode, ..} ) <$> f realmDeactivatedErrorCode
{-# INLINE realmDeactivatedErrorCodeL #-}



-- * RealmDomain

-- | 'realmDomainDomain' Lens
realmDomainDomainL :: Lens_' RealmDomain (Maybe Text)
realmDomainDomainL f RealmDomain{..} = (\realmDomainDomain -> RealmDomain { realmDomainDomain, ..} ) <$> f realmDomainDomain
{-# INLINE realmDomainDomainL #-}

-- | 'realmDomainAllowSubdomains' Lens
realmDomainAllowSubdomainsL :: Lens_' RealmDomain (Maybe Bool)
realmDomainAllowSubdomainsL f RealmDomain{..} = (\realmDomainAllowSubdomains -> RealmDomain { realmDomainAllowSubdomains, ..} ) <$> f realmDomainAllowSubdomains
{-# INLINE realmDomainAllowSubdomainsL #-}



-- * RealmEmoji

-- | 'realmEmojiId' Lens
realmEmojiIdL :: Lens_' RealmEmoji (Maybe Text)
realmEmojiIdL f RealmEmoji{..} = (\realmEmojiId -> RealmEmoji { realmEmojiId, ..} ) <$> f realmEmojiId
{-# INLINE realmEmojiIdL #-}

-- | 'realmEmojiName' Lens
realmEmojiNameL :: Lens_' RealmEmoji (Maybe Text)
realmEmojiNameL f RealmEmoji{..} = (\realmEmojiName -> RealmEmoji { realmEmojiName, ..} ) <$> f realmEmojiName
{-# INLINE realmEmojiNameL #-}

-- | 'realmEmojiSourceUrl' Lens
realmEmojiSourceUrlL :: Lens_' RealmEmoji (Maybe Text)
realmEmojiSourceUrlL f RealmEmoji{..} = (\realmEmojiSourceUrl -> RealmEmoji { realmEmojiSourceUrl, ..} ) <$> f realmEmojiSourceUrl
{-# INLINE realmEmojiSourceUrlL #-}

-- | 'realmEmojiDeactivated' Lens
realmEmojiDeactivatedL :: Lens_' RealmEmoji (Maybe Bool)
realmEmojiDeactivatedL f RealmEmoji{..} = (\realmEmojiDeactivated -> RealmEmoji { realmEmojiDeactivated, ..} ) <$> f realmEmojiDeactivated
{-# INLINE realmEmojiDeactivatedL #-}

-- | 'realmEmojiAuthorId' Lens
realmEmojiAuthorIdL :: Lens_' RealmEmoji (Maybe Int)
realmEmojiAuthorIdL f RealmEmoji{..} = (\realmEmojiAuthorId -> RealmEmoji { realmEmojiAuthorId, ..} ) <$> f realmEmojiAuthorId
{-# INLINE realmEmojiAuthorIdL #-}



-- * RealmExport

-- | 'realmExportId' Lens
realmExportIdL :: Lens_' RealmExport (Maybe Int)
realmExportIdL f RealmExport{..} = (\realmExportId -> RealmExport { realmExportId, ..} ) <$> f realmExportId
{-# INLINE realmExportIdL #-}

-- | 'realmExportActingUserId' Lens
realmExportActingUserIdL :: Lens_' RealmExport (Maybe Int)
realmExportActingUserIdL f RealmExport{..} = (\realmExportActingUserId -> RealmExport { realmExportActingUserId, ..} ) <$> f realmExportActingUserId
{-# INLINE realmExportActingUserIdL #-}

-- | 'realmExportExportTime' Lens
realmExportExportTimeL :: Lens_' RealmExport (Maybe Double)
realmExportExportTimeL f RealmExport{..} = (\realmExportExportTime -> RealmExport { realmExportExportTime, ..} ) <$> f realmExportExportTime
{-# INLINE realmExportExportTimeL #-}

-- | 'realmExportDeletedTimestamp' Lens
realmExportDeletedTimestampL :: Lens_' RealmExport (Maybe Double)
realmExportDeletedTimestampL f RealmExport{..} = (\realmExportDeletedTimestamp -> RealmExport { realmExportDeletedTimestamp, ..} ) <$> f realmExportDeletedTimestamp
{-# INLINE realmExportDeletedTimestampL #-}

-- | 'realmExportFailedTimestamp' Lens
realmExportFailedTimestampL :: Lens_' RealmExport (Maybe Double)
realmExportFailedTimestampL f RealmExport{..} = (\realmExportFailedTimestamp -> RealmExport { realmExportFailedTimestamp, ..} ) <$> f realmExportFailedTimestamp
{-# INLINE realmExportFailedTimestampL #-}

-- | 'realmExportExportUrl' Lens
realmExportExportUrlL :: Lens_' RealmExport (Maybe Text)
realmExportExportUrlL f RealmExport{..} = (\realmExportExportUrl -> RealmExport { realmExportExportUrl, ..} ) <$> f realmExportExportUrl
{-# INLINE realmExportExportUrlL #-}

-- | 'realmExportPending' Lens
realmExportPendingL :: Lens_' RealmExport (Maybe Bool)
realmExportPendingL f RealmExport{..} = (\realmExportPending -> RealmExport { realmExportPending, ..} ) <$> f realmExportPending
{-# INLINE realmExportPendingL #-}



-- * RealmPlayground

-- | 'realmPlaygroundId' Lens
realmPlaygroundIdL :: Lens_' RealmPlayground (Maybe Int)
realmPlaygroundIdL f RealmPlayground{..} = (\realmPlaygroundId -> RealmPlayground { realmPlaygroundId, ..} ) <$> f realmPlaygroundId
{-# INLINE realmPlaygroundIdL #-}

-- | 'realmPlaygroundName' Lens
realmPlaygroundNameL :: Lens_' RealmPlayground (Maybe Text)
realmPlaygroundNameL f RealmPlayground{..} = (\realmPlaygroundName -> RealmPlayground { realmPlaygroundName, ..} ) <$> f realmPlaygroundName
{-# INLINE realmPlaygroundNameL #-}

-- | 'realmPlaygroundPygmentsLanguage' Lens
realmPlaygroundPygmentsLanguageL :: Lens_' RealmPlayground (Maybe Text)
realmPlaygroundPygmentsLanguageL f RealmPlayground{..} = (\realmPlaygroundPygmentsLanguage -> RealmPlayground { realmPlaygroundPygmentsLanguage, ..} ) <$> f realmPlaygroundPygmentsLanguage
{-# INLINE realmPlaygroundPygmentsLanguageL #-}

-- | 'realmPlaygroundUrlPrefix' Lens
realmPlaygroundUrlPrefixL :: Lens_' RealmPlayground (Maybe Text)
realmPlaygroundUrlPrefixL f RealmPlayground{..} = (\realmPlaygroundUrlPrefix -> RealmPlayground { realmPlaygroundUrlPrefix, ..} ) <$> f realmPlaygroundUrlPrefix
{-# INLINE realmPlaygroundUrlPrefixL #-}



-- * Subscriptions

-- | 'subscriptionsStreamId' Lens
subscriptionsStreamIdL :: Lens_' Subscriptions (Maybe Int)
subscriptionsStreamIdL f Subscriptions{..} = (\subscriptionsStreamId -> Subscriptions { subscriptionsStreamId, ..} ) <$> f subscriptionsStreamId
{-# INLINE subscriptionsStreamIdL #-}

-- | 'subscriptionsName' Lens
subscriptionsNameL :: Lens_' Subscriptions (Maybe Text)
subscriptionsNameL f Subscriptions{..} = (\subscriptionsName -> Subscriptions { subscriptionsName, ..} ) <$> f subscriptionsName
{-# INLINE subscriptionsNameL #-}

-- | 'subscriptionsDescription' Lens
subscriptionsDescriptionL :: Lens_' Subscriptions (Maybe Text)
subscriptionsDescriptionL f Subscriptions{..} = (\subscriptionsDescription -> Subscriptions { subscriptionsDescription, ..} ) <$> f subscriptionsDescription
{-# INLINE subscriptionsDescriptionL #-}

-- | 'subscriptionsRenderedDescription' Lens
subscriptionsRenderedDescriptionL :: Lens_' Subscriptions (Maybe Text)
subscriptionsRenderedDescriptionL f Subscriptions{..} = (\subscriptionsRenderedDescription -> Subscriptions { subscriptionsRenderedDescription, ..} ) <$> f subscriptionsRenderedDescription
{-# INLINE subscriptionsRenderedDescriptionL #-}

-- | 'subscriptionsDateCreated' Lens
subscriptionsDateCreatedL :: Lens_' Subscriptions (Maybe Int)
subscriptionsDateCreatedL f Subscriptions{..} = (\subscriptionsDateCreated -> Subscriptions { subscriptionsDateCreated, ..} ) <$> f subscriptionsDateCreated
{-# INLINE subscriptionsDateCreatedL #-}

-- | 'subscriptionsInviteOnly' Lens
subscriptionsInviteOnlyL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsInviteOnlyL f Subscriptions{..} = (\subscriptionsInviteOnly -> Subscriptions { subscriptionsInviteOnly, ..} ) <$> f subscriptionsInviteOnly
{-# INLINE subscriptionsInviteOnlyL #-}

-- | 'subscriptionsSubscribers' Lens
subscriptionsSubscribersL :: Lens_' Subscriptions (Maybe [Int])
subscriptionsSubscribersL f Subscriptions{..} = (\subscriptionsSubscribers -> Subscriptions { subscriptionsSubscribers, ..} ) <$> f subscriptionsSubscribers
{-# INLINE subscriptionsSubscribersL #-}

-- | 'subscriptionsDesktopNotifications' Lens
subscriptionsDesktopNotificationsL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsDesktopNotificationsL f Subscriptions{..} = (\subscriptionsDesktopNotifications -> Subscriptions { subscriptionsDesktopNotifications, ..} ) <$> f subscriptionsDesktopNotifications
{-# INLINE subscriptionsDesktopNotificationsL #-}

-- | 'subscriptionsEmailNotifications' Lens
subscriptionsEmailNotificationsL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsEmailNotificationsL f Subscriptions{..} = (\subscriptionsEmailNotifications -> Subscriptions { subscriptionsEmailNotifications, ..} ) <$> f subscriptionsEmailNotifications
{-# INLINE subscriptionsEmailNotificationsL #-}

-- | 'subscriptionsWildcardMentionsNotify' Lens
subscriptionsWildcardMentionsNotifyL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsWildcardMentionsNotifyL f Subscriptions{..} = (\subscriptionsWildcardMentionsNotify -> Subscriptions { subscriptionsWildcardMentionsNotify, ..} ) <$> f subscriptionsWildcardMentionsNotify
{-# INLINE subscriptionsWildcardMentionsNotifyL #-}

-- | 'subscriptionsPushNotifications' Lens
subscriptionsPushNotificationsL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsPushNotificationsL f Subscriptions{..} = (\subscriptionsPushNotifications -> Subscriptions { subscriptionsPushNotifications, ..} ) <$> f subscriptionsPushNotifications
{-# INLINE subscriptionsPushNotificationsL #-}

-- | 'subscriptionsAudibleNotifications' Lens
subscriptionsAudibleNotificationsL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsAudibleNotificationsL f Subscriptions{..} = (\subscriptionsAudibleNotifications -> Subscriptions { subscriptionsAudibleNotifications, ..} ) <$> f subscriptionsAudibleNotifications
{-# INLINE subscriptionsAudibleNotificationsL #-}

-- | 'subscriptionsPinToTop' Lens
subscriptionsPinToTopL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsPinToTopL f Subscriptions{..} = (\subscriptionsPinToTop -> Subscriptions { subscriptionsPinToTop, ..} ) <$> f subscriptionsPinToTop
{-# INLINE subscriptionsPinToTopL #-}

-- | 'subscriptionsEmailAddress' Lens
subscriptionsEmailAddressL :: Lens_' Subscriptions (Maybe Text)
subscriptionsEmailAddressL f Subscriptions{..} = (\subscriptionsEmailAddress -> Subscriptions { subscriptionsEmailAddress, ..} ) <$> f subscriptionsEmailAddress
{-# INLINE subscriptionsEmailAddressL #-}

-- | 'subscriptionsIsMuted' Lens
subscriptionsIsMutedL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsIsMutedL f Subscriptions{..} = (\subscriptionsIsMuted -> Subscriptions { subscriptionsIsMuted, ..} ) <$> f subscriptionsIsMuted
{-# INLINE subscriptionsIsMutedL #-}

-- | 'subscriptionsInHomeView' Lens
subscriptionsInHomeViewL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsInHomeViewL f Subscriptions{..} = (\subscriptionsInHomeView -> Subscriptions { subscriptionsInHomeView, ..} ) <$> f subscriptionsInHomeView
{-# INLINE subscriptionsInHomeViewL #-}

-- | 'subscriptionsIsAnnouncementOnly' Lens
subscriptionsIsAnnouncementOnlyL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsIsAnnouncementOnlyL f Subscriptions{..} = (\subscriptionsIsAnnouncementOnly -> Subscriptions { subscriptionsIsAnnouncementOnly, ..} ) <$> f subscriptionsIsAnnouncementOnly
{-# INLINE subscriptionsIsAnnouncementOnlyL #-}

-- | 'subscriptionsIsWebPublic' Lens
subscriptionsIsWebPublicL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsIsWebPublicL f Subscriptions{..} = (\subscriptionsIsWebPublic -> Subscriptions { subscriptionsIsWebPublic, ..} ) <$> f subscriptionsIsWebPublic
{-# INLINE subscriptionsIsWebPublicL #-}

-- | 'subscriptionsRole' Lens
subscriptionsRoleL :: Lens_' Subscriptions (Maybe E'Role)
subscriptionsRoleL f Subscriptions{..} = (\subscriptionsRole -> Subscriptions { subscriptionsRole, ..} ) <$> f subscriptionsRole
{-# INLINE subscriptionsRoleL #-}

-- | 'subscriptionsColor' Lens
subscriptionsColorL :: Lens_' Subscriptions (Maybe Text)
subscriptionsColorL f Subscriptions{..} = (\subscriptionsColor -> Subscriptions { subscriptionsColor, ..} ) <$> f subscriptionsColor
{-# INLINE subscriptionsColorL #-}

-- | 'subscriptionsStreamPostPolicy' Lens
subscriptionsStreamPostPolicyL :: Lens_' Subscriptions (Maybe Int)
subscriptionsStreamPostPolicyL f Subscriptions{..} = (\subscriptionsStreamPostPolicy -> Subscriptions { subscriptionsStreamPostPolicy, ..} ) <$> f subscriptionsStreamPostPolicy
{-# INLINE subscriptionsStreamPostPolicyL #-}

-- | 'subscriptionsMessageRetentionDays' Lens
subscriptionsMessageRetentionDaysL :: Lens_' Subscriptions (Maybe Int)
subscriptionsMessageRetentionDaysL f Subscriptions{..} = (\subscriptionsMessageRetentionDays -> Subscriptions { subscriptionsMessageRetentionDays, ..} ) <$> f subscriptionsMessageRetentionDays
{-# INLINE subscriptionsMessageRetentionDaysL #-}

-- | 'subscriptionsHistoryPublicToSubscribers' Lens
subscriptionsHistoryPublicToSubscribersL :: Lens_' Subscriptions (Maybe Bool)
subscriptionsHistoryPublicToSubscribersL f Subscriptions{..} = (\subscriptionsHistoryPublicToSubscribers -> Subscriptions { subscriptionsHistoryPublicToSubscribers, ..} ) <$> f subscriptionsHistoryPublicToSubscribers
{-# INLINE subscriptionsHistoryPublicToSubscribersL #-}

-- | 'subscriptionsFirstMessageId' Lens
subscriptionsFirstMessageIdL :: Lens_' Subscriptions (Maybe Int)
subscriptionsFirstMessageIdL f Subscriptions{..} = (\subscriptionsFirstMessageId -> Subscriptions { subscriptionsFirstMessageId, ..} ) <$> f subscriptionsFirstMessageId
{-# INLINE subscriptionsFirstMessageIdL #-}

-- | 'subscriptionsStreamWeeklyTraffic' Lens
subscriptionsStreamWeeklyTrafficL :: Lens_' Subscriptions (Maybe Int)
subscriptionsStreamWeeklyTrafficL f Subscriptions{..} = (\subscriptionsStreamWeeklyTraffic -> Subscriptions { subscriptionsStreamWeeklyTraffic, ..} ) <$> f subscriptionsStreamWeeklyTraffic
{-# INLINE subscriptionsStreamWeeklyTrafficL #-}



-- * User

-- | 'userEmail' Lens
userEmailL :: Lens_' User (Maybe AnyType)
userEmailL f User{..} = (\userEmail -> User { userEmail, ..} ) <$> f userEmail
{-# INLINE userEmailL #-}

-- | 'userIsBot' Lens
userIsBotL :: Lens_' User (Maybe AnyType)
userIsBotL f User{..} = (\userIsBot -> User { userIsBot, ..} ) <$> f userIsBot
{-# INLINE userIsBotL #-}

-- | 'userAvatarUrl' Lens
userAvatarUrlL :: Lens_' User (Maybe AnyType)
userAvatarUrlL f User{..} = (\userAvatarUrl -> User { userAvatarUrl, ..} ) <$> f userAvatarUrl
{-# INLINE userAvatarUrlL #-}

-- | 'userAvatarVersion' Lens
userAvatarVersionL :: Lens_' User (Maybe AnyType)
userAvatarVersionL f User{..} = (\userAvatarVersion -> User { userAvatarVersion, ..} ) <$> f userAvatarVersion
{-# INLINE userAvatarVersionL #-}

-- | 'userFullName' Lens
userFullNameL :: Lens_' User (Maybe AnyType)
userFullNameL f User{..} = (\userFullName -> User { userFullName, ..} ) <$> f userFullName
{-# INLINE userFullNameL #-}

-- | 'userIsAdmin' Lens
userIsAdminL :: Lens_' User (Maybe AnyType)
userIsAdminL f User{..} = (\userIsAdmin -> User { userIsAdmin, ..} ) <$> f userIsAdmin
{-# INLINE userIsAdminL #-}

-- | 'userIsOwner' Lens
userIsOwnerL :: Lens_' User (Maybe AnyType)
userIsOwnerL f User{..} = (\userIsOwner -> User { userIsOwner, ..} ) <$> f userIsOwner
{-# INLINE userIsOwnerL #-}

-- | 'userIsBillingAdmin' Lens
userIsBillingAdminL :: Lens_' User (Maybe AnyType)
userIsBillingAdminL f User{..} = (\userIsBillingAdmin -> User { userIsBillingAdmin, ..} ) <$> f userIsBillingAdmin
{-# INLINE userIsBillingAdminL #-}

-- | 'userRole' Lens
userRoleL :: Lens_' User (Maybe AnyType)
userRoleL f User{..} = (\userRole -> User { userRole, ..} ) <$> f userRole
{-# INLINE userRoleL #-}

-- | 'userBotType' Lens
userBotTypeL :: Lens_' User (Maybe AnyType)
userBotTypeL f User{..} = (\userBotType -> User { userBotType, ..} ) <$> f userBotType
{-# INLINE userBotTypeL #-}

-- | 'userUserId' Lens
userUserIdL :: Lens_' User (Maybe AnyType)
userUserIdL f User{..} = (\userUserId -> User { userUserId, ..} ) <$> f userUserId
{-# INLINE userUserIdL #-}

-- | 'userBotOwnerId' Lens
userBotOwnerIdL :: Lens_' User (Maybe AnyType)
userBotOwnerIdL f User{..} = (\userBotOwnerId -> User { userBotOwnerId, ..} ) <$> f userBotOwnerId
{-# INLINE userBotOwnerIdL #-}

-- | 'userIsActive' Lens
userIsActiveL :: Lens_' User (Maybe AnyType)
userIsActiveL f User{..} = (\userIsActive -> User { userIsActive, ..} ) <$> f userIsActive
{-# INLINE userIsActiveL #-}

-- | 'userIsGuest' Lens
userIsGuestL :: Lens_' User (Maybe AnyType)
userIsGuestL f User{..} = (\userIsGuest -> User { userIsGuest, ..} ) <$> f userIsGuest
{-# INLINE userIsGuestL #-}

-- | 'userTimezone' Lens
userTimezoneL :: Lens_' User (Maybe AnyType)
userTimezoneL f User{..} = (\userTimezone -> User { userTimezone, ..} ) <$> f userTimezone
{-# INLINE userTimezoneL #-}

-- | 'userDateJoined' Lens
userDateJoinedL :: Lens_' User (Maybe AnyType)
userDateJoinedL f User{..} = (\userDateJoined -> User { userDateJoined, ..} ) <$> f userDateJoined
{-# INLINE userDateJoinedL #-}

-- | 'userDeliveryEmail' Lens
userDeliveryEmailL :: Lens_' User (Maybe AnyType)
userDeliveryEmailL f User{..} = (\userDeliveryEmail -> User { userDeliveryEmail, ..} ) <$> f userDeliveryEmail
{-# INLINE userDeliveryEmailL #-}

-- | 'userProfileData' Lens
userProfileDataL :: Lens_' User (Maybe AnyType)
userProfileDataL f User{..} = (\userProfileData -> User { userProfileData, ..} ) <$> f userProfileData
{-# INLINE userProfileDataL #-}



-- * UserAllOf

-- | 'userAllOfEmail' Lens
userAllOfEmailL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfEmailL f UserAllOf{..} = (\userAllOfEmail -> UserAllOf { userAllOfEmail, ..} ) <$> f userAllOfEmail
{-# INLINE userAllOfEmailL #-}

-- | 'userAllOfIsBot' Lens
userAllOfIsBotL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfIsBotL f UserAllOf{..} = (\userAllOfIsBot -> UserAllOf { userAllOfIsBot, ..} ) <$> f userAllOfIsBot
{-# INLINE userAllOfIsBotL #-}

-- | 'userAllOfAvatarUrl' Lens
userAllOfAvatarUrlL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfAvatarUrlL f UserAllOf{..} = (\userAllOfAvatarUrl -> UserAllOf { userAllOfAvatarUrl, ..} ) <$> f userAllOfAvatarUrl
{-# INLINE userAllOfAvatarUrlL #-}

-- | 'userAllOfAvatarVersion' Lens
userAllOfAvatarVersionL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfAvatarVersionL f UserAllOf{..} = (\userAllOfAvatarVersion -> UserAllOf { userAllOfAvatarVersion, ..} ) <$> f userAllOfAvatarVersion
{-# INLINE userAllOfAvatarVersionL #-}

-- | 'userAllOfFullName' Lens
userAllOfFullNameL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfFullNameL f UserAllOf{..} = (\userAllOfFullName -> UserAllOf { userAllOfFullName, ..} ) <$> f userAllOfFullName
{-# INLINE userAllOfFullNameL #-}

-- | 'userAllOfIsAdmin' Lens
userAllOfIsAdminL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfIsAdminL f UserAllOf{..} = (\userAllOfIsAdmin -> UserAllOf { userAllOfIsAdmin, ..} ) <$> f userAllOfIsAdmin
{-# INLINE userAllOfIsAdminL #-}

-- | 'userAllOfIsOwner' Lens
userAllOfIsOwnerL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfIsOwnerL f UserAllOf{..} = (\userAllOfIsOwner -> UserAllOf { userAllOfIsOwner, ..} ) <$> f userAllOfIsOwner
{-# INLINE userAllOfIsOwnerL #-}

-- | 'userAllOfIsBillingAdmin' Lens
userAllOfIsBillingAdminL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfIsBillingAdminL f UserAllOf{..} = (\userAllOfIsBillingAdmin -> UserAllOf { userAllOfIsBillingAdmin, ..} ) <$> f userAllOfIsBillingAdmin
{-# INLINE userAllOfIsBillingAdminL #-}

-- | 'userAllOfRole' Lens
userAllOfRoleL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfRoleL f UserAllOf{..} = (\userAllOfRole -> UserAllOf { userAllOfRole, ..} ) <$> f userAllOfRole
{-# INLINE userAllOfRoleL #-}

-- | 'userAllOfBotType' Lens
userAllOfBotTypeL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfBotTypeL f UserAllOf{..} = (\userAllOfBotType -> UserAllOf { userAllOfBotType, ..} ) <$> f userAllOfBotType
{-# INLINE userAllOfBotTypeL #-}

-- | 'userAllOfUserId' Lens
userAllOfUserIdL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfUserIdL f UserAllOf{..} = (\userAllOfUserId -> UserAllOf { userAllOfUserId, ..} ) <$> f userAllOfUserId
{-# INLINE userAllOfUserIdL #-}

-- | 'userAllOfBotOwnerId' Lens
userAllOfBotOwnerIdL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfBotOwnerIdL f UserAllOf{..} = (\userAllOfBotOwnerId -> UserAllOf { userAllOfBotOwnerId, ..} ) <$> f userAllOfBotOwnerId
{-# INLINE userAllOfBotOwnerIdL #-}

-- | 'userAllOfIsActive' Lens
userAllOfIsActiveL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfIsActiveL f UserAllOf{..} = (\userAllOfIsActive -> UserAllOf { userAllOfIsActive, ..} ) <$> f userAllOfIsActive
{-# INLINE userAllOfIsActiveL #-}

-- | 'userAllOfIsGuest' Lens
userAllOfIsGuestL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfIsGuestL f UserAllOf{..} = (\userAllOfIsGuest -> UserAllOf { userAllOfIsGuest, ..} ) <$> f userAllOfIsGuest
{-# INLINE userAllOfIsGuestL #-}

-- | 'userAllOfTimezone' Lens
userAllOfTimezoneL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfTimezoneL f UserAllOf{..} = (\userAllOfTimezone -> UserAllOf { userAllOfTimezone, ..} ) <$> f userAllOfTimezone
{-# INLINE userAllOfTimezoneL #-}

-- | 'userAllOfDateJoined' Lens
userAllOfDateJoinedL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfDateJoinedL f UserAllOf{..} = (\userAllOfDateJoined -> UserAllOf { userAllOfDateJoined, ..} ) <$> f userAllOfDateJoined
{-# INLINE userAllOfDateJoinedL #-}

-- | 'userAllOfDeliveryEmail' Lens
userAllOfDeliveryEmailL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfDeliveryEmailL f UserAllOf{..} = (\userAllOfDeliveryEmail -> UserAllOf { userAllOfDeliveryEmail, ..} ) <$> f userAllOfDeliveryEmail
{-# INLINE userAllOfDeliveryEmailL #-}

-- | 'userAllOfProfileData' Lens
userAllOfProfileDataL :: Lens_' UserAllOf (Maybe AnyType)
userAllOfProfileDataL f UserAllOf{..} = (\userAllOfProfileData -> UserAllOf { userAllOfProfileData, ..} ) <$> f userAllOfProfileData
{-# INLINE userAllOfProfileDataL #-}



-- * UserBase

-- | 'userBaseEmail' Lens
userBaseEmailL :: Lens_' UserBase (Maybe Text)
userBaseEmailL f UserBase{..} = (\userBaseEmail -> UserBase { userBaseEmail, ..} ) <$> f userBaseEmail
{-# INLINE userBaseEmailL #-}

-- | 'userBaseIsBot' Lens
userBaseIsBotL :: Lens_' UserBase (Maybe Bool)
userBaseIsBotL f UserBase{..} = (\userBaseIsBot -> UserBase { userBaseIsBot, ..} ) <$> f userBaseIsBot
{-# INLINE userBaseIsBotL #-}

-- | 'userBaseAvatarUrl' Lens
userBaseAvatarUrlL :: Lens_' UserBase (Maybe Text)
userBaseAvatarUrlL f UserBase{..} = (\userBaseAvatarUrl -> UserBase { userBaseAvatarUrl, ..} ) <$> f userBaseAvatarUrl
{-# INLINE userBaseAvatarUrlL #-}

-- | 'userBaseAvatarVersion' Lens
userBaseAvatarVersionL :: Lens_' UserBase (Maybe Int)
userBaseAvatarVersionL f UserBase{..} = (\userBaseAvatarVersion -> UserBase { userBaseAvatarVersion, ..} ) <$> f userBaseAvatarVersion
{-# INLINE userBaseAvatarVersionL #-}

-- | 'userBaseFullName' Lens
userBaseFullNameL :: Lens_' UserBase (Maybe Text)
userBaseFullNameL f UserBase{..} = (\userBaseFullName -> UserBase { userBaseFullName, ..} ) <$> f userBaseFullName
{-# INLINE userBaseFullNameL #-}

-- | 'userBaseIsAdmin' Lens
userBaseIsAdminL :: Lens_' UserBase (Maybe Bool)
userBaseIsAdminL f UserBase{..} = (\userBaseIsAdmin -> UserBase { userBaseIsAdmin, ..} ) <$> f userBaseIsAdmin
{-# INLINE userBaseIsAdminL #-}

-- | 'userBaseIsOwner' Lens
userBaseIsOwnerL :: Lens_' UserBase (Maybe Bool)
userBaseIsOwnerL f UserBase{..} = (\userBaseIsOwner -> UserBase { userBaseIsOwner, ..} ) <$> f userBaseIsOwner
{-# INLINE userBaseIsOwnerL #-}

-- | 'userBaseIsBillingAdmin' Lens
userBaseIsBillingAdminL :: Lens_' UserBase (Maybe Bool)
userBaseIsBillingAdminL f UserBase{..} = (\userBaseIsBillingAdmin -> UserBase { userBaseIsBillingAdmin, ..} ) <$> f userBaseIsBillingAdmin
{-# INLINE userBaseIsBillingAdminL #-}

-- | 'userBaseRole' Lens
userBaseRoleL :: Lens_' UserBase (Maybe E'Role2)
userBaseRoleL f UserBase{..} = (\userBaseRole -> UserBase { userBaseRole, ..} ) <$> f userBaseRole
{-# INLINE userBaseRoleL #-}

-- | 'userBaseBotType' Lens
userBaseBotTypeL :: Lens_' UserBase (Maybe Int)
userBaseBotTypeL f UserBase{..} = (\userBaseBotType -> UserBase { userBaseBotType, ..} ) <$> f userBaseBotType
{-# INLINE userBaseBotTypeL #-}

-- | 'userBaseUserId' Lens
userBaseUserIdL :: Lens_' UserBase (Maybe Int)
userBaseUserIdL f UserBase{..} = (\userBaseUserId -> UserBase { userBaseUserId, ..} ) <$> f userBaseUserId
{-# INLINE userBaseUserIdL #-}

-- | 'userBaseBotOwnerId' Lens
userBaseBotOwnerIdL :: Lens_' UserBase (Maybe Int)
userBaseBotOwnerIdL f UserBase{..} = (\userBaseBotOwnerId -> UserBase { userBaseBotOwnerId, ..} ) <$> f userBaseBotOwnerId
{-# INLINE userBaseBotOwnerIdL #-}

-- | 'userBaseIsActive' Lens
userBaseIsActiveL :: Lens_' UserBase (Maybe Bool)
userBaseIsActiveL f UserBase{..} = (\userBaseIsActive -> UserBase { userBaseIsActive, ..} ) <$> f userBaseIsActive
{-# INLINE userBaseIsActiveL #-}

-- | 'userBaseIsGuest' Lens
userBaseIsGuestL :: Lens_' UserBase (Maybe Bool)
userBaseIsGuestL f UserBase{..} = (\userBaseIsGuest -> UserBase { userBaseIsGuest, ..} ) <$> f userBaseIsGuest
{-# INLINE userBaseIsGuestL #-}

-- | 'userBaseTimezone' Lens
userBaseTimezoneL :: Lens_' UserBase (Maybe Text)
userBaseTimezoneL f UserBase{..} = (\userBaseTimezone -> UserBase { userBaseTimezone, ..} ) <$> f userBaseTimezone
{-# INLINE userBaseTimezoneL #-}

-- | 'userBaseDateJoined' Lens
userBaseDateJoinedL :: Lens_' UserBase (Maybe Text)
userBaseDateJoinedL f UserBase{..} = (\userBaseDateJoined -> UserBase { userBaseDateJoined, ..} ) <$> f userBaseDateJoined
{-# INLINE userBaseDateJoinedL #-}

-- | 'userBaseDeliveryEmail' Lens
userBaseDeliveryEmailL :: Lens_' UserBase (Maybe Text)
userBaseDeliveryEmailL f UserBase{..} = (\userBaseDeliveryEmail -> UserBase { userBaseDeliveryEmail, ..} ) <$> f userBaseDeliveryEmail
{-# INLINE userBaseDeliveryEmailL #-}

-- | 'userBaseProfileData' Lens
userBaseProfileDataL :: Lens_' UserBase (Maybe (Map.Map String A.Value))
userBaseProfileDataL f UserBase{..} = (\userBaseProfileData -> UserBase { userBaseProfileData, ..} ) <$> f userBaseProfileData
{-# INLINE userBaseProfileDataL #-}



-- * UserDeactivatedError

-- | 'userDeactivatedErrorResult' Lens
userDeactivatedErrorResultL :: Lens_' UserDeactivatedError (AnyType)
userDeactivatedErrorResultL f UserDeactivatedError{..} = (\userDeactivatedErrorResult -> UserDeactivatedError { userDeactivatedErrorResult, ..} ) <$> f userDeactivatedErrorResult
{-# INLINE userDeactivatedErrorResultL #-}

-- | 'userDeactivatedErrorMsg' Lens
userDeactivatedErrorMsgL :: Lens_' UserDeactivatedError (AnyType)
userDeactivatedErrorMsgL f UserDeactivatedError{..} = (\userDeactivatedErrorMsg -> UserDeactivatedError { userDeactivatedErrorMsg, ..} ) <$> f userDeactivatedErrorMsg
{-# INLINE userDeactivatedErrorMsgL #-}

-- | 'userDeactivatedErrorCode' Lens
userDeactivatedErrorCodeL :: Lens_' UserDeactivatedError (Maybe AnyType)
userDeactivatedErrorCodeL f UserDeactivatedError{..} = (\userDeactivatedErrorCode -> UserDeactivatedError { userDeactivatedErrorCode, ..} ) <$> f userDeactivatedErrorCode
{-# INLINE userDeactivatedErrorCodeL #-}



-- * UserGroup

-- | 'userGroupName' Lens
userGroupNameL :: Lens_' UserGroup (Maybe Text)
userGroupNameL f UserGroup{..} = (\userGroupName -> UserGroup { userGroupName, ..} ) <$> f userGroupName
{-# INLINE userGroupNameL #-}

-- | 'userGroupDescription' Lens
userGroupDescriptionL :: Lens_' UserGroup (Maybe Text)
userGroupDescriptionL f UserGroup{..} = (\userGroupDescription -> UserGroup { userGroupDescription, ..} ) <$> f userGroupDescription
{-# INLINE userGroupDescriptionL #-}

-- | 'userGroupMembers' Lens
userGroupMembersL :: Lens_' UserGroup (Maybe [Int])
userGroupMembersL f UserGroup{..} = (\userGroupMembers -> UserGroup { userGroupMembers, ..} ) <$> f userGroupMembers
{-# INLINE userGroupMembersL #-}

-- | 'userGroupId' Lens
userGroupIdL :: Lens_' UserGroup (Maybe Int)
userGroupIdL f UserGroup{..} = (\userGroupId -> UserGroup { userGroupId, ..} ) <$> f userGroupId
{-# INLINE userGroupIdL #-}



-- * UserNotAuthorizedError

-- | 'userNotAuthorizedErrorResult' Lens
userNotAuthorizedErrorResultL :: Lens_' UserNotAuthorizedError (AnyType)
userNotAuthorizedErrorResultL f UserNotAuthorizedError{..} = (\userNotAuthorizedErrorResult -> UserNotAuthorizedError { userNotAuthorizedErrorResult, ..} ) <$> f userNotAuthorizedErrorResult
{-# INLINE userNotAuthorizedErrorResultL #-}

-- | 'userNotAuthorizedErrorMsg' Lens
userNotAuthorizedErrorMsgL :: Lens_' UserNotAuthorizedError (AnyType)
userNotAuthorizedErrorMsgL f UserNotAuthorizedError{..} = (\userNotAuthorizedErrorMsg -> UserNotAuthorizedError { userNotAuthorizedErrorMsg, ..} ) <$> f userNotAuthorizedErrorMsg
{-# INLINE userNotAuthorizedErrorMsgL #-}

-- | 'userNotAuthorizedErrorCode' Lens
userNotAuthorizedErrorCodeL :: Lens_' UserNotAuthorizedError (Maybe AnyType)
userNotAuthorizedErrorCodeL f UserNotAuthorizedError{..} = (\userNotAuthorizedErrorCode -> UserNotAuthorizedError { userNotAuthorizedErrorCode, ..} ) <$> f userNotAuthorizedErrorCode
{-# INLINE userNotAuthorizedErrorCodeL #-}



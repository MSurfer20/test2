note
 description:"[
		Zulip REST API
 		Powerful open source group chat 
  		The version of the OpenAPI document: 1.0.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ATTACHMENTS 




feature --Access

 	id: INTEGER_32 
    	 -- The unique ID for the attachment. 
    name: detachable STRING_32 
      -- Name of the uploaded file. 
    path_id: detachable STRING_32 
      -- A representation of the path of the file within the repository of user-uploaded files.  If the `path_id` of a file is `{realm_id}/ab/cdef/temp_file.py`, its URL will be: `{server_url}/user_uploads/{realm_id}/ab/cdef/temp_file.py`. 
 	size: INTEGER_32 
    	 -- Size of the file in bytes. 
 	create_time: INTEGER_32 
    	 -- Time when the attachment was uploaded as a UNIX timestamp multiplied by 1000 (matching the format of getTime() in JavaScript).  **Changes**: Changed in Zulip 2.2 (feature level 22).  This field was previously a floating point number. 
    messages: detachable LIST [ATTACHMENTS_MESSAGES] 
      -- Contains basic details on any Zulip messages that have been sent referencing this [uploaded file](/api/upload-file). This includes messages sent by any user in the Zulip organization who sent a message containing a link to the uploaded file. 

feature -- Change Element  
 
    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name		
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_path_id (a_name: like path_id)
        -- Set 'path_id' with 'a_name'.
      do
        path_id := a_name
      ensure
        path_id_set: path_id = a_name		
      end

    set_size (a_name: like size)
        -- Set 'size' with 'a_name'.
      do
        size := a_name
      ensure
        size_set: size = a_name		
      end

    set_create_time (a_name: like create_time)
        -- Set 'create_time' with 'a_name'.
      do
        create_time := a_name
      ensure
        create_time_set: create_time = a_name		
      end

    set_messages (a_name: like messages)
        -- Set 'messages' with 'a_name'.
      do
        messages := a_name
      ensure
        messages_set: messages = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ATTACHMENTS%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")    
        end  
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached path_id as l_path_id then
          Result.append ("%Npath_id:")
          Result.append (l_path_id.out)
          Result.append ("%N")    
        end  
        if attached size as l_size then
          Result.append ("%Nsize:")
          Result.append (l_size.out)
          Result.append ("%N")    
        end  
        if attached create_time as l_create_time then
          Result.append ("%Ncreate_time:")
          Result.append (l_create_time.out)
          Result.append ("%N")    
        end  
        if attached messages as l_messages then
          across l_messages as ic loop
            Result.append ("%N messages:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
      end
end



note
 description:"[
		Zulip REST API
 		Powerful open source group chat 
  		The version of the OpenAPI document: 1.0.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class REALM_PLAYGROUND 




feature --Access

 	id: INTEGER_32 
    	 -- The unique ID for the realm playground. 
    name: detachable STRING_32 
      -- The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49). 
    pygments_language: detachable STRING_32 
      -- The name of the Pygments language lexer for that programming language. 
    url_prefix: detachable STRING_32 
      -- The url prefix for the playground. 

feature -- Change Element  
 
    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name		
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_pygments_language (a_name: like pygments_language)
        -- Set 'pygments_language' with 'a_name'.
      do
        pygments_language := a_name
      ensure
        pygments_language_set: pygments_language = a_name		
      end

    set_url_prefix (a_name: like url_prefix)
        -- Set 'url_prefix' with 'a_name'.
      do
        url_prefix := a_name
      ensure
        url_prefix_set: url_prefix = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass REALM_PLAYGROUND%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")    
        end  
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached pygments_language as l_pygments_language then
          Result.append ("%Npygments_language:")
          Result.append (l_pygments_language.out)
          Result.append ("%N")    
        end  
        if attached url_prefix as l_url_prefix then
          Result.append ("%Nurl_prefix:")
          Result.append (l_url_prefix.out)
          Result.append ("%N")    
        end  
      end
end



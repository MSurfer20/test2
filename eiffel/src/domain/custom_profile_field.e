note
 description:"[
		Zulip REST API
 		Powerful open source group chat 
  		The version of the OpenAPI document: 1.0.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CUSTOM_PROFILE_FIELD 




feature --Access

 	id: INTEGER_32 
    	 -- The ID of the custom profile field.  This will be referenced in custom the profile fields section of user objects. 
 	type: INTEGER_32 
    	 -- An integer indicating the type of the custom profile field, which determines how it is configured and displayed to users.  See the [Add custom profile fields](/help/add-custom-profile-fields) article for details on what each type means.  * **1**: Short text * **2**: Long text * **3**: List of options * **4**: Date picker * **5**: Link * **6**: Person picker * **7**: External account 
 	order: INTEGER_32 
    	 -- Custom profile fields are displayed in both settings UI and UI showing users' profiles in increasing `order`. 
    name: detachable STRING_32 
      -- The name of the custom profile field. 
    hint: detachable STRING_32 
      -- The help text to be displayed for the custom profile field in user-facing settings UI for configuring custom profile fields. 
    field_data: detachable STRING_32 
      -- Field types 3 (List of options) and 7 (External account) support storing additional configuration for the field type in the `field_data` attribute.  For field type 3 (List of options), this attribute is a JSON dictionary defining the choices and the order they will be displayed in the dropdown UI for individual users to select an option.  The interface for field type 7 is not yet stabilized. 

feature -- Change Element  
 
    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name		
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name		
      end

    set_order (a_name: like order)
        -- Set 'order' with 'a_name'.
      do
        order := a_name
      ensure
        order_set: order = a_name		
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_hint (a_name: like hint)
        -- Set 'hint' with 'a_name'.
      do
        hint := a_name
      ensure
        hint_set: hint = a_name		
      end

    set_field_data (a_name: like field_data)
        -- Set 'field_data' with 'a_name'.
      do
        field_data := a_name
      ensure
        field_data_set: field_data = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CUSTOM_PROFILE_FIELD%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")    
        end  
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")    
        end  
        if attached order as l_order then
          Result.append ("%Norder:")
          Result.append (l_order.out)
          Result.append ("%N")    
        end  
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached hint as l_hint then
          Result.append ("%Nhint:")
          Result.append (l_hint.out)
          Result.append ("%N")    
        end  
        if attached field_data as l_field_data then
          Result.append ("%Nfield_data:")
          Result.append (l_field_data.out)
          Result.append ("%N")    
        end  
      end
end



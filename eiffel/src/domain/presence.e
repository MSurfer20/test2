note
 description:"[
		Zulip REST API
 		Powerful open source group chat 
  		The version of the OpenAPI document: 1.0.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class PRESENCE 




feature --Access

    client: detachable STRING_32 
      -- The client's platform name. 
    status: detachable STRING_32 
      -- The status of the user on this client. It is either `idle` or `active`. 
 	timestamp: INTEGER_32 
    	 -- The UNIX timestamp of when this client sent the user's presence to the server with the precision of a second. 
 	pushable: BOOLEAN 
    	 -- Whether the client is capable of showing mobile/push notifications to the user. 

feature -- Change Element  
 
    set_client (a_name: like client)
        -- Set 'client' with 'a_name'.
      do
        client := a_name
      ensure
        client_set: client = a_name		
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name		
      end

    set_timestamp (a_name: like timestamp)
        -- Set 'timestamp' with 'a_name'.
      do
        timestamp := a_name
      ensure
        timestamp_set: timestamp = a_name		
      end

    set_pushable (a_name: like pushable)
        -- Set 'pushable' with 'a_name'.
      do
        pushable := a_name
      ensure
        pushable_set: pushable = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PRESENCE%N")
        if attached client as l_client then
          Result.append ("%Nclient:")
          Result.append (l_client.out)
          Result.append ("%N")    
        end  
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")    
        end  
        if attached timestamp as l_timestamp then
          Result.append ("%Ntimestamp:")
          Result.append (l_timestamp.out)
          Result.append ("%N")    
        end  
        if attached pushable as l_pushable then
          Result.append ("%Npushable:")
          Result.append (l_pushable.out)
          Result.append ("%N")    
        end  
      end
end



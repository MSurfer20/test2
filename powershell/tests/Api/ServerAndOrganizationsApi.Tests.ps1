#
# Zulip REST API
# Powerful open source group chat 
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'ServerAndOrganizationsApi' {
    Context 'Add-CodePlayground' {
        It 'Test Add-CodePlayground' {
            #$TestResult = Add-CodePlayground -Name "TEST_VALUE" -PygmentsLanguage "TEST_VALUE" -UrlPrefix "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Add-Linkifier' {
        It 'Test Add-Linkifier' {
            #$TestResult = Add-Linkifier -Pattern "TEST_VALUE" -UrlFormatString "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-CustomProfileField' {
        It 'Test New-CustomProfileField' {
            #$TestResult = New-CustomProfileField -FieldType "TEST_VALUE" -Name "TEST_VALUE" -Hint "TEST_VALUE" -FieldData "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CustomEmoji' {
        It 'Test Get-CustomEmoji' {
            #$TestResult = Get-CustomEmoji
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-CustomProfileFields' {
        It 'Test Get-CustomProfileFields' {
            #$TestResult = Get-CustomProfileFields
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Linkifiers' {
        It 'Test Get-Linkifiers' {
            #$TestResult = Get-Linkifiers
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ServerSettings' {
        It 'Test Get-ServerSettings' {
            #$TestResult = Get-ServerSettings
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-CodePlayground' {
        It 'Test Remove-CodePlayground' {
            #$TestResult = Remove-CodePlayground -PlaygroundId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-Linkifier' {
        It 'Test Remove-Linkifier' {
            #$TestResult = Remove-Linkifier -FilterId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ReorderCustomProfileFields' {
        It 'Test Invoke-ReorderCustomProfileFields' {
            #$TestResult = Invoke-ReorderCustomProfileFields -Order "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Linkifier' {
        It 'Test Update-Linkifier' {
            #$TestResult = Update-Linkifier -FilterId "TEST_VALUE" -Pattern "TEST_VALUE" -UrlFormatString "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UploadCustomEmoji' {
        It 'Test Invoke-UploadCustomEmoji' {
            #$TestResult = Invoke-UploadCustomEmoji -EmojiName "TEST_VALUE" -Filename "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}

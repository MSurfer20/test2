#
# Zulip REST API
# Powerful open source group chat 
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'StreamsApi' {
    Context 'Invoke-ArchiveStream' {
        It 'Test Invoke-ArchiveStream' {
            #$TestResult = Invoke-ArchiveStream -StreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-BigBlueButtonVideoCall' {
        It 'Test New-BigBlueButtonVideoCall' {
            #$TestResult = New-BigBlueButtonVideoCall
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteTopic' {
        It 'Test Invoke-DeleteTopic' {
            #$TestResult = Invoke-DeleteTopic -StreamId "TEST_VALUE" -TopicName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-StreamId' {
        It 'Test Get-StreamId' {
            #$TestResult = Get-StreamId -Stream "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-StreamTopics' {
        It 'Test Get-StreamTopics' {
            #$TestResult = Get-StreamTopics -StreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Streams' {
        It 'Test Get-Streams' {
            #$TestResult = Get-Streams -IncludePublic "TEST_VALUE" -IncludeWebPublic "TEST_VALUE" -IncludeSubscribed "TEST_VALUE" -IncludeAllActive "TEST_VALUE" -IncludeDefault "TEST_VALUE" -IncludeOwnerSubscribed "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Subscribers' {
        It 'Test Get-Subscribers' {
            #$TestResult = Get-Subscribers -StreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SubscriptionStatus' {
        It 'Test Get-SubscriptionStatus' {
            #$TestResult = Get-SubscriptionStatus -UserId "TEST_VALUE" -StreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Subscriptions' {
        It 'Test Get-Subscriptions' {
            #$TestResult = Get-Subscriptions -IncludeSubscribers "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-MuteTopic' {
        It 'Test Invoke-MuteTopic' {
            #$TestResult = Invoke-MuteTopic -Topic "TEST_VALUE" -Op "TEST_VALUE" -Stream "TEST_VALUE" -StreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-Subscribe' {
        It 'Test Invoke-Subscribe' {
            #$TestResult = Invoke-Subscribe -Subscriptions "TEST_VALUE" -Principals "TEST_VALUE" -AuthorizationErrorsFatal "TEST_VALUE" -Announce "TEST_VALUE" -InviteOnly "TEST_VALUE" -HistoryPublicToSubscribers "TEST_VALUE" -StreamPostPolicy "TEST_VALUE" -MessageRetentionDays "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-Unsubscribe' {
        It 'Test Invoke-Unsubscribe' {
            #$TestResult = Invoke-Unsubscribe -Subscriptions "TEST_VALUE" -Principals "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Stream' {
        It 'Test Update-Stream' {
            #$TestResult = Update-Stream -StreamId "TEST_VALUE" -Description "TEST_VALUE" -NewName "TEST_VALUE" -IsPrivate "TEST_VALUE" -IsAnnouncementOnly "TEST_VALUE" -StreamPostPolicy "TEST_VALUE" -HistoryPublicToSubscribers "TEST_VALUE" -MessageRetentionDays "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-SubscriptionSettings' {
        It 'Test Update-SubscriptionSettings' {
            #$TestResult = Update-SubscriptionSettings -SubscriptionData "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Subscriptions' {
        It 'Test Update-Subscriptions' {
            #$TestResult = Update-Subscriptions -Delete "TEST_VALUE" -Add "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}

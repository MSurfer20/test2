#
# Zulip REST API
# Powerful open source group chat 
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'MessagesApi' {
    Context 'Add-Reaction' {
        It 'Test Add-Reaction' {
            #$TestResult = Add-Reaction -MessageId "TEST_VALUE" -EmojiName "TEST_VALUE" -EmojiCode "TEST_VALUE" -ReactionType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-CheckMessagesMatchNarrow' {
        It 'Test Invoke-CheckMessagesMatchNarrow' {
            #$TestResult = Invoke-CheckMessagesMatchNarrow -MsgIds "TEST_VALUE" -Narrow "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteMessage' {
        It 'Test Invoke-DeleteMessage' {
            #$TestResult = Invoke-DeleteMessage -MessageId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-FileTemporaryUrl' {
        It 'Test Get-FileTemporaryUrl' {
            #$TestResult = Get-FileTemporaryUrl -RealmIdStr "TEST_VALUE" -Filename "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-MessageHistory' {
        It 'Test Get-MessageHistory' {
            #$TestResult = Get-MessageHistory -MessageId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Messages' {
        It 'Test Get-Messages' {
            #$TestResult = Get-Messages -NumBefore "TEST_VALUE" -NumAfter "TEST_VALUE" -Anchor "TEST_VALUE" -Narrow "TEST_VALUE" -ClientGravatar "TEST_VALUE" -ApplyMarkdown "TEST_VALUE" -UseFirstUnreadAnchor "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-RawMessage' {
        It 'Test Get-RawMessage' {
            #$TestResult = Get-RawMessage -MessageId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-MarkAllAsRead' {
        It 'Test Invoke-MarkAllAsRead' {
            #$TestResult = Invoke-MarkAllAsRead
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-MarkStreamAsRead' {
        It 'Test Invoke-MarkStreamAsRead' {
            #$TestResult = Invoke-MarkStreamAsRead -StreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-MarkTopicAsRead' {
        It 'Test Invoke-MarkTopicAsRead' {
            #$TestResult = Invoke-MarkTopicAsRead -StreamId "TEST_VALUE" -TopicName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-Reaction' {
        It 'Test Remove-Reaction' {
            #$TestResult = Remove-Reaction -MessageId "TEST_VALUE" -EmojiName "TEST_VALUE" -EmojiCode "TEST_VALUE" -ReactionType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RenderMessage' {
        It 'Test Invoke-RenderMessage' {
            #$TestResult = Invoke-RenderMessage -Content "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-Message' {
        It 'Test Send-Message' {
            #$TestResult = Send-Message -Type "TEST_VALUE" -To "TEST_VALUE" -Content "TEST_VALUE" -Topic "TEST_VALUE" -QueueId "TEST_VALUE" -LocalId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Message' {
        It 'Test Update-Message' {
            #$TestResult = Update-Message -MessageId "TEST_VALUE" -Topic "TEST_VALUE" -PropagateMode "TEST_VALUE" -SendNotificationToOldThread "TEST_VALUE" -SendNotificationToNewThread "TEST_VALUE" -Content "TEST_VALUE" -StreamId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-MessageFlags' {
        It 'Test Update-MessageFlags' {
            #$TestResult = Update-MessageFlags -Messages "TEST_VALUE" -Op "TEST_VALUE" -Flag "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UploadFile' {
        It 'Test Invoke-UploadFile' {
            #$TestResult = Invoke-UploadFile -Filename "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}

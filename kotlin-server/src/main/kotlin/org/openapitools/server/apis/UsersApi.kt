/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.application.*
import io.ktor.auth.*
import io.ktor.http.*
import io.ktor.response.*
import org.openapitools.server.Paths
import io.ktor.locations.*
import io.ktor.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.AnyType
import org.openapitools.server.models.CodedError
import org.openapitools.server.models.JsonError
import org.openapitools.server.models.JsonSuccess
import org.openapitools.server.models.JsonSuccessBase
import org.openapitools.server.models.OneOfLessThanObjectCommaObjectCommaObjectGreaterThan
import org.openapitools.server.models.OneOfLessThanObjectCommaObjectGreaterThan

@KtorExperimentalLocationsAPI
fun Route.UsersApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    post<Paths.createUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    post<Paths.createUserGroup> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    delete<Paths.deactivateOwnUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    delete<Paths.deactivateUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    get<Paths.getAttachments> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    get<Paths.getOwnUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    get<Paths.getUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    get<Paths.getUserByEmail> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    get<Paths.getUserGroups> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    get<Paths.getUserPresence> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    get<Paths.getUsers> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    post<Paths.muteUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    post<Paths.reactivateUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    delete<Paths.removeUserGroup> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    post<Paths.setTypingStatus> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    delete<Paths.unmuteUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    patch<Paths.updateDisplaySettings> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    patch<Paths.updateNotificationSettings> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    patch<Paths.updateUser> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    patch<Paths.updateUserGroup> {
        call.respond(HttpStatusCode.NotImplemented)
    }

    post<Paths.updateUserGroupMembers> {
        call.respond(HttpStatusCode.NotImplemented)
    }

}

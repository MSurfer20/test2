/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIUsersApiHandler_H
#define OAI_OAIUsersApiHandler_H

#include <QObject>

#include "OAIAnyType.h"
#include "OAICodedError.h"
#include "OAIJsonError.h"
#include "OAIJsonSuccess.h"
#include "OAIJsonSuccessBase.h"
#include "OAIObject.h"
#include "OAIOneOfobjectobject.h"
#include "OAIOneOfobjectobjectobject.h"
#include <QString>

namespace OpenAPI {

class OAIUsersApiHandler : public QObject
{
    Q_OBJECT
    
public:
    OAIUsersApiHandler();
    virtual ~OAIUsersApiHandler();


public slots:
    virtual void createUser(QString email, QString password, QString full_name);
    virtual void createUserGroup(QString name, QString description, QList<qint32> members);
    virtual void deactivateOwnUser();
    virtual void deactivateUser(qint32 user_id);
    virtual void getAttachments();
    virtual void getOwnUser();
    virtual void getUser(qint32 user_id, bool client_gravatar, bool include_custom_profile_fields);
    virtual void getUserByEmail(QString email, bool client_gravatar, bool include_custom_profile_fields);
    virtual void getUserGroups();
    virtual void getUserPresence(QString user_id_or_email);
    virtual void getUsers(bool client_gravatar, bool include_custom_profile_fields);
    virtual void muteUser(qint32 muted_user_id);
    virtual void reactivateUser(qint32 user_id);
    virtual void removeUserGroup(qint32 user_group_id);
    virtual void setTypingStatus(QString op, QList<qint32> to, QString type, QString topic);
    virtual void unmuteUser(qint32 muted_user_id);
    virtual void updateDisplaySettings(bool twenty_four_hour_time, bool dense_mode, bool starred_message_counts, bool fluid_layout_width, bool high_contrast_mode, qint32 color_scheme, bool translate_emoticons, QString default_language, QString default_view, bool left_side_userlist, QString emojiset, qint32 demote_inactive_streams, QString timezone);
    virtual void updateNotificationSettings(bool enable_stream_desktop_notifications, bool enable_stream_email_notifications, bool enable_stream_push_notifications, bool enable_stream_audible_notifications, QString notification_sound, bool enable_desktop_notifications, bool enable_sounds, bool enable_offline_email_notifications, bool enable_offline_push_notifications, bool enable_online_push_notifications, bool enable_digest_emails, bool enable_marketing_emails, bool enable_login_emails, bool message_content_in_email_notifications, bool pm_content_in_desktop_notifications, bool wildcard_mentions_notify, qint32 desktop_icon_count_display, bool realm_name_in_notifications, bool presence_enabled);
    virtual void updateUser(qint32 user_id, QString full_name, qint32 role, QList<OAIObject> profile_data);
    virtual void updateUserGroup(qint32 user_group_id, QString name, QString description);
    virtual void updateUserGroupMembers(qint32 user_group_id, QList<qint32> r_delete, QList<qint32> add);
    

};

}

#endif // OAI_OAIUsersApiHandler_H

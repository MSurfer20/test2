/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmojiReaction_allOf.h
 *
 * 
 */

#ifndef OAIEmojiReaction_allOf_H
#define OAIEmojiReaction_allOf_H

#include <QJsonObject>

#include "OAIAnyType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEmojiReaction_allOf : public OAIObject {
public:
    OAIEmojiReaction_allOf();
    OAIEmojiReaction_allOf(QString json);
    ~OAIEmojiReaction_allOf() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnyType getEmojiCode() const;
    void setEmojiCode(const OAIAnyType &emoji_code);
    bool is_emoji_code_Set() const;
    bool is_emoji_code_Valid() const;

    OAIAnyType getEmojiName() const;
    void setEmojiName(const OAIAnyType &emoji_name);
    bool is_emoji_name_Set() const;
    bool is_emoji_name_Valid() const;

    OAIAnyType getReactionType() const;
    void setReactionType(const OAIAnyType &reaction_type);
    bool is_reaction_type_Set() const;
    bool is_reaction_type_Valid() const;

    OAIAnyType getUserId() const;
    void setUserId(const OAIAnyType &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    OAIAnyType getUser() const;
    void setUser(const OAIAnyType &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnyType emoji_code;
    bool m_emoji_code_isSet;
    bool m_emoji_code_isValid;

    OAIAnyType emoji_name;
    bool m_emoji_name_isSet;
    bool m_emoji_name_isValid;

    OAIAnyType reaction_type;
    bool m_reaction_type_isSet;
    bool m_reaction_type_isValid;

    OAIAnyType user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    OAIAnyType user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmojiReaction_allOf)

#endif // OAIEmojiReaction_allOf_H

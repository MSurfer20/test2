/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessagesBase_topic_links.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessagesBase_topic_links::OAIMessagesBase_topic_links(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessagesBase_topic_links::OAIMessagesBase_topic_links() {
    this->initializeModel();
}

OAIMessagesBase_topic_links::~OAIMessagesBase_topic_links() {}

void OAIMessagesBase_topic_links::initializeModel() {

    m_text_isSet = false;
    m_text_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIMessagesBase_topic_links::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessagesBase_topic_links::fromJsonObject(QJsonObject json) {

    m_text_isValid = ::OpenAPI::fromJsonValue(text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIMessagesBase_topic_links::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessagesBase_topic_links::asJsonObject() const {
    QJsonObject obj;
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(text));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(url));
    }
    return obj;
}

QString OAIMessagesBase_topic_links::getText() const {
    return text;
}
void OAIMessagesBase_topic_links::setText(const QString &text) {
    this->text = text;
    this->m_text_isSet = true;
}

bool OAIMessagesBase_topic_links::is_text_Set() const{
    return m_text_isSet;
}

bool OAIMessagesBase_topic_links::is_text_Valid() const{
    return m_text_isValid;
}

QString OAIMessagesBase_topic_links::getUrl() const {
    return url;
}
void OAIMessagesBase_topic_links::setUrl(const QString &url) {
    this->url = url;
    this->m_url_isSet = true;
}

bool OAIMessagesBase_topic_links::is_url_Set() const{
    return m_url_isSet;
}

bool OAIMessagesBase_topic_links::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIMessagesBase_topic_links::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessagesBase_topic_links::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI

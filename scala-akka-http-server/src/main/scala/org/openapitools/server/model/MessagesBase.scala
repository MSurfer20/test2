package org.openapitools.server.model


/**
 * Object containing details of the message. 
 *
 * @param avatarUrl The URL of the user's avatar.  Can be null only if client_gravatar was passed, which means that the user has not uploaded an avatar in Zulip, and the client should compute the gravatar URL by hashing the user's email address itself for this user.  for example: ''null''
 * @param client A Zulip \"client\" string, describing what Zulip client sent the message.  for example: ''null''
 * @param content The content/body of the message.  for example: ''null''
 * @param contentType The HTTP `content_type` for the message content.  This will be `text/html` or `text/x-markdown`, depending on whether `apply_markdown` was set.  for example: ''null''
 * @param displayRecipient Data on the recipient of the message; either the name of a stream or a dictionary containing basic data on the users who received the message.  for example: ''null''
 * @param id The unique message ID.  Messages should always be displayed sorted by ID.  for example: ''null''
 * @param isMeMessage Whether the message is a [/me status message][status-messages]  [status-messages]: /help/format-your-message-using-markdown#status-messages  for example: ''null''
 * @param reactions Data on any reactions to the message.  for example: ''null''
 * @param recipientId A unique ID for the set of users receiving the message (either a stream or group of users).  Useful primarily for hashing.  for example: ''null''
 * @param senderEmail The Zulip display email address of the message's sender.  for example: ''null''
 * @param senderFullName The full name of the message's sender.  for example: ''null''
 * @param senderId The user ID of the message's sender.  for example: ''null''
 * @param senderRealmStr A string identifier for the realm the sender is in.  Unique only within the context of a given Zulip server.  E.g. on `example.zulip.com`, this will be `example`.  for example: ''null''
 * @param streamId Only present for stream messages; the ID of the stream.  for example: ''null''
 * @param subject The `topic` of the message.  Currently always `\"\"` for private messages, though this could change if Zulip adds support for topics in private message conversations.  The field name is a legacy holdover from when topics were called \"subjects\" and will eventually change.  for example: ''null''
 * @param topicLinks Data on any links to be included in the `topic` line (these are generated by [custom linkification filters](/help/add-a-custom-linkifier) that match content in the message's topic.)  **Changes**: This field contained a list of urls before   Zulip 4.0 (feature level 46).  New in Zulip 3.0 (feature level 1): Previously, this field was called `subject_links`; clients are recommended to rename `subject_links` to `topic_links` if present for compatibility with older Zulip servers.  for example: ''null''
 * @param submessages Data used for certain experimental Zulip integrations.  for example: ''null''
 * @param timestamp The UNIX timestamp for when the message was sent, in UTC seconds.  for example: ''null''
 * @param `type` The type of the message: `stream` or `private`.  for example: ''null''
*/
final case class MessagesBase (
  avatarUrl: Option[String],
  client: Option[String],
  content: Option[String],
  contentType: Option[String],
  displayRecipient: Option[OneOfstringarray],
  id: Option[Int],
  isMeMessage: Option[Boolean],
  reactions: Option[Seq[EmojiReaction]],
  recipientId: Option[Int],
  senderEmail: Option[String],
  senderFullName: Option[String],
  senderId: Option[Int],
  senderRealmStr: Option[String],
  streamId: Option[Int],
  subject: Option[String],
  topicLinks: Option[Seq[MessagesBaseTopicLinks]],
  submessages: Option[Seq[String]],
  timestamp: Option[Int],
  `type`: Option[String]
)


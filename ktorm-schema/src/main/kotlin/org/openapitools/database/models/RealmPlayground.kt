/**
* Zulip REST API
* Powerful open source group chat 
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Object containing details about a realm playground. 
 * @param id The unique ID for the realm playground. 
 * @param name The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49). 
 * @param pygmentsLanguage The name of the Pygments language lexer for that programming language. 
 * @param urlPrefix The url prefix for the playground. 
 */
object RealmPlaygrounds : BaseTable<RealmPlayground>("RealmPlayground") {
    val id = int("id") /* null */ /* The unique ID for the realm playground.  */
    val name = text("name") /* null */ /* The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49).  */
    val pygmentsLanguage = text("pygments_language") /* null */ /* The name of the Pygments language lexer for that programming language.  */
    val urlPrefix = text("url_prefix") /* null */ /* The url prefix for the playground.  */

    /**
     * Create an entity of type RealmPlayground from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = RealmPlayground(
        id = row[id]  /* kotlin.Int? */ /* The unique ID for the realm playground.  */,
        name = row[name]  /* kotlin.String? */ /* The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49).  */,
        pygmentsLanguage = row[pygmentsLanguage]  /* kotlin.String? */ /* The name of the Pygments language lexer for that programming language.  */,
        urlPrefix = row[urlPrefix]  /* kotlin.String? */ /* The url prefix for the playground.  */
    )

    /**
    * Assign all the columns from the entity of type RealmPlayground to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = RealmPlayground()
    * database.update(RealmPlaygrounds, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: RealmPlayground) {
        this.apply {
            set(RealmPlaygrounds.id, entity.id)
            set(RealmPlaygrounds.name, entity.name)
            set(RealmPlaygrounds.pygmentsLanguage, entity.pygmentsLanguage)
            set(RealmPlaygrounds.urlPrefix, entity.urlPrefix)
        }
    }

}



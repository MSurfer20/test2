/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Object containing details of a bot. 
*/
export class BotAllOf {
    'userId'?: any | null;
    'fullName'?: any | null;
    'apiKey'?: any | null;
    'defaultSendingStream'?: any | null;
    'defaultEventsRegisterStream'?: any | null;
    'defaultAllPublicStreams'?: any | null;
    'avatarUrl'?: any | null;
    'ownerId'?: any | null;
    'services'?: any | null;
    /**
    * The email of the bot. 
    */
    'email'?: string;
    /**
    * An integer describing the type of bot: * `1` for a `Generic` bot. * `2` for an `Incoming webhook` bot. * `3` for an `Outgoing webhook` bot. * `4` for an `Embedded` bot. 
    */
    'botType'?: number | null;
    /**
    * A boolean describing whether the user account has been deactivated. 
    */
    'isActive'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "any"
        },
        {
            "name": "fullName",
            "baseName": "full_name",
            "type": "any"
        },
        {
            "name": "apiKey",
            "baseName": "api_key",
            "type": "any"
        },
        {
            "name": "defaultSendingStream",
            "baseName": "default_sending_stream",
            "type": "any"
        },
        {
            "name": "defaultEventsRegisterStream",
            "baseName": "default_events_register_stream",
            "type": "any"
        },
        {
            "name": "defaultAllPublicStreams",
            "baseName": "default_all_public_streams",
            "type": "any"
        },
        {
            "name": "avatarUrl",
            "baseName": "avatar_url",
            "type": "any"
        },
        {
            "name": "ownerId",
            "baseName": "owner_id",
            "type": "any"
        },
        {
            "name": "services",
            "baseName": "services",
            "type": "any"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "botType",
            "baseName": "bot_type",
            "type": "number"
        },
        {
            "name": "isActive",
            "baseName": "is_active",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return BotAllOf.attributeTypeMap;
    }
}


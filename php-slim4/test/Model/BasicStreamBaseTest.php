<?php

/**
 * Zulip REST API
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Powerful open source group chat
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\BasicStreamBase;

/**
 * BasicStreamBaseTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\BasicStreamBase
 */
class BasicStreamBaseTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "BasicStreamBase"
     */
    public function testBasicStreamBase()
    {
        $testBasicStreamBase = new BasicStreamBase();
        $namespacedClassname = BasicStreamBase::getModelsNamespace() . '\\BasicStreamBase';
        $this->assertSame('\\' . BasicStreamBase::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "streamId"
     */
    public function testPropertyStreamId()
    {
        $this->markTestIncomplete(
            'Test of "streamId" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        $this->markTestIncomplete(
            'Test of "name" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        $this->markTestIncomplete(
            'Test of "description" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "dateCreated"
     */
    public function testPropertyDateCreated()
    {
        $this->markTestIncomplete(
            'Test of "dateCreated" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "inviteOnly"
     */
    public function testPropertyInviteOnly()
    {
        $this->markTestIncomplete(
            'Test of "inviteOnly" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "renderedDescription"
     */
    public function testPropertyRenderedDescription()
    {
        $this->markTestIncomplete(
            'Test of "renderedDescription" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isWebPublic"
     */
    public function testPropertyIsWebPublic()
    {
        $this->markTestIncomplete(
            'Test of "isWebPublic" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "streamPostPolicy"
     */
    public function testPropertyStreamPostPolicy()
    {
        $this->markTestIncomplete(
            'Test of "streamPostPolicy" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "messageRetentionDays"
     */
    public function testPropertyMessageRetentionDays()
    {
        $this->markTestIncomplete(
            'Test of "messageRetentionDays" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "historyPublicToSubscribers"
     */
    public function testPropertyHistoryPublicToSubscribers()
    {
        $this->markTestIncomplete(
            'Test of "historyPublicToSubscribers" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "firstMessageId"
     */
    public function testPropertyFirstMessageId()
    {
        $this->markTestIncomplete(
            'Test of "firstMessageId" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isAnnouncementOnly"
     */
    public function testPropertyIsAnnouncementOnly()
    {
        $this->markTestIncomplete(
            'Test of "isAnnouncementOnly" property in "BasicStreamBase" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = BasicStreamBase::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

<?php

/**
 * Zulip REST API
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Powerful open source group chat
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\GetMessages;

/**
 * GetMessagesTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\GetMessages
 */
class GetMessagesTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetMessages"
     */
    public function testGetMessages()
    {
        $testGetMessages = new GetMessages();
        $namespacedClassname = GetMessages::getModelsNamespace() . '\\GetMessages';
        $this->assertSame('\\' . GetMessages::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "avatarUrl"
     */
    public function testPropertyAvatarUrl()
    {
        $this->markTestIncomplete(
            'Test of "avatarUrl" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "client"
     */
    public function testPropertyClient()
    {
        $this->markTestIncomplete(
            'Test of "client" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "content"
     */
    public function testPropertyContent()
    {
        $this->markTestIncomplete(
            'Test of "content" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "contentType"
     */
    public function testPropertyContentType()
    {
        $this->markTestIncomplete(
            'Test of "contentType" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "displayRecipient"
     */
    public function testPropertyDisplayRecipient()
    {
        $this->markTestIncomplete(
            'Test of "displayRecipient" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        $this->markTestIncomplete(
            'Test of "id" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isMeMessage"
     */
    public function testPropertyIsMeMessage()
    {
        $this->markTestIncomplete(
            'Test of "isMeMessage" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "reactions"
     */
    public function testPropertyReactions()
    {
        $this->markTestIncomplete(
            'Test of "reactions" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "recipientId"
     */
    public function testPropertyRecipientId()
    {
        $this->markTestIncomplete(
            'Test of "recipientId" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "senderEmail"
     */
    public function testPropertySenderEmail()
    {
        $this->markTestIncomplete(
            'Test of "senderEmail" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "senderFullName"
     */
    public function testPropertySenderFullName()
    {
        $this->markTestIncomplete(
            'Test of "senderFullName" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "senderId"
     */
    public function testPropertySenderId()
    {
        $this->markTestIncomplete(
            'Test of "senderId" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "senderRealmStr"
     */
    public function testPropertySenderRealmStr()
    {
        $this->markTestIncomplete(
            'Test of "senderRealmStr" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "streamId"
     */
    public function testPropertyStreamId()
    {
        $this->markTestIncomplete(
            'Test of "streamId" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "subject"
     */
    public function testPropertySubject()
    {
        $this->markTestIncomplete(
            'Test of "subject" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "topicLinks"
     */
    public function testPropertyTopicLinks()
    {
        $this->markTestIncomplete(
            'Test of "topicLinks" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "submessages"
     */
    public function testPropertySubmessages()
    {
        $this->markTestIncomplete(
            'Test of "submessages" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "timestamp"
     */
    public function testPropertyTimestamp()
    {
        $this->markTestIncomplete(
            'Test of "timestamp" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        $this->markTestIncomplete(
            'Test of "type" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "flags"
     */
    public function testPropertyFlags()
    {
        $this->markTestIncomplete(
            'Test of "flags" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "lastEditTimestamp"
     */
    public function testPropertyLastEditTimestamp()
    {
        $this->markTestIncomplete(
            'Test of "lastEditTimestamp" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "matchContent"
     */
    public function testPropertyMatchContent()
    {
        $this->markTestIncomplete(
            'Test of "matchContent" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "matchSubject"
     */
    public function testPropertyMatchSubject()
    {
        $this->markTestIncomplete(
            'Test of "matchSubject" property in "GetMessages" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = GetMessages::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

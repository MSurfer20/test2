<?php

/**
 * Zulip REST API
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Powerful open source group chat
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace OpenAPIServer\Model;

use OpenAPIServer\BaseModel;

/**
 * MessagesBase
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class MessagesBase extends BaseModel
{
    /**
     * @var string Models namespace.
     * Can be required for data deserialization when model contains referenced schemas.
     */
    protected const MODELS_NAMESPACE = '\OpenAPIServer\Model';

    /**
     * @var string Constant with OAS schema of current class.
     * Should be overwritten by inherited class.
     */
    protected const MODEL_SCHEMA = <<<'SCHEMA'
{
  "type" : "object",
  "properties" : {
    "avatar_url" : {
      "type" : "string",
      "description" : "The URL of the user's avatar.  Can be null only if client_gravatar was passed,\nwhich means that the user has not uploaded an avatar in Zulip, and the\nclient should compute the gravatar URL by hashing the\nuser's email address itself for this user.\n",
      "nullable" : true
    },
    "client" : {
      "type" : "string",
      "description" : "A Zulip \"client\" string, describing what Zulip client\nsent the message.\n"
    },
    "content" : {
      "type" : "string",
      "description" : "The content/body of the message.\n"
    },
    "content_type" : {
      "type" : "string",
      "description" : "The HTTP `content_type` for the message content.  This\nwill be `text/html` or `text/x-markdown`, depending on\nwhether `apply_markdown` was set.\n"
    },
    "display_recipient" : {
      "description" : "Data on the recipient of the message;\neither the name of a stream or a dictionary containing basic data on\nthe users who received the message.\n",
      "oneOf" : [ {
        "type" : "string"
      }, {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "ID of the user.\n"
            },
            "email" : {
              "type" : "string",
              "description" : "Email of the user.\n"
            },
            "full_name" : {
              "type" : "string",
              "description" : "Full name of the user.\n"
            },
            "is_mirror_dummy" : {
              "type" : "boolean",
              "description" : "Whether the user is a mirror dummy.\n"
            }
          },
          "additionalProperties" : false
        }
      } ]
    },
    "id" : {
      "type" : "integer",
      "description" : "The unique message ID.  Messages should always be\ndisplayed sorted by ID.\n"
    },
    "is_me_message" : {
      "type" : "boolean",
      "description" : "Whether the message is a [/me status message][status-messages]\n\n[status-messages]: /help/format-your-message-using-markdown#status-messages\n"
    },
    "reactions" : {
      "type" : "array",
      "description" : "Data on any reactions to the message.\n",
      "items" : {
        "$ref" : "#/components/schemas/EmojiReaction"
      }
    },
    "recipient_id" : {
      "type" : "integer",
      "description" : "A unique ID for the set of users receiving the\nmessage (either a stream or group of users).  Useful primarily\nfor hashing.\n"
    },
    "sender_email" : {
      "type" : "string",
      "description" : "The Zulip display email address of the message's sender.\n"
    },
    "sender_full_name" : {
      "type" : "string",
      "description" : "The full name of the message's sender.\n"
    },
    "sender_id" : {
      "type" : "integer",
      "description" : "The user ID of the message's sender.\n"
    },
    "sender_realm_str" : {
      "type" : "string",
      "description" : "A string identifier for the realm the sender is in.  Unique only within\nthe context of a given Zulip server.\n\nE.g. on `example.zulip.com`, this will be `example`.\n"
    },
    "stream_id" : {
      "type" : "integer",
      "description" : "Only present for stream messages; the ID of the stream.\n"
    },
    "subject" : {
      "type" : "string",
      "description" : "The `topic` of the message.  Currently always `\"\"` for private messages,\nthough this could change if Zulip adds support for topics in private\nmessage conversations.\n\nThe field name is a legacy holdover from when topics were\ncalled \"subjects\" and will eventually change.\n"
    },
    "topic_links" : {
      "type" : "array",
      "description" : "Data on any links to be included in the `topic`\nline (these are generated by [custom linkification\nfilters](/help/add-a-custom-linkifier) that match content in the\nmessage's topic.)\n\n**Changes**: This field contained a list of urls before\n  Zulip 4.0 (feature level 46).\n\nNew in Zulip 3.0 (feature level 1): Previously, this field was called\n`subject_links`; clients are recommended to rename `subject_links` to `topic_links`\nif present for compatibility with older Zulip servers.\n",
      "items" : {
        "$ref" : "#/components/schemas/MessagesBase_topic_links"
      }
    },
    "submessages" : {
      "type" : "array",
      "description" : "Data used for certain experimental Zulip integrations.\n",
      "items" : {
        "type" : "string"
      }
    },
    "timestamp" : {
      "type" : "integer",
      "description" : "The UNIX timestamp for when the message was sent,\nin UTC seconds.\n"
    },
    "type" : {
      "type" : "string",
      "description" : "The type of the message: `stream` or `private`.\n"
    }
  },
  "description" : "Object containing details of the message.\n"
}
SCHEMA;
}

/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// AddReaction - Add an emoji reaction
func AddReaction(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// CheckMessagesMatchNarrow - Check if messages match a narrow
func CheckMessagesMatchNarrow(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DeleteMessage - Delete a message
func DeleteMessage(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetFileTemporaryUrl - Get public temporary URL
func GetFileTemporaryUrl(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetMessageHistory - Get a message's edit history
func GetMessageHistory(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetMessages - Get messages
func GetMessages(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetRawMessage - Get a message's raw Markdown
func GetRawMessage(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// MarkAllAsRead - Mark all messages as read
func MarkAllAsRead(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// MarkStreamAsRead - Mark messages in a stream as read
func MarkStreamAsRead(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// MarkTopicAsRead - Mark messages in a topic as read
func MarkTopicAsRead(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// RemoveReaction - Remove an emoji reaction
func RemoveReaction(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// RenderMessage - Render message
func RenderMessage(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// SendMessage - Send a message
func SendMessage(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// UpdateMessage - Edit a message
func UpdateMessage(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// UpdateMessageFlags - Update personal message flags
func UpdateMessageFlags(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// UploadFile - Upload a file
func UploadFile(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

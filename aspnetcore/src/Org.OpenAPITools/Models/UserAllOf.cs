/*
 * Zulip REST API
 *
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class UserAllOf : IEquatable<UserAllOf>
    {
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=true)]
        public Object Email { get; set; }

        /// <summary>
        /// Gets or Sets IsBot
        /// </summary>
        [DataMember(Name="is_bot", EmitDefaultValue=true)]
        public Object IsBot { get; set; }

        /// <summary>
        /// Gets or Sets AvatarUrl
        /// </summary>
        [DataMember(Name="avatar_url", EmitDefaultValue=true)]
        public Object AvatarUrl { get; set; }

        /// <summary>
        /// Gets or Sets AvatarVersion
        /// </summary>
        [DataMember(Name="avatar_version", EmitDefaultValue=true)]
        public Object AvatarVersion { get; set; }

        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name="full_name", EmitDefaultValue=true)]
        public Object FullName { get; set; }

        /// <summary>
        /// Gets or Sets IsAdmin
        /// </summary>
        [DataMember(Name="is_admin", EmitDefaultValue=true)]
        public Object IsAdmin { get; set; }

        /// <summary>
        /// Gets or Sets IsOwner
        /// </summary>
        [DataMember(Name="is_owner", EmitDefaultValue=true)]
        public Object IsOwner { get; set; }

        /// <summary>
        /// Gets or Sets IsBillingAdmin
        /// </summary>
        [DataMember(Name="is_billing_admin", EmitDefaultValue=true)]
        public Object IsBillingAdmin { get; set; }

        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        [DataMember(Name="role", EmitDefaultValue=true)]
        public Object Role { get; set; }

        /// <summary>
        /// Gets or Sets BotType
        /// </summary>
        [DataMember(Name="bot_type", EmitDefaultValue=true)]
        public Object BotType { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="user_id", EmitDefaultValue=true)]
        public Object UserId { get; set; }

        /// <summary>
        /// Gets or Sets BotOwnerId
        /// </summary>
        [DataMember(Name="bot_owner_id", EmitDefaultValue=true)]
        public Object BotOwnerId { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="is_active", EmitDefaultValue=true)]
        public Object IsActive { get; set; }

        /// <summary>
        /// Gets or Sets IsGuest
        /// </summary>
        [DataMember(Name="is_guest", EmitDefaultValue=true)]
        public Object IsGuest { get; set; }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name="timezone", EmitDefaultValue=true)]
        public Object Timezone { get; set; }

        /// <summary>
        /// Gets or Sets DateJoined
        /// </summary>
        [DataMember(Name="date_joined", EmitDefaultValue=true)]
        public Object DateJoined { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryEmail
        /// </summary>
        [DataMember(Name="delivery_email", EmitDefaultValue=true)]
        public Object DeliveryEmail { get; set; }

        /// <summary>
        /// Gets or Sets ProfileData
        /// </summary>
        [DataMember(Name="profile_data", EmitDefaultValue=true)]
        public Object ProfileData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserAllOf {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  IsBot: ").Append(IsBot).Append("\n");
            sb.Append("  AvatarUrl: ").Append(AvatarUrl).Append("\n");
            sb.Append("  AvatarVersion: ").Append(AvatarVersion).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  IsAdmin: ").Append(IsAdmin).Append("\n");
            sb.Append("  IsOwner: ").Append(IsOwner).Append("\n");
            sb.Append("  IsBillingAdmin: ").Append(IsBillingAdmin).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("  BotType: ").Append(BotType).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  BotOwnerId: ").Append(BotOwnerId).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsGuest: ").Append(IsGuest).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  DateJoined: ").Append(DateJoined).Append("\n");
            sb.Append("  DeliveryEmail: ").Append(DeliveryEmail).Append("\n");
            sb.Append("  ProfileData: ").Append(ProfileData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((UserAllOf)obj);
        }

        /// <summary>
        /// Returns true if UserAllOf instances are equal
        /// </summary>
        /// <param name="other">Instance of UserAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserAllOf other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) && 
                (
                    IsBot == other.IsBot ||
                    IsBot != null &&
                    IsBot.Equals(other.IsBot)
                ) && 
                (
                    AvatarUrl == other.AvatarUrl ||
                    AvatarUrl != null &&
                    AvatarUrl.Equals(other.AvatarUrl)
                ) && 
                (
                    AvatarVersion == other.AvatarVersion ||
                    AvatarVersion != null &&
                    AvatarVersion.Equals(other.AvatarVersion)
                ) && 
                (
                    FullName == other.FullName ||
                    FullName != null &&
                    FullName.Equals(other.FullName)
                ) && 
                (
                    IsAdmin == other.IsAdmin ||
                    IsAdmin != null &&
                    IsAdmin.Equals(other.IsAdmin)
                ) && 
                (
                    IsOwner == other.IsOwner ||
                    IsOwner != null &&
                    IsOwner.Equals(other.IsOwner)
                ) && 
                (
                    IsBillingAdmin == other.IsBillingAdmin ||
                    IsBillingAdmin != null &&
                    IsBillingAdmin.Equals(other.IsBillingAdmin)
                ) && 
                (
                    Role == other.Role ||
                    Role != null &&
                    Role.Equals(other.Role)
                ) && 
                (
                    BotType == other.BotType ||
                    BotType != null &&
                    BotType.Equals(other.BotType)
                ) && 
                (
                    UserId == other.UserId ||
                    UserId != null &&
                    UserId.Equals(other.UserId)
                ) && 
                (
                    BotOwnerId == other.BotOwnerId ||
                    BotOwnerId != null &&
                    BotOwnerId.Equals(other.BotOwnerId)
                ) && 
                (
                    IsActive == other.IsActive ||
                    IsActive != null &&
                    IsActive.Equals(other.IsActive)
                ) && 
                (
                    IsGuest == other.IsGuest ||
                    IsGuest != null &&
                    IsGuest.Equals(other.IsGuest)
                ) && 
                (
                    Timezone == other.Timezone ||
                    Timezone != null &&
                    Timezone.Equals(other.Timezone)
                ) && 
                (
                    DateJoined == other.DateJoined ||
                    DateJoined != null &&
                    DateJoined.Equals(other.DateJoined)
                ) && 
                (
                    DeliveryEmail == other.DeliveryEmail ||
                    DeliveryEmail != null &&
                    DeliveryEmail.Equals(other.DeliveryEmail)
                ) && 
                (
                    ProfileData == other.ProfileData ||
                    ProfileData != null &&
                    ProfileData.Equals(other.ProfileData)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Email != null)
                    hashCode = hashCode * 59 + Email.GetHashCode();
                    if (IsBot != null)
                    hashCode = hashCode * 59 + IsBot.GetHashCode();
                    if (AvatarUrl != null)
                    hashCode = hashCode * 59 + AvatarUrl.GetHashCode();
                    if (AvatarVersion != null)
                    hashCode = hashCode * 59 + AvatarVersion.GetHashCode();
                    if (FullName != null)
                    hashCode = hashCode * 59 + FullName.GetHashCode();
                    if (IsAdmin != null)
                    hashCode = hashCode * 59 + IsAdmin.GetHashCode();
                    if (IsOwner != null)
                    hashCode = hashCode * 59 + IsOwner.GetHashCode();
                    if (IsBillingAdmin != null)
                    hashCode = hashCode * 59 + IsBillingAdmin.GetHashCode();
                    if (Role != null)
                    hashCode = hashCode * 59 + Role.GetHashCode();
                    if (BotType != null)
                    hashCode = hashCode * 59 + BotType.GetHashCode();
                    if (UserId != null)
                    hashCode = hashCode * 59 + UserId.GetHashCode();
                    if (BotOwnerId != null)
                    hashCode = hashCode * 59 + BotOwnerId.GetHashCode();
                    if (IsActive != null)
                    hashCode = hashCode * 59 + IsActive.GetHashCode();
                    if (IsGuest != null)
                    hashCode = hashCode * 59 + IsGuest.GetHashCode();
                    if (Timezone != null)
                    hashCode = hashCode * 59 + Timezone.GetHashCode();
                    if (DateJoined != null)
                    hashCode = hashCode * 59 + DateJoined.GetHashCode();
                    if (DeliveryEmail != null)
                    hashCode = hashCode * 59 + DeliveryEmail.GetHashCode();
                    if (ProfileData != null)
                    hashCode = hashCode * 59 + ProfileData.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(UserAllOf left, UserAllOf right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(UserAllOf left, UserAllOf right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}

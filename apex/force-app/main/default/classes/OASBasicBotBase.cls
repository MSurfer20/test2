/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASBasicBotBase
 */
public class OASBasicBotBase implements OAS.MappedProperties {
    /**
     * The user id of the bot.\n
     * @return userId
     */
    public Integer userId { get; set; }

    /**
     * The full name of the bot.\n
     * @return fullName
     */
    public String fullName { get; set; }

    /**
     * The API key of the bot which it uses to make API requests.\n
     * @return apiKey
     */
    public String apiKey { get; set; }

    /**
     * The default sending stream of the bot. Null if the bot doesn\'t\nhave a default sending stream.\n
     * @return defaultSendingStream
     */
    public String defaultSendingStream { get; set; }

    /**
     * The default stream for which the bot receives events/register data. Null if\nthe bot doesn\'t have such a default stream.\n
     * @return defaultEventsRegisterStream
     */
    public String defaultEventsRegisterStream { get; set; }

    /**
     * Whether the bot can send messages to all streams by default.\n
     * @return defaultAllPublicStreams
     */
    public Boolean defaultAllPublicStreams { get; set; }

    /**
     * The URL of the bot\'s avatar.\n
     * @return avatarUrl
     */
    public String avatarUrl { get; set; }

    /**
     * The user id of the bot\'s owner.\n\nNull if the bot has no owner.\n
     * @return ownerId
     */
    public Integer ownerId { get; set; }

    /**
     * The "Services" array contains extra configuration fields only relevant\nfor Outgoing webhook bots and Embedded bots.  It is always a single-element\narray.\n\nWe consider this part of the Zulip API to be unstable; it is used only for\nUI elements for administering bots and is likely to change.\n
     * @return services
     */
    public List<OASOneOfobjectobject> services { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'user_id' => 'userId',
        'full_name' => 'fullName',
        'api_key' => 'apiKey',
        'default_sending_stream' => 'defaultSendingStream',
        'default_events_register_stream' => 'defaultEventsRegisterStream',
        'default_all_public_streams' => 'defaultAllPublicStreams',
        'avatar_url' => 'avatarUrl',
        'owner_id' => 'ownerId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASBasicBotBase() {
        services = new List<OASOneOfobjectobject>();
    }

    public static OASBasicBotBase getExample() {
        OASBasicBotBase basicBotBase = new OASBasicBotBase();
          basicBotBase.userId = 0;
          basicBotBase.fullName = '';
          basicBotBase.apiKey = '';
          basicBotBase.defaultSendingStream = '';
          basicBotBase.defaultEventsRegisterStream = '';
          basicBotBase.defaultAllPublicStreams = true;
          basicBotBase.avatarUrl = '';
          basicBotBase.ownerId = 0;
          basicBotBase.services = new List<OASOneOfobjectobject>{OASOneOfobjectobject.getExample()};
        return basicBotBase;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASBasicBotBase) {           
            OASBasicBotBase basicBotBase = (OASBasicBotBase) obj;
            return this.userId == basicBotBase.userId
                && this.fullName == basicBotBase.fullName
                && this.apiKey == basicBotBase.apiKey
                && this.defaultSendingStream == basicBotBase.defaultSendingStream
                && this.defaultEventsRegisterStream == basicBotBase.defaultEventsRegisterStream
                && this.defaultAllPublicStreams == basicBotBase.defaultAllPublicStreams
                && this.avatarUrl == basicBotBase.avatarUrl
                && this.ownerId == basicBotBase.ownerId
                && this.services == basicBotBase.services;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (userId == null ? 0 : System.hashCode(userId));
        hashCode = (17 * hashCode) + (fullName == null ? 0 : System.hashCode(fullName));
        hashCode = (17 * hashCode) + (apiKey == null ? 0 : System.hashCode(apiKey));
        hashCode = (17 * hashCode) + (defaultSendingStream == null ? 0 : System.hashCode(defaultSendingStream));
        hashCode = (17 * hashCode) + (defaultEventsRegisterStream == null ? 0 : System.hashCode(defaultEventsRegisterStream));
        hashCode = (17 * hashCode) + (defaultAllPublicStreams == null ? 0 : System.hashCode(defaultAllPublicStreams));
        hashCode = (17 * hashCode) + (avatarUrl == null ? 0 : System.hashCode(avatarUrl));
        hashCode = (17 * hashCode) + (ownerId == null ? 0 : System.hashCode(ownerId));
        hashCode = (17 * hashCode) + (services == null ? 0 : System.hashCode(services));
        return hashCode;
    }
}


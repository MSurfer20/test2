/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASUser
 */
public class OASUser implements OASUserBase, OASUserAllOf, OAS.MappedProperties {
    /**
     * Get email
     * @return email
     */
    public oas_any_type_not_mapped email { get; set; }

    /**
     * Get isBot
     * @return isBot
     */
    public oas_any_type_not_mapped isBot { get; set; }

    /**
     * Get avatarUrl
     * @return avatarUrl
     */
    public oas_any_type_not_mapped avatarUrl { get; set; }

    /**
     * Get avatarVersion
     * @return avatarVersion
     */
    public oas_any_type_not_mapped avatarVersion { get; set; }

    /**
     * Get fullName
     * @return fullName
     */
    public oas_any_type_not_mapped fullName { get; set; }

    /**
     * Get isAdmin
     * @return isAdmin
     */
    public oas_any_type_not_mapped isAdmin { get; set; }

    /**
     * Get isOwner
     * @return isOwner
     */
    public oas_any_type_not_mapped isOwner { get; set; }

    /**
     * Get isBillingAdmin
     * @return isBillingAdmin
     */
    public oas_any_type_not_mapped isBillingAdmin { get; set; }

    /**
     * Get role
     * @return role
     */
    public oas_any_type_not_mapped role { get; set; }

    /**
     * Get botType
     * @return botType
     */
    public oas_any_type_not_mapped botType { get; set; }

    /**
     * Get userId
     * @return userId
     */
    public oas_any_type_not_mapped userId { get; set; }

    /**
     * Get botOwnerId
     * @return botOwnerId
     */
    public oas_any_type_not_mapped botOwnerId { get; set; }

    /**
     * Get isActive
     * @return isActive
     */
    public oas_any_type_not_mapped isActive { get; set; }

    /**
     * Get isGuest
     * @return isGuest
     */
    public oas_any_type_not_mapped isGuest { get; set; }

    /**
     * Get timezone
     * @return timezone
     */
    public oas_any_type_not_mapped timezone { get; set; }

    /**
     * Get dateJoined
     * @return dateJoined
     */
    public oas_any_type_not_mapped dateJoined { get; set; }

    /**
     * Get deliveryEmail
     * @return deliveryEmail
     */
    public oas_any_type_not_mapped deliveryEmail { get; set; }

    /**
     * Get profileData
     * @return profileData
     */
    public oas_any_type_not_mapped profileData { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_bot' => 'isBot',
        'avatar_url' => 'avatarUrl',
        'avatar_version' => 'avatarVersion',
        'full_name' => 'fullName',
        'is_admin' => 'isAdmin',
        'is_owner' => 'isOwner',
        'is_billing_admin' => 'isBillingAdmin',
        'bot_type' => 'botType',
        'user_id' => 'userId',
        'bot_owner_id' => 'botOwnerId',
        'is_active' => 'isActive',
        'is_guest' => 'isGuest',
        'date_joined' => 'dateJoined',
        'delivery_email' => 'deliveryEmail',
        'profile_data' => 'profileData'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASUser getExample() {
        OASUser user = new OASUser();
          user.email = oas_any_type_not_mapped.getExample();
          user.isBot = oas_any_type_not_mapped.getExample();
          user.avatarUrl = oas_any_type_not_mapped.getExample();
          user.avatarVersion = oas_any_type_not_mapped.getExample();
          user.fullName = oas_any_type_not_mapped.getExample();
          user.isAdmin = oas_any_type_not_mapped.getExample();
          user.isOwner = oas_any_type_not_mapped.getExample();
          user.isBillingAdmin = oas_any_type_not_mapped.getExample();
          user.role = oas_any_type_not_mapped.getExample();
          user.botType = oas_any_type_not_mapped.getExample();
          user.userId = oas_any_type_not_mapped.getExample();
          user.botOwnerId = oas_any_type_not_mapped.getExample();
          user.isActive = oas_any_type_not_mapped.getExample();
          user.isGuest = oas_any_type_not_mapped.getExample();
          user.timezone = oas_any_type_not_mapped.getExample();
          user.dateJoined = oas_any_type_not_mapped.getExample();
          user.deliveryEmail = oas_any_type_not_mapped.getExample();
          user.profileData = oas_any_type_not_mapped.getExample();
        return user;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUser) {           
            OASUser user = (OASUser) obj;
            return this.email == user.email
                && this.isBot == user.isBot
                && this.avatarUrl == user.avatarUrl
                && this.avatarVersion == user.avatarVersion
                && this.fullName == user.fullName
                && this.isAdmin == user.isAdmin
                && this.isOwner == user.isOwner
                && this.isBillingAdmin == user.isBillingAdmin
                && this.role == user.role
                && this.botType == user.botType
                && this.userId == user.userId
                && this.botOwnerId == user.botOwnerId
                && this.isActive == user.isActive
                && this.isGuest == user.isGuest
                && this.timezone == user.timezone
                && this.dateJoined == user.dateJoined
                && this.deliveryEmail == user.deliveryEmail
                && this.profileData == user.profileData;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (email == null ? 0 : System.hashCode(email));
        hashCode = (17 * hashCode) + (isBot == null ? 0 : System.hashCode(isBot));
        hashCode = (17 * hashCode) + (avatarUrl == null ? 0 : System.hashCode(avatarUrl));
        hashCode = (17 * hashCode) + (avatarVersion == null ? 0 : System.hashCode(avatarVersion));
        hashCode = (17 * hashCode) + (fullName == null ? 0 : System.hashCode(fullName));
        hashCode = (17 * hashCode) + (isAdmin == null ? 0 : System.hashCode(isAdmin));
        hashCode = (17 * hashCode) + (isOwner == null ? 0 : System.hashCode(isOwner));
        hashCode = (17 * hashCode) + (isBillingAdmin == null ? 0 : System.hashCode(isBillingAdmin));
        hashCode = (17 * hashCode) + (role == null ? 0 : System.hashCode(role));
        hashCode = (17 * hashCode) + (botType == null ? 0 : System.hashCode(botType));
        hashCode = (17 * hashCode) + (userId == null ? 0 : System.hashCode(userId));
        hashCode = (17 * hashCode) + (botOwnerId == null ? 0 : System.hashCode(botOwnerId));
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        hashCode = (17 * hashCode) + (isGuest == null ? 0 : System.hashCode(isGuest));
        hashCode = (17 * hashCode) + (timezone == null ? 0 : System.hashCode(timezone));
        hashCode = (17 * hashCode) + (dateJoined == null ? 0 : System.hashCode(dateJoined));
        hashCode = (17 * hashCode) + (deliveryEmail == null ? 0 : System.hashCode(deliveryEmail));
        hashCode = (17 * hashCode) + (profileData == null ? 0 : System.hashCode(profileData));
        return hashCode;
    }
}


/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASAddSubscriptionsResponse
 */
public class OASAddSubscriptionsResponse implements OASJsonSuccessBase, OASAddSubscriptionsResponseAllOf, OAS.MappedProperties {
    /**
     * Get result
     * @return result
     */
    public oas_any_type_not_mapped result { get; set; }

    /**
     * Get msg
     * @return msg
     */
    public oas_any_type_not_mapped msg { get; set; }

    /**
     * A dictionary where the key is the email address of the user/bot and the\nvalue is a list of the names of the streams that were subscribed to as a\nresult of the query.\n
     * @return subscribed
     */
    public Map<String, List<String>> subscribed { get; set; }

    /**
     * A dictionary where the key is the email address of the user/bot and the\nvalue is a list of the names of the streams that the user/bot is already\nsubscribed to.\n
     * @return alreadySubscribed
     */
    public Map<String, List<String>> alreadySubscribed { get; set; }

    /**
     * A list of names of streams that the requesting user/bot was not\nauthorized to subscribe to.  Only present if `authorization_errors_fatal=false`.\n
     * @return unauthorized
     */
    public List<String> unauthorized { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'already_subscribed' => 'alreadySubscribed'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASAddSubscriptionsResponse() {
        subscribed = new Map<String, List<String>>();
        alreadySubscribed = new Map<String, List<String>>();
        unauthorized = new List<String>();
    }

    public static OASAddSubscriptionsResponse getExample() {
        OASAddSubscriptionsResponse addSubscriptionsResponse = new OASAddSubscriptionsResponse();
          addSubscriptionsResponse.result = oas_any_type_not_mapped.getExample();
          addSubscriptionsResponse.msg = oas_any_type_not_mapped.getExample();
          addSubscriptionsResponse.subscribed = new Map<String, List<String>>{'key'=>new List<String>{''}};
          addSubscriptionsResponse.alreadySubscribed = new Map<String, List<String>>{'key'=>new List<String>{''}};
          addSubscriptionsResponse.unauthorized = new List<String>{''};
        return addSubscriptionsResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAddSubscriptionsResponse) {           
            OASAddSubscriptionsResponse addSubscriptionsResponse = (OASAddSubscriptionsResponse) obj;
            return this.result == addSubscriptionsResponse.result
                && this.msg == addSubscriptionsResponse.msg
                && this.subscribed == addSubscriptionsResponse.subscribed
                && this.alreadySubscribed == addSubscriptionsResponse.alreadySubscribed
                && this.unauthorized == addSubscriptionsResponse.unauthorized;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (result == null ? 0 : System.hashCode(result));
        hashCode = (17 * hashCode) + (msg == null ? 0 : System.hashCode(msg));
        hashCode = (17 * hashCode) + (subscribed == null ? 0 : System.hashCode(subscribed));
        hashCode = (17 * hashCode) + (alreadySubscribed == null ? 0 : System.hashCode(alreadySubscribed));
        hashCode = (17 * hashCode) + (unauthorized == null ? 0 : System.hashCode(unauthorized));
        return hashCode;
    }
}


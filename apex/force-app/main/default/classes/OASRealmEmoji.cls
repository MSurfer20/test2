/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * &#x60;{emoji_id}&#x60;: Object containing details about the emoji with\n the specified ID. It has the following properties:\n
 */
public class OASRealmEmoji implements OAS.MappedProperties {
    /**
     * The ID for this emoji, same as the object\'s key.\n
     * @return id
     */
    public String id { get; set; }

    /**
     * The user-friendly name for this emoji. Users in the organization\ncan use this emoji by writing this name between colons (`:name  :`).\n
     * @return name
     */
    public String name { get; set; }

    /**
     * The path relative to the organization\'s URL where the\nemoji\'s image can be found.\n
     * @return sourceUrl
     */
    public String sourceUrl { get; set; }

    /**
     * Whether the emoji has been deactivated or not.\n
     * @return deactivated
     */
    public Boolean deactivated { get; set; }

    /**
     * The user ID of the user who uploaded the custom emoji.\nWill be null if the uploader is unknown.\n\n**Changes**: New in Zulip 3.0 (feature level 7).  Previously\nwas accessible via and `author` object with an `id` field.\n
     * @return authorId
     */
    public Integer authorId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'source_url' => 'sourceUrl',
        'author_id' => 'authorId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'source_url' => 'sourceUrl',
        'author_id' => 'authorId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASRealmEmoji getExample() {
        OASRealmEmoji realmEmoji = new OASRealmEmoji();
          realmEmoji.id = '';
          realmEmoji.name = '';
          realmEmoji.sourceUrl = '';
          realmEmoji.deactivated = true;
          realmEmoji.authorId = 0;
        return realmEmoji;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRealmEmoji) {           
            OASRealmEmoji realmEmoji = (OASRealmEmoji) obj;
            return this.id == realmEmoji.id
                && this.name == realmEmoji.name
                && this.sourceUrl == realmEmoji.sourceUrl
                && this.deactivated == realmEmoji.deactivated
                && this.authorId == realmEmoji.authorId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (sourceUrl == null ? 0 : System.hashCode(sourceUrl));
        hashCode = (17 * hashCode) + (deactivated == null ? 0 : System.hashCode(deactivated));
        hashCode = (17 * hashCode) + (authorId == null ? 0 : System.hashCode(authorId));
        return hashCode;
    }
}


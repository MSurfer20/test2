/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * This is an example of the JSON payload that the Zulip server will &#x60;POST&#x60;\nto your server\n
 */
public class OASInlineResponse200 implements OAS.MappedProperties {
    /**
     * Email of the bot user.\n
     * @return botEmail
     */
    public String botEmail { get; set; }

    /**
     * The full name of the bot user.\n
     * @return botFullName
     */
    public String botFullName { get; set; }

    /**
     * The message content, in raw Markdown format (not rendered to HTML).\n
     * @return data
     */
    public String data { get; set; }

    /**
     * What aspect of the message triggered the outgoing webhook notification.\nPossible values include `private_message` and `mention`.\n
     * @return r_trigger
     */
    public String r_trigger { get; set; }

    /**
     * A string of alphanumeric characters that can be used to authenticate the\nwebhook request (each bot user uses a fixed token). You can get the token used by a given outgoing webhook bot\nin the `zuliprc` file downloaded when creating the bot.\n
     * @return token
     */
    public String token { get; set; }

    /**
     * A dict containing details on the message that triggered the\noutgoing webhook, in the format used by [`GET /messages`](/api/get-messages).\n
     * @return message
     */
    public OASMessagesBase message { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'bot_email' => 'botEmail',
        'bot_full_name' => 'botFullName',
        'trigger' => 'r_trigger'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'bot_email' => 'botEmail',
        'bot_full_name' => 'botFullName',
        'trigger' => 'r_trigger'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'bot_email' => 'botEmail',
        'bot_full_name' => 'botFullName',
        'trigger' => 'r_trigger'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASInlineResponse200 getExample() {
        OASInlineResponse200 inlineResponse200 = new OASInlineResponse200();
          inlineResponse200.botEmail = '';
          inlineResponse200.botFullName = '';
          inlineResponse200.data = '';
          inlineResponse200.r_trigger = '';
          inlineResponse200.token = '';
          inlineResponse200.message = OASMessagesBase.getExample();
        return inlineResponse200;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASInlineResponse200) {           
            OASInlineResponse200 inlineResponse200 = (OASInlineResponse200) obj;
            return this.botEmail == inlineResponse200.botEmail
                && this.botFullName == inlineResponse200.botFullName
                && this.data == inlineResponse200.data
                && this.r_trigger == inlineResponse200.r_trigger
                && this.token == inlineResponse200.token
                && this.message == inlineResponse200.message;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (botEmail == null ? 0 : System.hashCode(botEmail));
        hashCode = (17 * hashCode) + (botFullName == null ? 0 : System.hashCode(botFullName));
        hashCode = (17 * hashCode) + (data == null ? 0 : System.hashCode(data));
        hashCode = (17 * hashCode) + (r_trigger == null ? 0 : System.hashCode(r_trigger));
        hashCode = (17 * hashCode) + (token == null ? 0 : System.hashCode(token));
        hashCode = (17 * hashCode) + (message == null ? 0 : System.hashCode(message));
        return hashCode;
    }
}


/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASBadEventQueueIdErrorAllOf
 */
public class OASBadEventQueueIdErrorAllOf implements OAS.MappedProperties {
    /**
     * Get result
     * @return result
     */
    public oas_any_type_not_mapped result { get; set; }

    /**
     * Get msg
     * @return msg
     */
    public oas_any_type_not_mapped msg { get; set; }

    /**
     * Get code
     * @return code
     */
    public oas_any_type_not_mapped code { get; set; }

    /**
     * The string that identifies the invalid event queue.\n
     * @return queueId
     */
    public String queueId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'queue_id' => 'queueId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASBadEventQueueIdErrorAllOf getExample() {
        OASBadEventQueueIdErrorAllOf badEventQueueIdErrorAllOf = new OASBadEventQueueIdErrorAllOf();
          badEventQueueIdErrorAllOf.result = oas_any_type_not_mapped.getExample();
          badEventQueueIdErrorAllOf.msg = oas_any_type_not_mapped.getExample();
          badEventQueueIdErrorAllOf.code = oas_any_type_not_mapped.getExample();
          badEventQueueIdErrorAllOf.queueId = '';
        return badEventQueueIdErrorAllOf;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASBadEventQueueIdErrorAllOf) {           
            OASBadEventQueueIdErrorAllOf badEventQueueIdErrorAllOf = (OASBadEventQueueIdErrorAllOf) obj;
            return this.result == badEventQueueIdErrorAllOf.result
                && this.msg == badEventQueueIdErrorAllOf.msg
                && this.code == badEventQueueIdErrorAllOf.code
                && this.queueId == badEventQueueIdErrorAllOf.queueId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (result == null ? 0 : System.hashCode(result));
        hashCode = (17 * hashCode) + (msg == null ? 0 : System.hashCode(msg));
        hashCode = (17 * hashCode) + (code == null ? 0 : System.hashCode(code));
        hashCode = (17 * hashCode) + (queueId == null ? 0 : System.hashCode(queueId));
        return hashCode;
    }
}


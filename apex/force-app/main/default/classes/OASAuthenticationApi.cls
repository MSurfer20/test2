/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASAuthenticationApi {
    OASClient client;

    public OASAuthenticationApi(OASClient client) {
        this.client = client;
    }

    public OASAuthenticationApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Fetch an API key (development only)
     * For easy testing of mobile apps and other clients and against Zulip\ndevelopment servers, we support fetching a Zulip API key for any user\non the development server without authentication (so that they can\nimplement analogues of the one-click login process available for Zulip\ndevelopment servers on the web).\n\n**Note:** This endpoint is only available on Zulip development\nservers; for obvious security reasons it will always return an error\nin a Zulip production server.\n\n&#x60;POST {{ api_url }}/v1/dev_fetch_api_key&#x60;\n
     * @param username The email address for the user that owns the API key.\n (required)
     * @return OASApiKeyResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASApiKeyResponse devFetchApiKey(Map<String, Object> params) {
        client.assertNotNull(params.get('username'), 'username');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('username', (String) params.get('username')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASApiKeyResponse) client.invoke(
            'POST', '/dev_fetch_api_key', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASApiKeyResponse.class
        );
    }
    /**
     * Fetch an API key (production)
     * This API endpoint is used by clients such as the Zulip mobile and\nterminal apps to implement password-based authentication.  Given the\nuser\&#39;s Zulip login credentials, it returns a Zulip API key that the client\ncan use to make requests requests as the user.\n\nThis endpoint is only useful for Zulip servers/organizations with\nEmailAuthBackend or LDAPAuthBackend enabled.\n\nThe Zulip mobile apps also support SSO/social authentication (GitHub\nauth, Google auth, SAML, etc.) that does not use this endpoint.  Instead,\nthe mobile apps reuse the web login flow passing the &#x60;mobile_flow_otp&#x60; in\na webview, and the credentials are returned to the app (encrypted) via a redirect\nto a &#x60;zulip://&#x60; URL.\n\n!!! warn &quot;&quot;\n    **Note:** If you signed up using passwordless authentication and\n    never had a password, you can [reset your password](/help/change-your-password).\n\n    See the [API keys](/api/api-keys) documentation for\n    more details on how to download API key manually.\n\nIn a [Zulip development environment](https://zulip.readthedocs.io/en/latest/development/overview.html),\nsee also [the unauthenticated variant](/api/dev-fetch-api-key).\n
     * @param username The username to be used for authentication (typically, the email\naddress, but depending on configuration, it could be an LDAP username).\n\nSee the &#x60;require_email_format_usernames&#x60; parameter documented in\n[GET /server_settings](/api/get-server-settings) for details.\n (required)
     * @param password The user\&#39;s Zulip password (or LDAP password, if LDAP authentication is in use).\n (required)
     * @return OASApiKeyResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASApiKeyResponse fetchApiKey(Map<String, Object> params) {
        client.assertNotNull(params.get('username'), 'username');
        client.assertNotNull(params.get('password'), 'password');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('username', (String) params.get('username')));
        query.addAll(client.makeParam('password', (String) params.get('password')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASApiKeyResponse) client.invoke(
            'POST', '/fetch_api_key', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASApiKeyResponse.class
        );
    }
}

/*
 * Zulip REST API
 * Powerful open source group chat\n
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASDraftsApi {
    OASClient client;

    public OASDraftsApi(OASClient client) {
        this.client = client;
    }

    public OASDraftsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create drafts
     * Create one or more drafts on the server. These drafts will be automatically\nsynchronized to other clients via &#x60;drafts&#x60; events.\n\n&#x60;POST {{ api_url }}/v1/drafts&#x60;\n
     * @param drafts A JSON-encoded list of containing new draft objects.\n (optional, default to new List<OASDraft>())
     * @return OASJsonSuccess
     * @throws OAS.ApiException if fails to make API call
     */
    public OASJsonSuccess createDrafts(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParams('drafts', (List<OASDraft>) params.get('drafts')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASJsonSuccess) client.invoke(
            'POST', '/drafts', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASJsonSuccess.class
        );
    }
    /**
     * Delete a draft
     * Delete a single draft from the server. The deletion will be automatically\nsynchronized to other clients via a &#x60;drafts&#x60; event.\n\n&#x60;DELETE {{ api_url }}/v1/drafts/{draft_id}&#x60;\n
     * @param draftId The ID of the draft you want to delete.\n (required)
     * @return OASJsonSuccess
     * @throws OAS.ApiException if fails to make API call
     */
    public OASJsonSuccess deleteDraft(Map<String, Object> params) {
        client.assertNotNull(params.get('draftId'), 'draftId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASJsonSuccess) client.invoke(
            'DELETE', '/drafts/{draft_id}', '',
            query, form,
            new Map<String, Object>{
                'draft_id' => (Integer) params.get('draftId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASJsonSuccess.class
        );
    }
    /**
     * Edit a draft
     * Edit a draft on the server. The edit will be automatically\nsynchronized to other clients via &#x60;drafts&#x60; events.\n\n&#x60;PATCH {{ api_url }}/v1/drafts/{draft_id}&#x60;\n
     * @param draftId The ID of the draft to be edited.\n (required)
     * @param draft A JSON-encoded object containing a replacement draft object for this ID.\n (required)
     * @return OASJsonSuccess
     * @throws OAS.ApiException if fails to make API call
     */
    public OASJsonSuccess editDraft(Map<String, Object> params) {
        client.assertNotNull(params.get('draftId'), 'draftId');
        client.assertNotNull(params.get('draft'), 'draft');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('draft', (OASDraft) params.get('draft')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASJsonSuccess) client.invoke(
            'PATCH', '/drafts/{draft_id}', '',
            query, form,
            new Map<String, Object>{
                'draft_id' => (Integer) params.get('draftId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASJsonSuccess.class
        );
    }
    /**
     * Get drafts
     * Fetch all drafts for the current user.\n\n&#x60;GET {{ api_url }}/v1/drafts&#x60;\n
     * @return OASJsonSuccess
     * @throws OAS.ApiException if fails to make API call
     */
    public OASJsonSuccess getDrafts() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASJsonSuccess) client.invoke(
            'GET', '/drafts', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASJsonSuccess.class
        );
    }
}

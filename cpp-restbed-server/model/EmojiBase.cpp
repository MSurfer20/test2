/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "EmojiBase.h"

#include <string>
#include <sstream>
#include <stdexcept>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

EmojiBase::EmojiBase()
{
	m_Emoji_code = "";
	m_Emoji_name = "";
	m_Reaction_type = "";
}

EmojiBase::~EmojiBase()
{
}

std::string EmojiBase::toJsonString(bool prettyJson)
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
	return ss.str();
}

void EmojiBase::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree EmojiBase::toPropertyTree()
{
	ptree pt;
	ptree tmp_node;
	pt.put("emoji_code", m_Emoji_code);
	pt.put("emoji_name", m_Emoji_name);
	pt.put("reaction_type", m_Reaction_type);
	return pt;
}

void EmojiBase::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Emoji_code = pt.get("emoji_code", "");
	m_Emoji_name = pt.get("emoji_name", "");
	m_Reaction_type = pt.get("reaction_type", "");
}

std::string EmojiBase::getEmojiCode() const
{
    return m_Emoji_code;
}
void EmojiBase::setEmojiCode(std::string value)
{
	m_Emoji_code = value;
}
std::string EmojiBase::getEmojiName() const
{
    return m_Emoji_name;
}
void EmojiBase::setEmojiName(std::string value)
{
	m_Emoji_name = value;
}
std::string EmojiBase::getReactionType() const
{
    return m_Reaction_type;
}
void EmojiBase::setReactionType(std::string value)
{
	m_Reaction_type = value;
}

}
}
}
}


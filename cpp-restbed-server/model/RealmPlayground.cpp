/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "RealmPlayground.h"

#include <string>
#include <sstream>
#include <stdexcept>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

RealmPlayground::RealmPlayground()
{
	m_Id = 0;
	m_Name = "";
	m_Pygments_language = "";
	m_Url_prefix = "";
}

RealmPlayground::~RealmPlayground()
{
}

std::string RealmPlayground::toJsonString(bool prettyJson)
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
	return ss.str();
}

void RealmPlayground::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree RealmPlayground::toPropertyTree()
{
	ptree pt;
	ptree tmp_node;
	pt.put("id", m_Id);
	pt.put("name", m_Name);
	pt.put("pygments_language", m_Pygments_language);
	pt.put("url_prefix", m_Url_prefix);
	return pt;
}

void RealmPlayground::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Id = pt.get("id", 0);
	m_Name = pt.get("name", "");
	m_Pygments_language = pt.get("pygments_language", "");
	m_Url_prefix = pt.get("url_prefix", "");
}

int32_t RealmPlayground::getId() const
{
    return m_Id;
}
void RealmPlayground::setId(int32_t value)
{
	m_Id = value;
}
std::string RealmPlayground::getName() const
{
    return m_Name;
}
void RealmPlayground::setName(std::string value)
{
	m_Name = value;
}
std::string RealmPlayground::getPygmentsLanguage() const
{
    return m_Pygments_language;
}
void RealmPlayground::setPygmentsLanguage(std::string value)
{
	m_Pygments_language = value;
}
std::string RealmPlayground::getUrlPrefix() const
{
    return m_Url_prefix;
}
void RealmPlayground::setUrlPrefix(std::string value)
{
	m_Url_prefix = value;
}

}
}
}
}


/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Hotspot.h
 *
 * Dictionary containing details of a single hotspot. 
 */

#ifndef Hotspot_H_
#define Hotspot_H_



#include <string>
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Dictionary containing details of a single hotspot. 
/// </summary>
class  Hotspot 
{
public:
    Hotspot();
    virtual ~Hotspot();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// Hotspot members

    /// <summary>
    /// The delay after which the user should be shown the hotspot. 
    /// </summary>
    double getDelay() const;
    void setDelay(double value);

    /// <summary>
    /// The name of the hotspot. 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// The title of the hotspot, as will be displayed to the user. 
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string value);

    /// <summary>
    /// The description of the hotspot, as will be displayed to the user. 
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string value);
protected:
    double m_Delay;
    std::string m_Name;
    std::string m_Title;
    std::string m_Description;
};

}
}
}
}

#endif /* Hotspot_H_ */

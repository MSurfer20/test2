/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * EmojiReactionBase.h
 *
 * 
 */

#ifndef EmojiReactionBase_H_
#define EmojiReactionBase_H_



#include "EmojiReactionBase_allOf.h"
#include "EmojiBase.h"
#include "EmojiReactionBase_allOf_user.h"
#include <string>
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  EmojiReactionBase : public EmojiBase, public EmojiReactionBase_allOf
{
public:
    EmojiReactionBase();
    virtual ~EmojiReactionBase();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// EmojiReactionBase members

    /// <summary>
    /// A unique identifier, defining the specific emoji codepoint requested, within the namespace of the &#x60;reaction_type&#x60;.  For example, for &#x60;unicode_emoji&#x60;, this will be an encoding of the Unicode codepoint; for &#x60;realm_emoji&#x60;, it&#39;ll be the ID of the realm emoji. 
    /// </summary>
    std::string getEmojiCode() const;
    void setEmojiCode(std::string value);

    /// <summary>
    /// Name of the emoji. 
    /// </summary>
    std::string getEmojiName() const;
    void setEmojiName(std::string value);

    /// <summary>
    /// One of the following values:  * &#x60;unicode_emoji&#x60;: Unicode emoji (&#x60;emoji_code&#x60; will be its Unicode   codepoint). * &#x60;realm_emoji&#x60;: [Custom emoji](/help/add-custom-emoji).   (&#x60;emoji_code&#x60; will be its ID). * &#x60;zulip_extra_emoji&#x60;: Special emoji included with Zulip.  Exists to   namespace the &#x60;zulip&#x60; emoji. 
    /// </summary>
    std::string getReactionType() const;
    void setReactionType(std::string value);

    /// <summary>
    /// The ID of the user who added the reaction.  **Changes**: New in Zulip 3.0 (feature level 2). The &#x60;user&#x60; object is deprecated and will be removed in the future. 
    /// </summary>
    int32_t getUserId() const;
    void setUserId(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<EmojiReactionBase_allOf_user> getUser() const;
    void setUser(std::shared_ptr<EmojiReactionBase_allOf_user> value);
protected:
    std::string m_Emoji_code;
    std::string m_Emoji_name;
    std::string m_Reaction_type;
    int32_t m_User_id;
    std::shared_ptr<EmojiReactionBase_allOf_user> m_User;
};

}
}
}
}

#endif /* EmojiReactionBase_H_ */

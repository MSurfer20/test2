/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RealmPlayground.h
 *
 * Object containing details about a realm playground. 
 */

#ifndef RealmPlayground_H_
#define RealmPlayground_H_



#include <string>
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Object containing details about a realm playground. 
/// </summary>
class  RealmPlayground 
{
public:
    RealmPlayground();
    virtual ~RealmPlayground();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// RealmPlayground members

    /// <summary>
    /// The unique ID for the realm playground. 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);

    /// <summary>
    /// The user-visible display name of the playground.  Clients should display this in UI for picking which playground to open a code block in, to differentiate between multiple configured playground options for a given pygments language.  **Changes**: New in Zulip 4.0 (feature level 49). 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// The name of the Pygments language lexer for that programming language. 
    /// </summary>
    std::string getPygmentsLanguage() const;
    void setPygmentsLanguage(std::string value);

    /// <summary>
    /// The url prefix for the playground. 
    /// </summary>
    std::string getUrlPrefix() const;
    void setUrlPrefix(std::string value);
protected:
    int32_t m_Id;
    std::string m_Name;
    std::string m_Pygments_language;
    std::string m_Url_prefix;
};

}
}
}
}

#endif /* RealmPlayground_H_ */

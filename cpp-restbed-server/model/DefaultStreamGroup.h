/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DefaultStreamGroup.h
 *
 * Dictionary containing details of a default stream group. 
 */

#ifndef DefaultStreamGroup_H_
#define DefaultStreamGroup_H_



#include "BasicStream.h"
#include <string>
#include <vector>
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Dictionary containing details of a default stream group. 
/// </summary>
class  DefaultStreamGroup 
{
public:
    DefaultStreamGroup();
    virtual ~DefaultStreamGroup();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// DefaultStreamGroup members

    /// <summary>
    /// Name of the default stream group. 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// Description of the default stream group. 
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string value);

    /// <summary>
    /// id of the default stream group. 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);

    /// <summary>
    /// Array containing details about the streams in the default stream group. 
    /// </summary>
    std::vector<std::shared_ptr<BasicStream>> getStreams() const;
    void setStreams(std::vector<std::shared_ptr<BasicStream>> value);
protected:
    std::string m_Name;
    std::string m_Description;
    int32_t m_Id;
    std::vector<std::shared_ptr<BasicStream>> m_Streams;
};

}
}
}
}

#endif /* DefaultStreamGroup_H_ */

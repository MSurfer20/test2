/**
 * Zulip REST API
 * Powerful open source group chat 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RealmEmoji.h
 *
 * &#x60;{emoji_id}&#x60;: Object containing details about the emoji with  the specified ID. It has the following properties: 
 */

#ifndef RealmEmoji_H_
#define RealmEmoji_H_



#include <string>
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// &#x60;{emoji_id}&#x60;: Object containing details about the emoji with  the specified ID. It has the following properties: 
/// </summary>
class  RealmEmoji 
{
public:
    RealmEmoji();
    virtual ~RealmEmoji();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// RealmEmoji members

    /// <summary>
    /// The ID for this emoji, same as the object&#39;s key. 
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// The user-friendly name for this emoji. Users in the organization can use this emoji by writing this name between colons (&#x60;:name  :&#x60;). 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// The path relative to the organization&#39;s URL where the emoji&#39;s image can be found. 
    /// </summary>
    std::string getSourceUrl() const;
    void setSourceUrl(std::string value);

    /// <summary>
    /// Whether the emoji has been deactivated or not. 
    /// </summary>
    bool isDeactivated() const;
    void setDeactivated(bool value);

    /// <summary>
    /// The user ID of the user who uploaded the custom emoji. Will be null if the uploader is unknown.  **Changes**: New in Zulip 3.0 (feature level 7).  Previously was accessible via and &#x60;author&#x60; object with an &#x60;id&#x60; field. 
    /// </summary>
    int32_t getAuthorId() const;
    void setAuthorId(int32_t value);
protected:
    std::string m_Id;
    std::string m_Name;
    std::string m_Source_url;
    bool m_Deactivated;
    int32_t m_Author_id;
};

}
}
}
}

#endif /* RealmEmoji_H_ */
